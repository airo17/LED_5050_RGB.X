

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Aug 18 20:23:06 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,delta=2
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.40
    80                           ; Generated 17/11/2021 GMT
    81                           ; 
    82                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1937 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008F                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0110                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011D                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018F                     	;# 
   184  0190                     	;# 
   185  0191                     	;# 
   186  0191                     	;# 
   187  0192                     	;# 
   188  0193                     	;# 
   189  0193                     	;# 
   190  0193                     	;# 
   191  0194                     	;# 
   192  0195                     	;# 
   193  0196                     	;# 
   194  0199                     	;# 
   195  019A                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  020D                     	;# 
   206  0210                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0216                     	;# 
   214  0217                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0294                     	;# 
   220  0295                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0298                     	;# 
   224  0298                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029C                     	;# 
   230  029D                     	;# 
   231  029E                     	;# 
   232  029F                     	;# 
   233  0311                     	;# 
   234  0311                     	;# 
   235  0312                     	;# 
   236  0313                     	;# 
   237  0314                     	;# 
   238  0315                     	;# 
   239  0315                     	;# 
   240  0316                     	;# 
   241  0318                     	;# 
   242  0318                     	;# 
   243  0319                     	;# 
   244  031A                     	;# 
   245  031C                     	;# 
   246  031C                     	;# 
   247  031D                     	;# 
   248  031E                     	;# 
   249  0394                     	;# 
   250  0395                     	;# 
   251  0396                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  0791                     	;# 
   259  0792                     	;# 
   260  0793                     	;# 
   261  0794                     	;# 
   262  0795                     	;# 
   263  0798                     	;# 
   264  0799                     	;# 
   265  079A                     	;# 
   266  07A0                     	;# 
   267  07A1                     	;# 
   268  07A2                     	;# 
   269  07A3                     	;# 
   270  07A4                     	;# 
   271  07A5                     	;# 
   272  07A6                     	;# 
   273  07A7                     	;# 
   274  07A8                     	;# 
   275  07A9                     	;# 
   276  07AA                     	;# 
   277  07AB                     	;# 
   278  0FE4                     	;# 
   279  0FE5                     	;# 
   280  0FE6                     	;# 
   281  0FE7                     	;# 
   282  0FE8                     	;# 
   283  0FE9                     	;# 
   284  0FEA                     	;# 
   285  0FEB                     	;# 
   286  0FED                     	;# 
   287  0FEE                     	;# 
   288  0FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  008F                     	;# 
   324  0090                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  010F                     	;# 
   343  0110                     	;# 
   344  0111                     	;# 
   345  0112                     	;# 
   346  0113                     	;# 
   347  0114                     	;# 
   348  0115                     	;# 
   349  0116                     	;# 
   350  0117                     	;# 
   351  0118                     	;# 
   352  0119                     	;# 
   353  011A                     	;# 
   354  011B                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  018F                     	;# 
   359  0190                     	;# 
   360  0191                     	;# 
   361  0191                     	;# 
   362  0192                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0193                     	;# 
   366  0194                     	;# 
   367  0195                     	;# 
   368  0196                     	;# 
   369  0199                     	;# 
   370  019A                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019C                     	;# 
   376  019C                     	;# 
   377  019D                     	;# 
   378  019E                     	;# 
   379  019F                     	;# 
   380  020D                     	;# 
   381  0210                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0216                     	;# 
   389  0217                     	;# 
   390  0291                     	;# 
   391  0291                     	;# 
   392  0292                     	;# 
   393  0293                     	;# 
   394  0294                     	;# 
   395  0295                     	;# 
   396  0295                     	;# 
   397  0296                     	;# 
   398  0298                     	;# 
   399  0298                     	;# 
   400  0299                     	;# 
   401  029A                     	;# 
   402  029B                     	;# 
   403  029C                     	;# 
   404  029C                     	;# 
   405  029D                     	;# 
   406  029E                     	;# 
   407  029F                     	;# 
   408  0311                     	;# 
   409  0311                     	;# 
   410  0312                     	;# 
   411  0313                     	;# 
   412  0314                     	;# 
   413  0315                     	;# 
   414  0315                     	;# 
   415  0316                     	;# 
   416  0318                     	;# 
   417  0318                     	;# 
   418  0319                     	;# 
   419  031A                     	;# 
   420  031C                     	;# 
   421  031C                     	;# 
   422  031D                     	;# 
   423  031E                     	;# 
   424  0394                     	;# 
   425  0395                     	;# 
   426  0396                     	;# 
   427  0415                     	;# 
   428  0416                     	;# 
   429  0417                     	;# 
   430  041C                     	;# 
   431  041D                     	;# 
   432  041E                     	;# 
   433  0791                     	;# 
   434  0792                     	;# 
   435  0793                     	;# 
   436  0794                     	;# 
   437  0795                     	;# 
   438  0798                     	;# 
   439  0799                     	;# 
   440  079A                     	;# 
   441  07A0                     	;# 
   442  07A1                     	;# 
   443  07A2                     	;# 
   444  07A3                     	;# 
   445  07A4                     	;# 
   446  07A5                     	;# 
   447  07A6                     	;# 
   448  07A7                     	;# 
   449  07A8                     	;# 
   450  07A9                     	;# 
   451  07AA                     	;# 
   452  07AB                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001C                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  008F                     	;# 
   499  0090                     	;# 
   500  0091                     	;# 
   501  0092                     	;# 
   502  0093                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009B                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  0110                     	;# 
   519  0111                     	;# 
   520  0112                     	;# 
   521  0113                     	;# 
   522  0114                     	;# 
   523  0115                     	;# 
   524  0116                     	;# 
   525  0117                     	;# 
   526  0118                     	;# 
   527  0119                     	;# 
   528  011A                     	;# 
   529  011B                     	;# 
   530  011D                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  018F                     	;# 
   534  0190                     	;# 
   535  0191                     	;# 
   536  0191                     	;# 
   537  0192                     	;# 
   538  0193                     	;# 
   539  0193                     	;# 
   540  0193                     	;# 
   541  0194                     	;# 
   542  0195                     	;# 
   543  0196                     	;# 
   544  0199                     	;# 
   545  019A                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019D                     	;# 
   553  019E                     	;# 
   554  019F                     	;# 
   555  020D                     	;# 
   556  0210                     	;# 
   557  0211                     	;# 
   558  0212                     	;# 
   559  0213                     	;# 
   560  0214                     	;# 
   561  0215                     	;# 
   562  0215                     	;# 
   563  0216                     	;# 
   564  0217                     	;# 
   565  0291                     	;# 
   566  0291                     	;# 
   567  0292                     	;# 
   568  0293                     	;# 
   569  0294                     	;# 
   570  0295                     	;# 
   571  0295                     	;# 
   572  0296                     	;# 
   573  0298                     	;# 
   574  0298                     	;# 
   575  0299                     	;# 
   576  029A                     	;# 
   577  029B                     	;# 
   578  029C                     	;# 
   579  029C                     	;# 
   580  029D                     	;# 
   581  029E                     	;# 
   582  029F                     	;# 
   583  0311                     	;# 
   584  0311                     	;# 
   585  0312                     	;# 
   586  0313                     	;# 
   587  0314                     	;# 
   588  0315                     	;# 
   589  0315                     	;# 
   590  0316                     	;# 
   591  0318                     	;# 
   592  0318                     	;# 
   593  0319                     	;# 
   594  031A                     	;# 
   595  031C                     	;# 
   596  031C                     	;# 
   597  031D                     	;# 
   598  031E                     	;# 
   599  0394                     	;# 
   600  0395                     	;# 
   601  0396                     	;# 
   602  0415                     	;# 
   603  0416                     	;# 
   604  0417                     	;# 
   605  041C                     	;# 
   606  041D                     	;# 
   607  041E                     	;# 
   608  0791                     	;# 
   609  0792                     	;# 
   610  0793                     	;# 
   611  0794                     	;# 
   612  0795                     	;# 
   613  0798                     	;# 
   614  0799                     	;# 
   615  079A                     	;# 
   616  07A0                     	;# 
   617  07A1                     	;# 
   618  07A2                     	;# 
   619  07A3                     	;# 
   620  07A4                     	;# 
   621  07A5                     	;# 
   622  07A6                     	;# 
   623  07A7                     	;# 
   624  07A8                     	;# 
   625  07A9                     	;# 
   626  07AA                     	;# 
   627  07AB                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  000F                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  001E                     	;# 
   669  001F                     	;# 
   670  008C                     	;# 
   671  008D                     	;# 
   672  008E                     	;# 
   673  008F                     	;# 
   674  0090                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0097                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009A                     	;# 
   684  009B                     	;# 
   685  009B                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010E                     	;# 
   692  010F                     	;# 
   693  0110                     	;# 
   694  0111                     	;# 
   695  0112                     	;# 
   696  0113                     	;# 
   697  0114                     	;# 
   698  0115                     	;# 
   699  0116                     	;# 
   700  0117                     	;# 
   701  0118                     	;# 
   702  0119                     	;# 
   703  011A                     	;# 
   704  011B                     	;# 
   705  011D                     	;# 
   706  018C                     	;# 
   707  018D                     	;# 
   708  018F                     	;# 
   709  0190                     	;# 
   710  0191                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0193                     	;# 
   714  0193                     	;# 
   715  0193                     	;# 
   716  0194                     	;# 
   717  0195                     	;# 
   718  0196                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  020D                     	;# 
   731  0210                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0291                     	;# 
   741  0291                     	;# 
   742  0292                     	;# 
   743  0293                     	;# 
   744  0294                     	;# 
   745  0295                     	;# 
   746  0295                     	;# 
   747  0296                     	;# 
   748  0298                     	;# 
   749  0298                     	;# 
   750  0299                     	;# 
   751  029A                     	;# 
   752  029B                     	;# 
   753  029C                     	;# 
   754  029C                     	;# 
   755  029D                     	;# 
   756  029E                     	;# 
   757  029F                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0314                     	;# 
   763  0315                     	;# 
   764  0315                     	;# 
   765  0316                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  031C                     	;# 
   771  031C                     	;# 
   772  031D                     	;# 
   773  031E                     	;# 
   774  0394                     	;# 
   775  0395                     	;# 
   776  0396                     	;# 
   777  0415                     	;# 
   778  0416                     	;# 
   779  0417                     	;# 
   780  041C                     	;# 
   781  041D                     	;# 
   782  041E                     	;# 
   783  0791                     	;# 
   784  0792                     	;# 
   785  0793                     	;# 
   786  0794                     	;# 
   787  0795                     	;# 
   788  0798                     	;# 
   789  0799                     	;# 
   790  079A                     	;# 
   791  07A0                     	;# 
   792  07A1                     	;# 
   793  07A2                     	;# 
   794  07A3                     	;# 
   795  07A4                     	;# 
   796  07A5                     	;# 
   797  07A6                     	;# 
   798  07A7                     	;# 
   799  07A8                     	;# 
   800  07A9                     	;# 
   801  07AA                     	;# 
   802  07AB                     	;# 
   803  0FE4                     	;# 
   804  0FE5                     	;# 
   805  0FE6                     	;# 
   806  0FE7                     	;# 
   807  0FE8                     	;# 
   808  0FE9                     	;# 
   809  0FEA                     	;# 
   810  0FEB                     	;# 
   811  0FED                     	;# 
   812  0FEE                     	;# 
   813  0FEF                     	;# 
   814  0000                     	;# 
   815  0001                     	;# 
   816  0002                     	;# 
   817  0003                     	;# 
   818  0004                     	;# 
   819  0005                     	;# 
   820  0006                     	;# 
   821  0007                     	;# 
   822  0008                     	;# 
   823  0009                     	;# 
   824  000A                     	;# 
   825  000B                     	;# 
   826  000C                     	;# 
   827  000D                     	;# 
   828  000E                     	;# 
   829  000F                     	;# 
   830  0010                     	;# 
   831  0011                     	;# 
   832  0012                     	;# 
   833  0013                     	;# 
   834  0015                     	;# 
   835  0016                     	;# 
   836  0016                     	;# 
   837  0017                     	;# 
   838  0018                     	;# 
   839  0019                     	;# 
   840  001A                     	;# 
   841  001B                     	;# 
   842  001C                     	;# 
   843  001E                     	;# 
   844  001F                     	;# 
   845  008C                     	;# 
   846  008D                     	;# 
   847  008E                     	;# 
   848  008F                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0093                     	;# 
   853  0095                     	;# 
   854  0096                     	;# 
   855  0097                     	;# 
   856  0098                     	;# 
   857  0099                     	;# 
   858  009A                     	;# 
   859  009B                     	;# 
   860  009B                     	;# 
   861  009C                     	;# 
   862  009D                     	;# 
   863  009E                     	;# 
   864  010C                     	;# 
   865  010D                     	;# 
   866  010E                     	;# 
   867  010F                     	;# 
   868  0110                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  011A                     	;# 
   879  011B                     	;# 
   880  011D                     	;# 
   881  018C                     	;# 
   882  018D                     	;# 
   883  018F                     	;# 
   884  0190                     	;# 
   885  0191                     	;# 
   886  0191                     	;# 
   887  0192                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0193                     	;# 
   891  0194                     	;# 
   892  0195                     	;# 
   893  0196                     	;# 
   894  0199                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019F                     	;# 
   905  020D                     	;# 
   906  0210                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0214                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0216                     	;# 
   914  0217                     	;# 
   915  0291                     	;# 
   916  0291                     	;# 
   917  0292                     	;# 
   918  0293                     	;# 
   919  0294                     	;# 
   920  0295                     	;# 
   921  0295                     	;# 
   922  0296                     	;# 
   923  0298                     	;# 
   924  0298                     	;# 
   925  0299                     	;# 
   926  029A                     	;# 
   927  029B                     	;# 
   928  029C                     	;# 
   929  029C                     	;# 
   930  029D                     	;# 
   931  029E                     	;# 
   932  029F                     	;# 
   933  0311                     	;# 
   934  0311                     	;# 
   935  0312                     	;# 
   936  0313                     	;# 
   937  0314                     	;# 
   938  0315                     	;# 
   939  0315                     	;# 
   940  0316                     	;# 
   941  0318                     	;# 
   942  0318                     	;# 
   943  0319                     	;# 
   944  031A                     	;# 
   945  031C                     	;# 
   946  031C                     	;# 
   947  031D                     	;# 
   948  031E                     	;# 
   949  0394                     	;# 
   950  0395                     	;# 
   951  0396                     	;# 
   952  0415                     	;# 
   953  0416                     	;# 
   954  0417                     	;# 
   955  041C                     	;# 
   956  041D                     	;# 
   957  041E                     	;# 
   958  0791                     	;# 
   959  0792                     	;# 
   960  0793                     	;# 
   961  0794                     	;# 
   962  0795                     	;# 
   963  0798                     	;# 
   964  0799                     	;# 
   965  079A                     	;# 
   966  07A0                     	;# 
   967  07A1                     	;# 
   968  07A2                     	;# 
   969  07A3                     	;# 
   970  07A4                     	;# 
   971  07A5                     	;# 
   972  07A6                     	;# 
   973  07A7                     	;# 
   974  07A8                     	;# 
   975  07A9                     	;# 
   976  07AA                     	;# 
   977  07AB                     	;# 
   978  0FE4                     	;# 
   979  0FE5                     	;# 
   980  0FE6                     	;# 
   981  0FE7                     	;# 
   982  0FE8                     	;# 
   983  0FE9                     	;# 
   984  0FEA                     	;# 
   985  0FEB                     	;# 
   986  0FED                     	;# 
   987  0FEE                     	;# 
   988  0FEF                     	;# 
   989  0000                     	;# 
   990  0001                     	;# 
   991  0002                     	;# 
   992  0003                     	;# 
   993  0004                     	;# 
   994  0005                     	;# 
   995  0006                     	;# 
   996  0007                     	;# 
   997  0008                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000D                     	;# 
  1003  000E                     	;# 
  1004  000F                     	;# 
  1005  0010                     	;# 
  1006  0011                     	;# 
  1007  0012                     	;# 
  1008  0013                     	;# 
  1009  0015                     	;# 
  1010  0016                     	;# 
  1011  0016                     	;# 
  1012  0017                     	;# 
  1013  0018                     	;# 
  1014  0019                     	;# 
  1015  001A                     	;# 
  1016  001B                     	;# 
  1017  001C                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  008C                     	;# 
  1021  008D                     	;# 
  1022  008E                     	;# 
  1023  008F                     	;# 
  1024  0090                     	;# 
  1025  0091                     	;# 
  1026  0092                     	;# 
  1027  0093                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0097                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009A                     	;# 
  1034  009B                     	;# 
  1035  009B                     	;# 
  1036  009C                     	;# 
  1037  009D                     	;# 
  1038  009E                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010E                     	;# 
  1042  010F                     	;# 
  1043  0110                     	;# 
  1044  0111                     	;# 
  1045  0112                     	;# 
  1046  0113                     	;# 
  1047  0114                     	;# 
  1048  0115                     	;# 
  1049  0116                     	;# 
  1050  0117                     	;# 
  1051  0118                     	;# 
  1052  0119                     	;# 
  1053  011A                     	;# 
  1054  011B                     	;# 
  1055  011D                     	;# 
  1056  018C                     	;# 
  1057  018D                     	;# 
  1058  018F                     	;# 
  1059  0190                     	;# 
  1060  0191                     	;# 
  1061  0191                     	;# 
  1062  0192                     	;# 
  1063  0193                     	;# 
  1064  0193                     	;# 
  1065  0193                     	;# 
  1066  0194                     	;# 
  1067  0195                     	;# 
  1068  0196                     	;# 
  1069  0199                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019C                     	;# 
  1076  019C                     	;# 
  1077  019D                     	;# 
  1078  019E                     	;# 
  1079  019F                     	;# 
  1080  020D                     	;# 
  1081  0210                     	;# 
  1082  0211                     	;# 
  1083  0212                     	;# 
  1084  0213                     	;# 
  1085  0214                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0216                     	;# 
  1089  0217                     	;# 
  1090  0291                     	;# 
  1091  0291                     	;# 
  1092  0292                     	;# 
  1093  0293                     	;# 
  1094  0294                     	;# 
  1095  0295                     	;# 
  1096  0295                     	;# 
  1097  0296                     	;# 
  1098  0298                     	;# 
  1099  0298                     	;# 
  1100  0299                     	;# 
  1101  029A                     	;# 
  1102  029B                     	;# 
  1103  029C                     	;# 
  1104  029C                     	;# 
  1105  029D                     	;# 
  1106  029E                     	;# 
  1107  029F                     	;# 
  1108  0311                     	;# 
  1109  0311                     	;# 
  1110  0312                     	;# 
  1111  0313                     	;# 
  1112  0314                     	;# 
  1113  0315                     	;# 
  1114  0315                     	;# 
  1115  0316                     	;# 
  1116  0318                     	;# 
  1117  0318                     	;# 
  1118  0319                     	;# 
  1119  031A                     	;# 
  1120  031C                     	;# 
  1121  031C                     	;# 
  1122  031D                     	;# 
  1123  031E                     	;# 
  1124  0394                     	;# 
  1125  0395                     	;# 
  1126  0396                     	;# 
  1127  0415                     	;# 
  1128  0416                     	;# 
  1129  0417                     	;# 
  1130  041C                     	;# 
  1131  041D                     	;# 
  1132  041E                     	;# 
  1133  0791                     	;# 
  1134  0792                     	;# 
  1135  0793                     	;# 
  1136  0794                     	;# 
  1137  0795                     	;# 
  1138  0798                     	;# 
  1139  0799                     	;# 
  1140  079A                     	;# 
  1141  07A0                     	;# 
  1142  07A1                     	;# 
  1143  07A2                     	;# 
  1144  07A3                     	;# 
  1145  07A4                     	;# 
  1146  07A5                     	;# 
  1147  07A6                     	;# 
  1148  07A7                     	;# 
  1149  07A8                     	;# 
  1150  07A9                     	;# 
  1151  07AA                     	;# 
  1152  07AB                     	;# 
  1153  0FE4                     	;# 
  1154  0FE5                     	;# 
  1155  0FE6                     	;# 
  1156  0FE7                     	;# 
  1157  0FE8                     	;# 
  1158  0FE9                     	;# 
  1159  0FEA                     	;# 
  1160  0FEB                     	;# 
  1161  0FED                     	;# 
  1162  0FEE                     	;# 
  1163  0FEF                     	;# 
  1164  0000                     	;# 
  1165  0001                     	;# 
  1166  0002                     	;# 
  1167  0003                     	;# 
  1168  0004                     	;# 
  1169  0005                     	;# 
  1170  0006                     	;# 
  1171  0007                     	;# 
  1172  0008                     	;# 
  1173  0009                     	;# 
  1174  000A                     	;# 
  1175  000B                     	;# 
  1176  000C                     	;# 
  1177  000D                     	;# 
  1178  000E                     	;# 
  1179  000F                     	;# 
  1180  0010                     	;# 
  1181  0011                     	;# 
  1182  0012                     	;# 
  1183  0013                     	;# 
  1184  0015                     	;# 
  1185  0016                     	;# 
  1186  0016                     	;# 
  1187  0017                     	;# 
  1188  0018                     	;# 
  1189  0019                     	;# 
  1190  001A                     	;# 
  1191  001B                     	;# 
  1192  001C                     	;# 
  1193  001E                     	;# 
  1194  001F                     	;# 
  1195  008C                     	;# 
  1196  008D                     	;# 
  1197  008E                     	;# 
  1198  008F                     	;# 
  1199  0090                     	;# 
  1200  0091                     	;# 
  1201  0092                     	;# 
  1202  0093                     	;# 
  1203  0095                     	;# 
  1204  0096                     	;# 
  1205  0097                     	;# 
  1206  0098                     	;# 
  1207  0099                     	;# 
  1208  009A                     	;# 
  1209  009B                     	;# 
  1210  009B                     	;# 
  1211  009C                     	;# 
  1212  009D                     	;# 
  1213  009E                     	;# 
  1214  010C                     	;# 
  1215  010D                     	;# 
  1216  010E                     	;# 
  1217  010F                     	;# 
  1218  0110                     	;# 
  1219  0111                     	;# 
  1220  0112                     	;# 
  1221  0113                     	;# 
  1222  0114                     	;# 
  1223  0115                     	;# 
  1224  0116                     	;# 
  1225  0117                     	;# 
  1226  0118                     	;# 
  1227  0119                     	;# 
  1228  011A                     	;# 
  1229  011B                     	;# 
  1230  011D                     	;# 
  1231  018C                     	;# 
  1232  018D                     	;# 
  1233  018F                     	;# 
  1234  0190                     	;# 
  1235  0191                     	;# 
  1236  0191                     	;# 
  1237  0192                     	;# 
  1238  0193                     	;# 
  1239  0193                     	;# 
  1240  0193                     	;# 
  1241  0194                     	;# 
  1242  0195                     	;# 
  1243  0196                     	;# 
  1244  0199                     	;# 
  1245  019A                     	;# 
  1246  019B                     	;# 
  1247  019B                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019C                     	;# 
  1251  019C                     	;# 
  1252  019D                     	;# 
  1253  019E                     	;# 
  1254  019F                     	;# 
  1255  020D                     	;# 
  1256  0210                     	;# 
  1257  0211                     	;# 
  1258  0212                     	;# 
  1259  0213                     	;# 
  1260  0214                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0216                     	;# 
  1264  0217                     	;# 
  1265  0291                     	;# 
  1266  0291                     	;# 
  1267  0292                     	;# 
  1268  0293                     	;# 
  1269  0294                     	;# 
  1270  0295                     	;# 
  1271  0295                     	;# 
  1272  0296                     	;# 
  1273  0298                     	;# 
  1274  0298                     	;# 
  1275  0299                     	;# 
  1276  029A                     	;# 
  1277  029B                     	;# 
  1278  029C                     	;# 
  1279  029C                     	;# 
  1280  029D                     	;# 
  1281  029E                     	;# 
  1282  029F                     	;# 
  1283  0311                     	;# 
  1284  0311                     	;# 
  1285  0312                     	;# 
  1286  0313                     	;# 
  1287  0314                     	;# 
  1288  0315                     	;# 
  1289  0315                     	;# 
  1290  0316                     	;# 
  1291  0318                     	;# 
  1292  0318                     	;# 
  1293  0319                     	;# 
  1294  031A                     	;# 
  1295  031C                     	;# 
  1296  031C                     	;# 
  1297  031D                     	;# 
  1298  031E                     	;# 
  1299  0394                     	;# 
  1300  0395                     	;# 
  1301  0396                     	;# 
  1302  0415                     	;# 
  1303  0416                     	;# 
  1304  0417                     	;# 
  1305  041C                     	;# 
  1306  041D                     	;# 
  1307  041E                     	;# 
  1308  0791                     	;# 
  1309  0792                     	;# 
  1310  0793                     	;# 
  1311  0794                     	;# 
  1312  0795                     	;# 
  1313  0798                     	;# 
  1314  0799                     	;# 
  1315  079A                     	;# 
  1316  07A0                     	;# 
  1317  07A1                     	;# 
  1318  07A2                     	;# 
  1319  07A3                     	;# 
  1320  07A4                     	;# 
  1321  07A5                     	;# 
  1322  07A6                     	;# 
  1323  07A7                     	;# 
  1324  07A8                     	;# 
  1325  07A9                     	;# 
  1326  07AA                     	;# 
  1327  07AB                     	;# 
  1328  0FE4                     	;# 
  1329  0FE5                     	;# 
  1330  0FE6                     	;# 
  1331  0FE7                     	;# 
  1332  0FE8                     	;# 
  1333  0FE9                     	;# 
  1334  0FEA                     	;# 
  1335  0FEB                     	;# 
  1336  0FED                     	;# 
  1337  0FEE                     	;# 
  1338  0FEF                     	;# 
  1339                           
  1340                           	psect	stringtext1
  1341  0800                     __pstringtext1:
  1342  0800                     _i2c_fsmStateTable:
  1343  0800  341F               	retlw	low _I2C_DO_IDLE
  1344  0801  3400               	retlw	high _I2C_DO_IDLE
  1345  0802  347B               	retlw	low _I2C_DO_SEND_ADR_READ
  1346  0803  3400               	retlw	high _I2C_DO_SEND_ADR_READ
  1347  0804  346A               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1348  0805  3400               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1349  0806  34B4               	retlw	low _I2C_DO_TX
  1350  0807  3403               	retlw	high _I2C_DO_TX
  1351  0808  3428               	retlw	low _I2C_DO_RX
  1352  0809  3403               	retlw	high _I2C_DO_RX
  1353  080A  3463               	retlw	low _I2C_DO_RCEN
  1354  080B  3400               	retlw	high _I2C_DO_RCEN
  1355  080C  341E               	retlw	low _I2C_DO_TX_EMPTY
  1356  080D  3402               	retlw	high _I2C_DO_TX_EMPTY
  1357  080E  3424               	retlw	low _I2C_DO_SEND_RESTART_READ
  1358  080F  3400               	retlw	high _I2C_DO_SEND_RESTART_READ
  1359  0810  3429               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1360  0811  3400               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1361  0812  342E               	retlw	low _I2C_DO_SEND_RESTART
  1362  0813  3400               	retlw	high _I2C_DO_SEND_RESTART
  1363  0814  3433               	retlw	low _I2C_DO_SEND_STOP
  1364  0815  3400               	retlw	high _I2C_DO_SEND_STOP
  1365  0816  3438               	retlw	low _I2C_DO_RX_ACK
  1366  0817  3400               	retlw	high _I2C_DO_RX_ACK
  1367  0818  343D               	retlw	low _I2C_DO_RX_NACK_STOP
  1368  0819  3400               	retlw	high _I2C_DO_RX_NACK_STOP
  1369  081A  3442               	retlw	low _I2C_DO_RX_NACK_RESTART
  1370  081B  3400               	retlw	high _I2C_DO_RX_NACK_RESTART
  1371  081C  3447               	retlw	low _I2C_DO_RESET
  1372  081D  3400               	retlw	high _I2C_DO_RESET
  1373  081E  34C4               	retlw	low _I2C_DO_ADDRESS_NACK
  1374  081F  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1375  0820                     __end_of_i2c_fsmStateTable:
  1376  0011                     _PIR1bits	set	17
  1377  0012                     _PIR2bits	set	18
  1378  0091                     _PIE1bits	set	145
  1379  0097                     _WDTCON	set	151
  1380  0098                     _OSCTUNE	set	152
  1381  0099                     _OSCCON	set	153
  1382  0095                     _OPTION_REGbits	set	149
  1383  008F                     _TRISD	set	143
  1384  008E                     _TRISC	set	142
  1385  008D                     _TRISB	set	141
  1386  008C                     _TRISA	set	140
  1387  0090                     _TRISE	set	144
  1388  04D6                     _PLLR	set	1238
  1389  010D                     _LATBbits	set	269
  1390  0116                     _BORCON	set	278
  1391  011D                     _APFCON	set	285
  1392  010E                     _LATC	set	270
  1393  010D                     _LATB	set	269
  1394  010C                     _LATA	set	268
  1395  010F                     _LATD	set	271
  1396  0110                     _LATE	set	272
  1397  018C                     _ANSELA	set	396
  1398  0190                     _ANSELE	set	400
  1399  018D                     _ANSELB	set	397
  1400  018F                     _ANSELD	set	399
  1401  0214                     _SSPSTATbits	set	532
  1402  0216                     _SSPCON2bits	set	534
  1403  0211                     _SSPBUF	set	529
  1404  0215                     _SSPCON1bits	set	533
  1405  0212                     _SSPADD	set	530
  1406  0216                     _SSPCON2	set	534
  1407  0215                     _SSPCON1	set	533
  1408  0214                     _SSPSTAT	set	532
  1409  020D                     _WPUB	set	525
  1410  0210                     _WPUE	set	528
  1411                           
  1412                           	psect	cinit
  1413  07DD                     start_initialization:	
  1414                           ; #config settings
  1415                           
  1416  07DD                     __initialization:
  1417                           
  1418                           ; Clear objects allocated to BANK0
  1419  07DD  3065               	movlw	low __pbssBANK0
  1420  07DE  0084               	movwf	4
  1421  07DF  3000               	movlw	high __pbssBANK0
  1422  07E0  0085               	movwf	5
  1423  07E1  3007               	movlw	7
  1424  07E2  3180  205D  3187   	fcall	clear_ram0
  1425                           
  1426                           ; Clear objects allocated to BANK1
  1427  07E5  30A0               	movlw	low __pbssBANK1
  1428  07E6  0084               	movwf	4
  1429  07E7  3000               	movlw	high __pbssBANK1
  1430  07E8  0085               	movwf	5
  1431  07E9  303F               	movlw	63
  1432  07EA  3180  205D  3187   	fcall	clear_ram0
  1433                           
  1434                           ; Clear objects allocated to BANK2
  1435  07ED  3020               	movlw	low __pbssBANK2
  1436  07EE  0084               	movwf	4
  1437  07EF  3001               	movlw	high __pbssBANK2
  1438  07F0  0085               	movwf	5
  1439  07F1  3040               	movlw	64
  1440  07F2  3180  205D  3187   	fcall	clear_ram0
  1441                           
  1442                           ; Clear objects allocated to BANK3
  1443  07F5  30A0               	movlw	low __pbssBANK3
  1444  07F6  0084               	movwf	4
  1445  07F7  3001               	movlw	high __pbssBANK3
  1446  07F8  0085               	movwf	5
  1447  07F9  3038               	movlw	56
  1448  07FA  3180  205D  3187   	fcall	clear_ram0
  1449  07FD                     end_of_initialization:	
  1450                           ;End of C runtime variable initialization code
  1451                           
  1452  07FD                     __end_of__initialization:
  1453  07FD  0020               	movlb	0
  1454  07FE  3184  2C09         	ljmp	_main	;jump to C main() function
  1455                           
  1456                           	psect	bssBANK0
  1457  0065                     __pbssBANK0:
  1458  0065                     get_pressure_BMP180@F3852:
  1459  0065                     	ds	6
  1460  006B                     _status_communication:
  1461  006B                     	ds	1
  1462                           
  1463                           	psect	bssBANK1
  1464  00A0                     __pbssBANK1:
  1465  00A0                     _BMP180:
  1466  00A0                     	ds	34
  1467  00C2                     _I2C_Status:
  1468  00C2                     	ds	29
  1469                           
  1470                           	psect	bssBANK2
  1471  0120                     __pbssBANK2:
  1472  0120                     _COLOR_LED:
  1473  0120                     	ds	64
  1474                           
  1475                           	psect	bssBANK3
  1476  01A0                     __pbssBANK3:
  1477  01A0                     _DATA_BMP_180:
  1478  01A0                     	ds	34
  1479  01C2                     get_calibration_data_BMP180@F3834:
  1480  01C2                     	ds	22
  1481                           
  1482                           	psect	clrtext
  1483  005D                     clear_ram0:	
  1484                           ;	Called with FSR0 containing the base address, and
  1485                           ;	WREG with the size to clear
  1486                           
  1487  005D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1488  005E                     clrloop0:
  1489  005E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1490  005F  3101               	addfsr 0,1
  1491  0060  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1492  0061  285E               	goto	clrloop0	;have we reached the end yet?
  1493  0062  3400               	retlw	0	;all done for this memory range, return
  1494                           
  1495                           	psect	cstackCOMMON
  1496  0070                     __pcstackCOMMON:
  1497  0070                     ?_I2C_Initialize:
  1498  0070                     ??_I2C_Initialize:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_OSCILLATOR_Initialize:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ??_OSCILLATOR_Initialize:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_WDT_Initialize:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ??_WDT_Initialize:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_set_strip_led_color:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ?_I2C_Open:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ??_I2C_Open:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_I2C_SetBuffer:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_I2C_MasterWrite:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_I2C_Close:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ??_I2C_Close:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_I2C_DO_IDLE:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ??_I2C_DO_IDLE:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_I2C_DO_SEND_ADR_READ:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ??_I2C_DO_SEND_ADR_READ:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_I2C_DO_TX:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_I2C_DO_RX:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_I2C_DO_RCEN:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ??_I2C_DO_RCEN:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ?_I2C_DO_TX_EMPTY:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0070                     ?_I2C_DO_SEND_RESTART:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0070                     ??_I2C_DO_SEND_RESTART:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0070                     ?_I2C_DO_SEND_STOP:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0070                     ??_I2C_DO_SEND_STOP:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0070                     ?_I2C_DO_RX_ACK:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0070                     ??_I2C_DO_RX_ACK:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0070                     ?_I2C_DO_RX_NACK_STOP:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0070                     ??_I2C_DO_RX_NACK_STOP:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ?_I2C_DO_RESET:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     ??_I2C_DO_RESET:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ?_I2C_DO_ADDRESS_NACK:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?_I2C_MasterClearIrq:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ??_I2C_MasterClearIrq:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ?_I2C_MasterOpen:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ??_I2C_MasterOpen:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ?_I2C_MasterDisableIrq:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ??_I2C_MasterDisableIrq:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ?_I2C_MasterClose:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ??_I2C_MasterClose:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ?_I2C_MasterStart:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     ??_I2C_MasterStart:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ?_I2C_Poller:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0070                     ?_I2C_SetCallback:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     ?_I2C_MasterWaitForEvent:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     ??_I2C_MasterWaitForEvent:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ?_I2C_MasterFsm:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0070                     ?_I2C_MasterIsNack:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ??_I2C_MasterIsNack:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0070                     ?_I2C_MasterSendTxData:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0070                     ??_I2C_MasterSendTxData:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0070                     ?_I2C_MasterGetRxData:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0070                     ??_I2C_MasterGetRxData:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ?_I2C_MasterSendAck:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ??_I2C_MasterSendAck:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?_I2C_MasterStartRx:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     ??_I2C_MasterStartRx:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0070                     ?_I2C_MasterSetIrq:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     ??_I2C_MasterSetIrq:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0070                     ?_I2C_MasterEnableRestart:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ??_I2C_MasterEnableRestart:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ?_I2C_MasterStop:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ??_I2C_MasterStop:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ?_I2C_MasterSendNack:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ??_I2C_MasterSendNack:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?_PIN_MANAGER_Initialize:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ??_PIN_MANAGER_Initialize:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ?_SYSTEM_Initialize:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ??_SYSTEM_Initialize:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ?_main:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ?_I2C_MasterOperation:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ?___lmul:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ?___aldiv:	
  1736                           ; 4 bytes @ 0x0
  1737                           
  1738  0070                     set_strip_led_color@COLOR_LED:	
  1739                           ; 4 bytes @ 0x0
  1740                           
  1741  0070                     I2C_MasterSendTxData@data:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0070                     I2C_SetBuffer@bufferSize:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     I2C_SetCallback@cb:	
  1748                           ; 2 bytes @ 0x0
  1749                           
  1750  0070                     ___lmul@multiplier:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753  0070                     ___aldiv@divisor:	
  1754                           ; 4 bytes @ 0x0
  1755                           
  1756                           
  1757                           ; 4 bytes @ 0x0
  1758  0070                     	ds	1
  1759  0071                     ??_set_strip_led_color:
  1760  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  1761                           ; 1 bytes @ 0x1
  1762                           
  1763  0071                     I2C_Open@address:	
  1764                           ; 1 bytes @ 0x1
  1765                           
  1766  0071                     I2C_Close@returnValue:	
  1767                           ; 1 bytes @ 0x1
  1768                           
  1769                           
  1770                           ; 1 bytes @ 0x1
  1771  0071                     	ds	1
  1772  0072                     ??_I2C_SetBuffer:
  1773  0072                     I2C_Open@returnValue:	
  1774                           ; 1 bytes @ 0x2
  1775                           
  1776  0072                     I2C_SetCallback@ptr:	
  1777                           ; 1 bytes @ 0x2
  1778                           
  1779                           
  1780                           ; 1 bytes @ 0x2
  1781  0072                     	ds	1
  1782  0073                     ??_I2C_SetCallback:
  1783  0073                     I2C_SetBuffer@buffer:	
  1784                           ; 1 bytes @ 0x3
  1785                           
  1786                           
  1787                           ; 1 bytes @ 0x3
  1788  0073                     	ds	1
  1789  0074                     set_strip_led_color@number_led:
  1790  0074                     I2C_SetCallback@idx:	
  1791                           ; 1 bytes @ 0x4
  1792                           
  1793  0074                     ___lmul@multiplicand:	
  1794                           ; 1 bytes @ 0x4
  1795                           
  1796  0074                     ___aldiv@dividend:	
  1797                           ; 4 bytes @ 0x4
  1798                           
  1799                           
  1800                           ; 4 bytes @ 0x4
  1801  0074                     	ds	1
  1802  0075                     ?_I2C_SetDataCompleteCallback:
  1803  0075                     ?_I2C_SetAddressNackCallback:	
  1804                           ; 1 bytes @ 0x5
  1805                           
  1806  0075                     set_strip_led_color@i:	
  1807                           ; 1 bytes @ 0x5
  1808                           
  1809  0075                     I2C_SetDataCompleteCallback@cb:	
  1810                           ; 1 bytes @ 0x5
  1811                           
  1812  0075                     I2C_SetAddressNackCallback@cb:	
  1813                           ; 2 bytes @ 0x5
  1814                           
  1815                           
  1816                           ; 2 bytes @ 0x5
  1817  0075                     	ds	1
  1818  0076                     set_strip_led_color@i_239:
  1819                           
  1820                           ; 1 bytes @ 0x6
  1821  0076                     	ds	1
  1822  0077                     set_strip_led_color@i_240:
  1823  0077                     I2C_SetDataCompleteCallback@ptr:	
  1824                           ; 1 bytes @ 0x7
  1825                           
  1826  0077                     I2C_SetAddressNackCallback@ptr:	
  1827                           ; 1 bytes @ 0x7
  1828                           
  1829                           
  1830                           ; 1 bytes @ 0x7
  1831  0077                     	ds	1
  1832  0078                     ??_I2C_SetDataCompleteCallback:
  1833  0078                     ??_I2C_SetAddressNackCallback:	
  1834                           ; 1 bytes @ 0x8
  1835                           
  1836  0078                     ??___lmul:	
  1837                           ; 1 bytes @ 0x8
  1838                           
  1839  0078                     ??___aldiv:	
  1840                           ; 1 bytes @ 0x8
  1841                           
  1842  0078                     set_strip_led_color@number_led_choose:	
  1843                           ; 1 bytes @ 0x8
  1844                           
  1845  0078                     ___lmul@product:	
  1846                           ; 1 bytes @ 0x8
  1847                           
  1848                           
  1849                           ; 4 bytes @ 0x8
  1850  0078                     	ds	1
  1851  0079                     ?_rd1RegCompleteHandler:
  1852  0079                     ?_rd2RegCompleteHandler:	
  1853                           ; 1 bytes @ 0x9
  1854                           
  1855  0079                     ?_wr1RegCompleteHandler:	
  1856                           ; 1 bytes @ 0x9
  1857                           
  1858  0079                     ?_wr2RegCompleteHandler:	
  1859                           ; 1 bytes @ 0x9
  1860                           
  1861  0079                     ?_rdBlkRegCompleteHandler:	
  1862                           ; 1 bytes @ 0x9
  1863                           
  1864  0079                     ?_I2C_CallbackReturnStop:	
  1865                           ; 1 bytes @ 0x9
  1866                           
  1867  0079                     ?_I2C_CallbackReturnReset:	
  1868                           ; 1 bytes @ 0x9
  1869                           
  1870  0079                     rd1RegCompleteHandler@ptr:	
  1871                           ; 1 bytes @ 0x9
  1872                           
  1873  0079                     rd2RegCompleteHandler@ptr:	
  1874                           ; 1 bytes @ 0x9
  1875                           
  1876  0079                     wr1RegCompleteHandler@ptr:	
  1877                           ; 1 bytes @ 0x9
  1878                           
  1879  0079                     wr2RegCompleteHandler@ptr:	
  1880                           ; 1 bytes @ 0x9
  1881                           
  1882  0079                     rdBlkRegCompleteHandler@ptr:	
  1883                           ; 1 bytes @ 0x9
  1884                           
  1885  0079                     I2C_CallbackReturnStop@funPtr:	
  1886                           ; 1 bytes @ 0x9
  1887                           
  1888  0079                     I2C_CallbackReturnReset@funPtr:	
  1889                           ; 1 bytes @ 0x9
  1890                           
  1891                           
  1892                           ; 1 bytes @ 0x9
  1893  0079                     	ds	1
  1894  007A                     ??_rd1RegCompleteHandler:
  1895  007A                     ??_rd2RegCompleteHandler:	
  1896                           ; 1 bytes @ 0xA
  1897                           
  1898  007A                     ??_wr1RegCompleteHandler:	
  1899                           ; 1 bytes @ 0xA
  1900                           
  1901  007A                     ??_wr2RegCompleteHandler:	
  1902                           ; 1 bytes @ 0xA
  1903                           
  1904  007A                     ??_rdBlkRegCompleteHandler:	
  1905                           ; 1 bytes @ 0xA
  1906                           
  1907  007A                     ??_I2C_DO_TX:	
  1908                           ; 1 bytes @ 0xA
  1909                           
  1910  007A                     ??_I2C_DO_RX:	
  1911                           ; 1 bytes @ 0xA
  1912                           
  1913  007A                     ??_I2C_DO_TX_EMPTY:	
  1914                           ; 1 bytes @ 0xA
  1915                           
  1916  007A                     ??_I2C_DO_ADDRESS_NACK:	
  1917                           ; 1 bytes @ 0xA
  1918                           
  1919  007A                     ??_I2C_CallbackReturnStop:	
  1920                           ; 1 bytes @ 0xA
  1921                           
  1922  007A                     ??_I2C_CallbackReturnReset:	
  1923                           ; 1 bytes @ 0xA
  1924                           
  1925                           
  1926                           ; 1 bytes @ 0xA
  1927  007A                     	ds	3
  1928  007D                     ??_I2C_Poller:
  1929  007D                     ??_I2C_MasterOperation:	
  1930                           ; 1 bytes @ 0xD
  1931                           
  1932                           
  1933                           ; 1 bytes @ 0xD
  1934  007D                     	ds	1
  1935  007E                     ??_I2C_MasterWrite:
  1936                           
  1937                           	psect	cstackBANK0
  1938  0020                     __pcstackBANK0:	
  1939                           ; 1 bytes @ 0xE
  1940                           
  1941  0020                     ??_I2C_MasterFsm:
  1942  0020                     ___aldiv@counter:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945                           
  1946                           ; 1 bytes @ 0x0
  1947  0020                     	ds	1
  1948  0021                     ___aldiv@sign:
  1949                           
  1950                           ; 1 bytes @ 0x1
  1951  0021                     	ds	1
  1952  0022                     ___aldiv@quotient:
  1953                           
  1954                           ; 4 bytes @ 0x2
  1955  0022                     	ds	1
  1956  0023                     I2C_MasterOperation@read:
  1957                           
  1958                           ; 1 bytes @ 0x3
  1959  0023                     	ds	1
  1960  0024                     I2C_MasterOperation@returnValue:
  1961                           
  1962                           ; 1 bytes @ 0x4
  1963  0024                     	ds	1
  1964  0025                     ?_I2C_Write1ByteRegister:
  1965  0025                     ?_I2C_ReadDataBlock:	
  1966                           ; 1 bytes @ 0x5
  1967                           
  1968  0025                     ?_I2C_Read2ByteRegister:	
  1969                           ; 1 bytes @ 0x5
  1970                           
  1971  0025                     I2C_Read2ByteRegister@reg:	
  1972                           ; 2 bytes @ 0x5
  1973                           
  1974  0025                     I2C_Write1ByteRegister@reg:	
  1975                           ; 1 bytes @ 0x5
  1976                           
  1977  0025                     I2C_ReadDataBlock@reg:	
  1978                           ; 1 bytes @ 0x5
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0x5
  1982  0025                     	ds	1
  1983  0026                     I2C_Write1ByteRegister@data:
  1984  0026                     I2C_ReadDataBlock@data:	
  1985                           ; 1 bytes @ 0x6
  1986                           
  1987                           
  1988                           ; 1 bytes @ 0x6
  1989  0026                     	ds	1
  1990  0027                     ??_I2C_Read2ByteRegister:
  1991  0027                     ??_I2C_Write1ByteRegister:	
  1992                           ; 1 bytes @ 0x7
  1993                           
  1994  0027                     I2C_ReadDataBlock@len:	
  1995                           ; 1 bytes @ 0x7
  1996                           
  1997                           
  1998                           ; 2 bytes @ 0x7
  1999  0027                     	ds	1
  2000  0028                     I2C_Write1ByteRegister@address:
  2001                           
  2002                           ; 1 bytes @ 0x8
  2003  0028                     	ds	1
  2004  0029                     ??_I2C_ReadDataBlock:
  2005                           
  2006                           ; 1 bytes @ 0x9
  2007  0029                     	ds	1
  2008  002A                     I2C_ReadDataBlock@address:
  2009                           
  2010                           ; 1 bytes @ 0xA
  2011  002A                     	ds	1
  2012  002B                     I2C_Read2ByteRegister@address:
  2013  002B                     I2C_ReadDataBlock@bufferBlock:	
  2014                           ; 1 bytes @ 0xB
  2015                           
  2016                           
  2017                           ; 3 bytes @ 0xB
  2018  002B                     	ds	1
  2019  002C                     I2C_Read2ByteRegister@returnValue:
  2020                           
  2021                           ; 2 bytes @ 0xC
  2022  002C                     	ds	2
  2023  002E                     ?_get_temperature_BMP180:
  2024  002E                     ?_get_calibration_data_BMP180:	
  2025                           ; 4 bytes @ 0xE
  2026                           
  2027                           
  2028                           ; 26 bytes @ 0xE
  2029  002E                     	ds	4
  2030  0032                     ??_get_temperature_BMP180:
  2031                           
  2032                           ; 1 bytes @ 0x12
  2033  0032                     	ds	13
  2034  003F                     get_temperature_BMP180@x2:
  2035                           
  2036                           ; 4 bytes @ 0x1F
  2037  003F                     	ds	4
  2038  0043                     get_temperature_BMP180@t:
  2039                           
  2040                           ; 4 bytes @ 0x23
  2041  0043                     	ds	4
  2042  0047                     get_temperature_BMP180@uncompensated_temperature:
  2043                           
  2044                           ; 4 bytes @ 0x27
  2045  0047                     	ds	1
  2046  0048                     ??_get_calibration_data_BMP180:
  2047                           
  2048                           ; 1 bytes @ 0x28
  2049  0048                     	ds	3
  2050  004B                     get_temperature_BMP180@x1:
  2051                           
  2052                           ; 4 bytes @ 0x2B
  2053  004B                     	ds	2
  2054  004D                     get_calibration_data_BMP180@buffer_I2C:
  2055                           
  2056                           ; 22 bytes @ 0x2D
  2057  004D                     	ds	22
  2058  0063                     ??_main:
  2059                           
  2060                           ; 1 bytes @ 0x43
  2061  0063                     	ds	2
  2062                           
  2063                           	psect	maintext
  2064  0409                     __pmaintext:	
  2065 ;;
  2066 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2067 ;;
  2068 ;; *************** function _main *****************
  2069 ;; Defined at:
  2070 ;;		line 54 in file "main.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : B1F/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2084 ;;      Params:         0       0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0
  2086 ;;      Temps:          0       2       0       0       0       0       0
  2087 ;;      Totals:         0       2       0       0       0       0       0
  2088 ;;Total ram usage:        2 bytes
  2089 ;; Hardware stack levels required when called: 10
  2090 ;; This function calls:
  2091 ;;		_SYSTEM_Initialize
  2092 ;;		_get_calibration_data_BMP180
  2093 ;;		_get_temperature_BMP180
  2094 ;;		_set_strip_led_color
  2095 ;; This function is called by:
  2096 ;;		Startup code after reset
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100  0409                     _main:	
  2101                           ;psect for function _main
  2102                           
  2103  0409                     l2844:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2106                           
  2107                           
  2108                           ;main.c: 57:     SYSTEM_Initialize();
  2109  0409  3180  2090  3184   	fcall	_SYSTEM_Initialize
  2110  040C                     l2846:
  2111                           
  2112                           ;main.c: 74:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  2113  040C  3029               	movlw	41
  2114  040D  0020               	movlb	0	; select bank0
  2115  040E  00E4               	movwf	??_main+1
  2116  040F  3096               	movlw	150
  2117  0410  00E3               	movwf	??_main
  2118  0411  307F               	movlw	127
  2119  0412                     u1947:
  2120  0412  0B89               	decfsz	9,f
  2121  0413  2C12               	goto	u1947
  2122  0414  0BE3               	decfsz	??_main,f
  2123  0415  2C12               	goto	u1947
  2124  0416  0BE4               	decfsz	??_main+1,f
  2125  0417  2C12               	goto	u1947
  2126  0418                     l2848:
  2127                           
  2128                           ;main.c: 75:     LATBbits.LATB4 = 1;
  2129  0418  0022               	movlb	2	; select bank2
  2130  0419  160D               	bsf	13,4	;volatile
  2131  041A                     l2850:
  2132                           
  2133                           ;main.c: 80:     COLOR_LED[3].rgb_color = 0xFFFFFF;
  2134  041A  3000               	movlw	0
  2135  041B  00AF               	movwf	((_COLOR_LED+3)^(0+256)+12)
  2136  041C  30FF               	movlw	255
  2137  041D  00AE               	movwf	((_COLOR_LED+2)^(0+256)+12)
  2138  041E  30FF               	movlw	255
  2139  041F  00AD               	movwf	((_COLOR_LED+1)^(0+256)+12)
  2140  0420  30FF               	movlw	255
  2141  0421  00AC               	movwf	(_COLOR_LED^(0+256)+12)
  2142  0422                     l2852:
  2143                           
  2144                           ;main.c: 84:     COLOR_LED[7].rgb_color = 0xFFFFFF;
  2145  0422  3000               	movlw	0
  2146  0423  00BF               	movwf	((_COLOR_LED+3)^(0+256)+28)
  2147  0424  30FF               	movlw	255
  2148  0425  00BE               	movwf	((_COLOR_LED+2)^(0+256)+28)
  2149  0426  30FF               	movlw	255
  2150  0427  00BD               	movwf	((_COLOR_LED+1)^(0+256)+28)
  2151  0428  30FF               	movlw	255
  2152  0429  00BC               	movwf	(_COLOR_LED^(0+256)+28)
  2153  042A                     l2854:
  2154                           
  2155                           ;main.c: 88:     COLOR_LED[11].rgb_color = 0xFFFFFF;
  2156  042A  3000               	movlw	0
  2157  042B  00CF               	movwf	((_COLOR_LED+3)^(0+256)+44)
  2158  042C  30FF               	movlw	255
  2159  042D  00CE               	movwf	((_COLOR_LED+2)^(0+256)+44)
  2160  042E  30FF               	movlw	255
  2161  042F  00CD               	movwf	((_COLOR_LED+1)^(0+256)+44)
  2162  0430  30FF               	movlw	255
  2163  0431  00CC               	movwf	(_COLOR_LED^(0+256)+44)
  2164  0432                     l2856:
  2165                           
  2166                           ;main.c: 92:     COLOR_LED[15].rgb_color = 0xFFFFFF;
  2167  0432  3000               	movlw	0
  2168  0433  00DF               	movwf	((_COLOR_LED+3)^(0+256)+60)
  2169  0434  30FF               	movlw	255
  2170  0435  00DE               	movwf	((_COLOR_LED+2)^(0+256)+60)
  2171  0436  30FF               	movlw	255
  2172  0437  00DD               	movwf	((_COLOR_LED+1)^(0+256)+60)
  2173  0438  30FF               	movlw	255
  2174  0439  00DC               	movwf	(_COLOR_LED^(0+256)+60)
  2175  043A                     l2858:
  2176                           
  2177                           ;main.c: 94:     set_strip_led_color(16, COLOR_LED);
  2178  043A  3020               	movlw	(low (_COLOR_LED| (0+256)))& (0+255)
  2179  043B  0020               	movlb	0	; select bank0
  2180  043C  00E3               	movwf	??_main
  2181  043D  0863               	movf	??_main,w
  2182  043E  00F0               	movwf	set_strip_led_color@COLOR_LED
  2183  043F  3010               	movlw	16
  2184  0440  3185  2509  3184   	fcall	_set_strip_led_color
  2185  0443                     l2860:
  2186                           
  2187                           ;main.c: 98:     DATA_BMP_180.CALIBRATION_DATA = get_calibration_data_BMP180();
  2188  0443  3185  25B4  3184   	fcall	_get_calibration_data_BMP180
  2189  0446  0020               	movlb	0	; select bank0
  2190  0447  302E               	movlw	low ?_get_calibration_data_BMP180
  2191  0448  0086               	movwf	6
  2192  0449  3000               	movlw	high ?_get_calibration_data_BMP180
  2193  044A  0087               	movwf	7
  2194  044B  3008               	movlw	8
  2195  044C  3EA0               	addlw	(low (_DATA_BMP_180| (0+256)))& (0+255)
  2196  044D  0084               	movwf	4
  2197  044E  3001               	movlw	1	; select bank3/4
  2198  044F  0085               	movwf	5
  2199  0450  301A               	movlw	26
  2200  0451  00E3               	movwf	??_main
  2201  0452                     u1560:
  2202  0452  0016               	moviw fsr1++
  2203  0453  001A               	movwi fsr0++
  2204  0454  0BE3               	decfsz	??_main,f
  2205  0455  2C52               	goto	u1560
  2206  0456                     l2862:
  2207                           
  2208                           ;main.c: 101:     {;main.c: 107:         DATA_BMP_180.temperature = get_temperature_BMP1
      +                          80();
  2209  0456  3186  26B0  3184   	fcall	_get_temperature_BMP180
  2210  0459  0020               	movlb	0	; select bank0
  2211  045A  0831               	movf	?_get_temperature_BMP180+3,w
  2212  045B  0023               	movlb	3	; select bank3
  2213  045C  00A3               	movwf	(_DATA_BMP_180+3)^(0+384)
  2214  045D  0020               	movlb	0	; select bank0
  2215  045E  0830               	movf	?_get_temperature_BMP180+2,w
  2216  045F  0023               	movlb	3	; select bank3
  2217  0460  00A2               	movwf	(_DATA_BMP_180+2)^(0+384)
  2218  0461  0020               	movlb	0	; select bank0
  2219  0462  082F               	movf	?_get_temperature_BMP180+1,w
  2220  0463  0023               	movlb	3	; select bank3
  2221  0464  00A1               	movwf	(_DATA_BMP_180+1)^(0+384)
  2222  0465  0020               	movlb	0	; select bank0
  2223  0466  082E               	movf	?_get_temperature_BMP180,w
  2224  0467  0023               	movlb	3	; select bank3
  2225  0468  00A0               	movwf	_DATA_BMP_180^(0+384)
  2226  0469                     l2864:
  2227                           
  2228                           ;main.c: 108:         _delay((unsigned long)((5000)*(32000000/4000.0)));
  2229  0469  30CB               	movlw	203
  2230  046A  0020               	movlb	0	; select bank0
  2231  046B  00E4               	movwf	??_main+1
  2232  046C  30EC               	movlw	236
  2233  046D  00E3               	movwf	??_main
  2234  046E  3084               	movlw	132
  2235  046F                     u1957:
  2236  046F  0B89               	decfsz	9,f
  2237  0470  2C6F               	goto	u1957
  2238  0471  0BE3               	decfsz	??_main,f
  2239  0472  2C6F               	goto	u1957
  2240  0473  0BE4               	decfsz	??_main+1,f
  2241  0474  2C6F               	goto	u1957
  2242  0475  0000               	nop
  2243  0476  2C56               	goto	l2862
  2244  0477  3180  2803         	ljmp	start
  2245  0479                     __end_of_main:
  2246                           
  2247                           	psect	text1
  2248  0509                     __ptext1:	
  2249 ;; *************** function _set_strip_led_color *****************
  2250 ;; Defined at:
  2251 ;;		line 63 in file "RGB_5050.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  number_led      1    wreg     unsigned char 
  2254 ;;  COLOR_LED       1    0[COMMON] PTR struct .
  2255 ;;		 -> COLOR_LED(64), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  number_led      1    4[COMMON] unsigned char 
  2258 ;;  i               1    7[COMMON] unsigned char 
  2259 ;;  i               1    6[COMMON] unsigned char 
  2260 ;;  i               1    5[COMMON] unsigned char 
  2261 ;;  number_led_c    1    8[COMMON] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         1       0       0       0       0       0       0
  2272 ;;      Locals:         5       0       0       0       0       0       0
  2273 ;;      Temps:          3       0       0       0       0       0       0
  2274 ;;      Totals:         9       0       0       0       0       0       0
  2275 ;;Total ram usage:        9 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284  0509                     _set_strip_led_color:	
  2285                           ;psect for function _set_strip_led_color
  2286                           
  2287                           
  2288                           ;incstack = 0
  2289                           ; Regs used in _set_strip_led_color: [wreg+fsr1l+fsr1h+status,2+status,0]
  2290                           ;set_strip_led_color@number_led stored from wreg
  2291  0509  00F4               	movwf	set_strip_led_color@number_led
  2292  050A                     l2726:
  2293                           
  2294                           ;RGB_5050.c: 65:     for(uint8_t number_led_choose = 1; number_led_choose <= number_led;
      +                           number_led_choose++){
  2295  050A  01F8               	clrf	set_strip_led_color@number_led_choose
  2296  050B  0AF8               	incf	set_strip_led_color@number_led_choose,f
  2297  050C  2DA3               	goto	l2766
  2298  050D                     l2728:
  2299                           
  2300                           ;RGB_5050.c: 66:         for(uint8_t i = 0; i != 8; i++){
  2301  050D  01F5               	clrf	set_strip_led_color@i
  2302  050E                     l2734:
  2303                           
  2304                           ;RGB_5050.c: 67:             if(COLOR_LED[number_led_choose - 1].RGB.green & (0b00000001
      +                           << i)){
  2305  050E  0878               	movf	set_strip_led_color@number_led_choose,w
  2306  050F  00F1               	movwf	??_set_strip_led_color
  2307  0510  3001               	movlw	1
  2308  0511                     u1345:
  2309  0511  35F1               	lslf	??_set_strip_led_color,f
  2310  0512  3EFF               	addlw	-1
  2311  0513  1D03               	skipz
  2312  0514  2D11               	goto	u1345
  2313  0515  3571               	lslf	??_set_strip_led_color,w
  2314  0516  0770               	addwf	set_strip_led_color@COLOR_LED,w
  2315  0517  00F2               	movwf	??_set_strip_led_color+1
  2316  0518  0872               	movf	??_set_strip_led_color+1,w
  2317  0519  3EFD               	addlw	-3
  2318  051A  0086               	movwf	6
  2319  051B  3001               	movlw	1	; select bank2/3
  2320  051C  0087               	movwf	7
  2321  051D  3001               	movlw	1
  2322  051E  00F3               	movwf	??_set_strip_led_color+2
  2323  051F  0A75               	incf	set_strip_led_color@i,w
  2324  0520  2D22               	goto	u1354
  2325  0521                     u1355:
  2326  0521  35F3               	lslf	??_set_strip_led_color+2,f
  2327  0522                     u1354:
  2328  0522  0B89               	decfsz	9,f
  2329  0523  2D21               	goto	u1355
  2330  0524  0873               	movf	??_set_strip_led_color+2,w
  2331  0525  0501               	andwf	1,w
  2332  0526  1903               	btfsc	3,2
  2333  0527  2D29               	goto	u1361
  2334  0528  2D2A               	goto	u1360
  2335  0529                     u1361:
  2336  0529  2D31               	goto	l127
  2337  052A                     u1360:
  2338  052A                     l2736:
  2339                           
  2340                           ;RGB_5050.c: 68:                 LATBbits.LATB5 = 1;LATBbits.LATB5 = 1;LATBbits.LATB5 = 
      +                          1;LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;
  2341  052A  0022               	movlb	2	; select bank2
  2342  052B  168D               	bsf	13,5	;volatile
  2343  052C  168D               	bsf	13,5	;volatile
  2344  052D  168D               	bsf	13,5	;volatile
  2345  052E  168D               	bsf	13,5	;volatile
  2346  052F  128D               	bcf	13,5	;volatile
  2347                           
  2348                           ;RGB_5050.c: 69:             }
  2349  0530  2D35               	goto	l2738
  2350  0531                     l127:	
  2351                           ;RGB_5050.c: 70:             else{
  2352                           
  2353                           
  2354                           ;RGB_5050.c: 71:                 LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;LATBbits.LATB5 = 
      +                          0;
  2355  0531  0022               	movlb	2	; select bank2
  2356  0532  168D               	bsf	13,5	;volatile
  2357  0533  128D               	bcf	13,5	;volatile
  2358  0534  128D               	bcf	13,5	;volatile
  2359  0535                     l2738:
  2360                           
  2361                           ;RGB_5050.c: 73:         }
  2362  0535  3001               	movlw	1
  2363  0536  00F1               	movwf	??_set_strip_led_color
  2364  0537  0871               	movf	??_set_strip_led_color,w
  2365  0538  07F5               	addwf	set_strip_led_color@i,f
  2366  0539  3008               	movlw	8
  2367  053A  0675               	xorwf	set_strip_led_color@i,w
  2368  053B  1D03               	btfss	3,2
  2369  053C  2D3E               	goto	u1371
  2370  053D  2D3F               	goto	u1370
  2371  053E                     u1371:
  2372  053E  2D0E               	goto	l2734
  2373  053F                     u1370:
  2374  053F                     l2740:
  2375                           
  2376                           ;RGB_5050.c: 75:         for(uint8_t i = 0; i != 8; i++){
  2377  053F  01F6               	clrf	set_strip_led_color@i_239
  2378  0540                     l2746:
  2379                           
  2380                           ;RGB_5050.c: 76:             if(COLOR_LED[number_led_choose - 1].RGB.red & (0b00000001 <
      +                          < i)){
  2381  0540  0878               	movf	set_strip_led_color@number_led_choose,w
  2382  0541  00F1               	movwf	??_set_strip_led_color
  2383  0542  3001               	movlw	1
  2384  0543                     u1385:
  2385  0543  35F1               	lslf	??_set_strip_led_color,f
  2386  0544  3EFF               	addlw	-1
  2387  0545  1D03               	skipz
  2388  0546  2D43               	goto	u1385
  2389  0547  3571               	lslf	??_set_strip_led_color,w
  2390  0548  0770               	addwf	set_strip_led_color@COLOR_LED,w
  2391  0549  00F2               	movwf	??_set_strip_led_color+1
  2392  054A  0872               	movf	??_set_strip_led_color+1,w
  2393  054B  3EFE               	addlw	-2
  2394  054C  0086               	movwf	6
  2395  054D  3001               	movlw	1	; select bank2/3
  2396  054E  0087               	movwf	7
  2397  054F  3001               	movlw	1
  2398  0550  00F3               	movwf	??_set_strip_led_color+2
  2399  0551  0A76               	incf	set_strip_led_color@i_239,w
  2400  0552  2D54               	goto	u1394
  2401  0553                     u1395:
  2402  0553  35F3               	lslf	??_set_strip_led_color+2,f
  2403  0554                     u1394:
  2404  0554  0B89               	decfsz	9,f
  2405  0555  2D53               	goto	u1395
  2406  0556  0873               	movf	??_set_strip_led_color+2,w
  2407  0557  0501               	andwf	1,w
  2408  0558  1903               	btfsc	3,2
  2409  0559  2D5B               	goto	u1401
  2410  055A  2D5C               	goto	u1400
  2411  055B                     u1401:
  2412  055B  2D62               	goto	l131
  2413  055C                     u1400:
  2414  055C                     l2748:
  2415                           
  2416                           ;RGB_5050.c: 77:                 LATBbits.LATB5 = 1;LATBbits.LATB5 = 1;LATBbits.LATB5 = 
      +                          1;LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;
  2417  055C  168D               	bsf	13,5	;volatile
  2418  055D  168D               	bsf	13,5	;volatile
  2419  055E  168D               	bsf	13,5	;volatile
  2420  055F  168D               	bsf	13,5	;volatile
  2421  0560  128D               	bcf	13,5	;volatile
  2422                           
  2423                           ;RGB_5050.c: 78:             }
  2424  0561  2D65               	goto	l2750
  2425  0562                     l131:	
  2426                           ;RGB_5050.c: 79:             else{
  2427                           
  2428                           
  2429                           ;RGB_5050.c: 80:                 LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;LATBbits.LATB5 = 
      +                          0;
  2430  0562  168D               	bsf	13,5	;volatile
  2431  0563  128D               	bcf	13,5	;volatile
  2432  0564  128D               	bcf	13,5	;volatile
  2433  0565                     l2750:
  2434                           
  2435                           ;RGB_5050.c: 82:         }
  2436  0565  3001               	movlw	1
  2437  0566  00F1               	movwf	??_set_strip_led_color
  2438  0567  0871               	movf	??_set_strip_led_color,w
  2439  0568  07F6               	addwf	set_strip_led_color@i_239,f
  2440  0569  3008               	movlw	8
  2441  056A  0676               	xorwf	set_strip_led_color@i_239,w
  2442  056B  1D03               	btfss	3,2
  2443  056C  2D6E               	goto	u1411
  2444  056D  2D6F               	goto	u1410
  2445  056E                     u1411:
  2446  056E  2D40               	goto	l2746
  2447  056F                     u1410:
  2448  056F                     l2752:
  2449                           
  2450                           ;RGB_5050.c: 84:         for(uint8_t i = 0; i != 8; i++){
  2451  056F  01F7               	clrf	set_strip_led_color@i_240
  2452  0570                     l2758:
  2453                           
  2454                           ;RGB_5050.c: 85:             if(COLOR_LED[number_led_choose - 1].RGB.blue & (0b00000001 
      +                          << i)){
  2455  0570  0878               	movf	set_strip_led_color@number_led_choose,w
  2456  0571  00F1               	movwf	??_set_strip_led_color
  2457  0572  3001               	movlw	1
  2458  0573                     u1425:
  2459  0573  35F1               	lslf	??_set_strip_led_color,f
  2460  0574  3EFF               	addlw	-1
  2461  0575  1D03               	skipz
  2462  0576  2D73               	goto	u1425
  2463  0577  3571               	lslf	??_set_strip_led_color,w
  2464  0578  0770               	addwf	set_strip_led_color@COLOR_LED,w
  2465  0579  00F2               	movwf	??_set_strip_led_color+1
  2466  057A  0872               	movf	??_set_strip_led_color+1,w
  2467  057B  3EFC               	addlw	-4
  2468  057C  0086               	movwf	6
  2469  057D  3001               	movlw	1	; select bank2/3
  2470  057E  0087               	movwf	7
  2471  057F  3001               	movlw	1
  2472  0580  00F3               	movwf	??_set_strip_led_color+2
  2473  0581  0A77               	incf	set_strip_led_color@i_240,w
  2474  0582  2D84               	goto	u1434
  2475  0583                     u1435:
  2476  0583  35F3               	lslf	??_set_strip_led_color+2,f
  2477  0584                     u1434:
  2478  0584  0B89               	decfsz	9,f
  2479  0585  2D83               	goto	u1435
  2480  0586  0873               	movf	??_set_strip_led_color+2,w
  2481  0587  0501               	andwf	1,w
  2482  0588  1903               	btfsc	3,2
  2483  0589  2D8B               	goto	u1441
  2484  058A  2D8C               	goto	u1440
  2485  058B                     u1441:
  2486  058B  2D92               	goto	l135
  2487  058C                     u1440:
  2488  058C                     l2760:
  2489                           
  2490                           ;RGB_5050.c: 86:                 LATBbits.LATB5 = 1;LATBbits.LATB5 = 1;LATBbits.LATB5 = 
      +                          1;LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;
  2491  058C  168D               	bsf	13,5	;volatile
  2492  058D  168D               	bsf	13,5	;volatile
  2493  058E  168D               	bsf	13,5	;volatile
  2494  058F  168D               	bsf	13,5	;volatile
  2495  0590  128D               	bcf	13,5	;volatile
  2496                           
  2497                           ;RGB_5050.c: 87:             }
  2498  0591  2D95               	goto	l2762
  2499  0592                     l135:	
  2500                           ;RGB_5050.c: 88:             else{
  2501                           
  2502                           
  2503                           ;RGB_5050.c: 89:                 LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;LATBbits.LATB5 = 
      +                          0;
  2504  0592  168D               	bsf	13,5	;volatile
  2505  0593  128D               	bcf	13,5	;volatile
  2506  0594  128D               	bcf	13,5	;volatile
  2507  0595                     l2762:
  2508                           
  2509                           ;RGB_5050.c: 91:         }
  2510  0595  3001               	movlw	1
  2511  0596  00F1               	movwf	??_set_strip_led_color
  2512  0597  0871               	movf	??_set_strip_led_color,w
  2513  0598  07F7               	addwf	set_strip_led_color@i_240,f
  2514  0599  3008               	movlw	8
  2515  059A  0677               	xorwf	set_strip_led_color@i_240,w
  2516  059B  1D03               	btfss	3,2
  2517  059C  2D9E               	goto	u1451
  2518  059D  2D9F               	goto	u1450
  2519  059E                     u1451:
  2520  059E  2D70               	goto	l2758
  2521  059F                     u1450:
  2522  059F                     l2764:
  2523                           
  2524                           ;RGB_5050.c: 92:     }
  2525  059F  3001               	movlw	1
  2526  05A0  00F1               	movwf	??_set_strip_led_color
  2527  05A1  0871               	movf	??_set_strip_led_color,w
  2528  05A2  07F8               	addwf	set_strip_led_color@number_led_choose,f
  2529  05A3                     l2766:
  2530  05A3  0878               	movf	set_strip_led_color@number_led_choose,w
  2531  05A4  0274               	subwf	set_strip_led_color@number_led,w
  2532  05A5  1803               	skipnc
  2533  05A6  2DA8               	goto	u1461
  2534  05A7  2DA9               	goto	u1460
  2535  05A8                     u1461:
  2536  05A8  2D0D               	goto	l2728
  2537  05A9                     u1460:
  2538  05A9                     l137:
  2539                           
  2540                           ;RGB_5050.c: 93:     LATBbits.LATB5 = 1;LATBbits.LATB5 = 0;_delay((unsigned long)((200)*
      +                          (32000000/4000000.0)));
  2541  05A9  0022               	movlb	2	; select bank2
  2542  05AA  168D               	bsf	13,5	;volatile
  2543  05AB  128D               	bcf	13,5	;volatile
  2544  05AC                     l2768:
  2545  05AC  30E4               	movlw	228
  2546  05AD                     u1967:
  2547  05AD  3200               	nop2
  2548  05AE  3200               	nop2
  2549  05AF  0B89               	decfsz	9,f
  2550  05B0  2DAD               	goto	u1967
  2551  05B1  3200               	nop2
  2552  05B2  3200               	nop2
  2553  05B3                     l138:
  2554  05B3  0008               	return
  2555  05B4                     __end_of_set_strip_led_color:
  2556                           
  2557                           	psect	text2
  2558  06B0                     __ptext2:	
  2559 ;; *************** function _get_temperature_BMP180 *****************
  2560 ;; Defined at:
  2561 ;;		line 49 in file "BMP_180.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  x1              4   43[BANK0 ] long 
  2566 ;;  uncompensate    4   39[BANK0 ] long 
  2567 ;;  t               4   35[BANK0 ] long 
  2568 ;;  x2              4   31[BANK0 ] long 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  4   14[BANK0 ] long 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         0       4       0       0       0       0       0
  2579 ;;      Locals:         0      16       0       0       0       0       0
  2580 ;;      Temps:          0      13       0       0       0       0       0
  2581 ;;      Totals:         0      33       0       0       0       0       0
  2582 ;;Total ram usage:       33 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 9
  2585 ;; This function calls:
  2586 ;;		_I2C_Read2ByteRegister
  2587 ;;		_I2C_Write1ByteRegister
  2588 ;;		___aldiv
  2589 ;;		___lmul
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595  06B0                     _get_temperature_BMP180:	
  2596                           ;psect for function _get_temperature_BMP180
  2597                           
  2598  06B0                     l2800:	
  2599                           ;incstack = 0
  2600                           ; Regs used in _get_temperature_BMP180: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2601                           
  2602                           
  2603                           ;BMP_180.c: 51:     int32_t x2 = 0;
  2604  06B0  3000               	movlw	0
  2605  06B1  0020               	movlb	0	; select bank0
  2606  06B2  00C2               	movwf	get_temperature_BMP180@x2+3
  2607  06B3  3000               	movlw	0
  2608  06B4  00C1               	movwf	get_temperature_BMP180@x2+2
  2609  06B5  3000               	movlw	0
  2610  06B6  00C0               	movwf	get_temperature_BMP180@x2+1
  2611  06B7  3000               	movlw	0
  2612  06B8  00BF               	movwf	get_temperature_BMP180@x2
  2613                           
  2614                           ;BMP_180.c: 52:     int32_t t = 0;
  2615  06B9  3000               	movlw	0
  2616  06BA  00C6               	movwf	get_temperature_BMP180@t+3
  2617  06BB  3000               	movlw	0
  2618  06BC  00C5               	movwf	get_temperature_BMP180@t+2
  2619  06BD  3000               	movlw	0
  2620  06BE  00C4               	movwf	get_temperature_BMP180@t+1
  2621  06BF  3000               	movlw	0
  2622  06C0  00C3               	movwf	get_temperature_BMP180@t
  2623                           
  2624                           ;BMP_180.c: 53:     int32_t uncompensated_temperature = 0;
  2625  06C1  3000               	movlw	0
  2626  06C2  00CA               	movwf	get_temperature_BMP180@uncompensated_temperature+3
  2627  06C3  3000               	movlw	0
  2628  06C4  00C9               	movwf	get_temperature_BMP180@uncompensated_temperature+2
  2629  06C5  3000               	movlw	0
  2630  06C6  00C8               	movwf	get_temperature_BMP180@uncompensated_temperature+1
  2631  06C7  3000               	movlw	0
  2632  06C8  00C7               	movwf	get_temperature_BMP180@uncompensated_temperature
  2633  06C9                     l2802:
  2634                           
  2635                           ;BMP_180.c: 55:     I2C_Write1ByteRegister(0x77, 0xF4, 0x2E);
  2636  06C9  30F4               	movlw	244
  2637  06CA  00B2               	movwf	??_get_temperature_BMP180
  2638  06CB  0832               	movf	??_get_temperature_BMP180,w
  2639  06CC  00A5               	movwf	I2C_Write1ByteRegister@reg
  2640  06CD  302E               	movlw	46
  2641  06CE  00B3               	movwf	??_get_temperature_BMP180+1
  2642  06CF  0833               	movf	??_get_temperature_BMP180+1,w
  2643  06D0  00A6               	movwf	I2C_Write1ByteRegister@data
  2644  06D1  3077               	movlw	119
  2645  06D2  3182  224D  3186   	fcall	_I2C_Write1ByteRegister
  2646  06D5                     l2804:
  2647                           
  2648                           ;BMP_180.c: 56:     _delay((unsigned long)((4500)*(32000000/4000000.0)));
  2649  06D5  302F               	movlw	47
  2650  06D6  0020               	movlb	0	; select bank0
  2651  06D7  00B2               	movwf	??_get_temperature_BMP180
  2652  06D8  30BF               	movlw	191
  2653  06D9                     u1977:
  2654  06D9  0B89               	decfsz	9,f
  2655  06DA  2ED9               	goto	u1977
  2656  06DB  0BB2               	decfsz	??_get_temperature_BMP180,f
  2657  06DC  2ED9               	goto	u1977
  2658  06DD  3200               	nop2
  2659                           
  2660                           ;BMP_180.c: 57:     uncompensated_temperature = I2C_Read2ByteRegister(0x77, 0xF6);
  2661  06DE  30F6               	movlw	246
  2662  06DF  0020               	movlb	0	; select bank0
  2663  06E0  00B2               	movwf	??_get_temperature_BMP180
  2664  06E1  0832               	movf	??_get_temperature_BMP180,w
  2665  06E2  00A5               	movwf	I2C_Read2ByteRegister@reg
  2666  06E3  3077               	movlw	119
  2667  06E4  3183  236E  3186   	fcall	_I2C_Read2ByteRegister
  2668  06E7  0020               	movlb	0	; select bank0
  2669  06E8  0825               	movf	?_I2C_Read2ByteRegister,w
  2670  06E9  00C7               	movwf	get_temperature_BMP180@uncompensated_temperature
  2671  06EA  0826               	movf	?_I2C_Read2ByteRegister+1,w
  2672  06EB  00C8               	movwf	get_temperature_BMP180@uncompensated_temperature+1
  2673  06EC  01C9               	clrf	get_temperature_BMP180@uncompensated_temperature+2
  2674  06ED  01CA               	clrf	get_temperature_BMP180@uncompensated_temperature+3
  2675  06EE                     l2806:
  2676                           
  2677                           ;BMP_180.c: 59:     x1 = ((uncompensated_temperature - BMP180.CALIBRATION_DATA.AC6) * BM
      +                          P180.CALIBRATION_DATA.AC5) >> 15;
  2678  06EE  0021               	movlb	1	; select bank1
  2679  06EF  0832               	movf	(_BMP180^(0+128)+18),w
  2680  06F0  0020               	movlb	0	; select bank0
  2681  06F1  00B2               	movwf	??_get_temperature_BMP180
  2682  06F2  0021               	movlb	1	; select bank1
  2683  06F3  0833               	movf	((_BMP180+1)^(0+128)+18),w
  2684  06F4  0020               	movlb	0	; select bank0
  2685  06F5  00B3               	movwf	??_get_temperature_BMP180+1
  2686  06F6  01B4               	clrf	??_get_temperature_BMP180+2
  2687  06F7  01B5               	clrf	??_get_temperature_BMP180+3
  2688  06F8  0847               	movf	get_temperature_BMP180@uncompensated_temperature,w
  2689  06F9  00B6               	movwf	??_get_temperature_BMP180+4
  2690  06FA  0848               	movf	get_temperature_BMP180@uncompensated_temperature+1,w
  2691  06FB  00B7               	movwf	??_get_temperature_BMP180+5
  2692  06FC  0849               	movf	get_temperature_BMP180@uncompensated_temperature+2,w
  2693  06FD  00B8               	movwf	??_get_temperature_BMP180+6
  2694  06FE  084A               	movf	get_temperature_BMP180@uncompensated_temperature+3,w
  2695  06FF  00B9               	movwf	??_get_temperature_BMP180+7
  2696  0700  0832               	movf	??_get_temperature_BMP180,w
  2697  0701  02B6               	subwf	??_get_temperature_BMP180+4,f
  2698  0702  0833               	movf	??_get_temperature_BMP180+1,w
  2699  0703  3BB7               	subwfb	??_get_temperature_BMP180+5,f
  2700  0704  0834               	movf	??_get_temperature_BMP180+2,w
  2701  0705  3BB8               	subwfb	??_get_temperature_BMP180+6,f
  2702  0706  0835               	movf	??_get_temperature_BMP180+3,w
  2703  0707  3BB9               	subwfb	??_get_temperature_BMP180+7,f
  2704  0708  0839               	movf	??_get_temperature_BMP180+7,w
  2705  0709  00F3               	movwf	___lmul@multiplier+3
  2706  070A  0838               	movf	??_get_temperature_BMP180+6,w
  2707  070B  00F2               	movwf	___lmul@multiplier+2
  2708  070C  0837               	movf	??_get_temperature_BMP180+5,w
  2709  070D  00F1               	movwf	___lmul@multiplier+1
  2710  070E  0836               	movf	??_get_temperature_BMP180+4,w
  2711  070F  00F0               	movwf	___lmul@multiplier
  2712  0710  0021               	movlb	1	; select bank1
  2713  0711  0830               	movf	(_BMP180^(0+128)+16),w
  2714  0712  00F4               	movwf	___lmul@multiplicand
  2715  0713  0831               	movf	((_BMP180+1)^(0+128)+16),w
  2716  0714  00F5               	movwf	___lmul@multiplicand+1
  2717  0715  01F6               	clrf	___lmul@multiplicand+2
  2718  0716  01F7               	clrf	___lmul@multiplicand+3
  2719  0717  3182  2280  3186   	fcall	___lmul
  2720  071A  0870               	movf	?___lmul,w
  2721  071B  0020               	movlb	0	; select bank0
  2722  071C  00BA               	movwf	??_get_temperature_BMP180+8
  2723  071D  0871               	movf	?___lmul+1,w
  2724  071E  00BB               	movwf	??_get_temperature_BMP180+9
  2725  071F  0872               	movf	?___lmul+2,w
  2726  0720  00BC               	movwf	??_get_temperature_BMP180+10
  2727  0721  0873               	movf	?___lmul+3,w
  2728  0722  00BD               	movwf	??_get_temperature_BMP180+11
  2729  0723  300F               	movlw	15
  2730  0724  00BE               	movwf	??_get_temperature_BMP180+12
  2731  0725                     u1495:
  2732  0725  37BD               	asrf	??_get_temperature_BMP180+11,f
  2733  0726  0CBC               	rrf	??_get_temperature_BMP180+10,f
  2734  0727  0CBB               	rrf	??_get_temperature_BMP180+9,f
  2735  0728  0CBA               	rrf	??_get_temperature_BMP180+8,f
  2736  0729                     u1490:
  2737  0729  0BBE               	decfsz	??_get_temperature_BMP180+12,f
  2738  072A  2F25               	goto	u1495
  2739  072B  083D               	movf	??_get_temperature_BMP180+11,w
  2740  072C  00CE               	movwf	get_temperature_BMP180@x1+3
  2741  072D  083C               	movf	??_get_temperature_BMP180+10,w
  2742  072E  00CD               	movwf	get_temperature_BMP180@x1+2
  2743  072F  083B               	movf	??_get_temperature_BMP180+9,w
  2744  0730  00CC               	movwf	get_temperature_BMP180@x1+1
  2745  0731  083A               	movf	??_get_temperature_BMP180+8,w
  2746  0732  00CB               	movwf	get_temperature_BMP180@x1
  2747  0733                     l2808:
  2748                           
  2749                           ;BMP_180.c: 61:     if ((x1 == 0) && (BMP180.CALIBRATION_DATA.MD == 0))
  2750  0733  084E               	movf	get_temperature_BMP180@x1+3,w
  2751  0734  044D               	iorwf	get_temperature_BMP180@x1+2,w
  2752  0735  044C               	iorwf	get_temperature_BMP180@x1+1,w
  2753  0736  044B               	iorwf	get_temperature_BMP180@x1,w
  2754  0737  1D03               	skipz
  2755  0738  2F3A               	goto	u1501
  2756  0739  2F3B               	goto	u1500
  2757  073A                     u1501:
  2758  073A  2F4C               	goto	l2816
  2759  073B                     u1500:
  2760  073B                     l2810:
  2761  073B  0021               	movlb	1	; select bank1
  2762  073C  0840               	movf	(_BMP180^(0+128)+32),w
  2763  073D  0441               	iorwf	((_BMP180+1)^(0+128)+32),w
  2764  073E  1D03               	btfss	3,2
  2765  073F  2F41               	goto	u1511
  2766  0740  2F42               	goto	u1510
  2767  0741                     u1511:
  2768  0741  2F4C               	goto	l2816
  2769  0742                     u1510:
  2770  0742                     l2812:
  2771                           
  2772                           ;BMP_180.c: 62:     {;BMP_180.c: 63:         return 0;
  2773  0742  3000               	movlw	0
  2774  0743  0020               	movlb	0	; select bank0
  2775  0744  00B1               	movwf	?_get_temperature_BMP180+3
  2776  0745  3000               	movlw	0
  2777  0746  00B0               	movwf	?_get_temperature_BMP180+2
  2778  0747  3000               	movlw	0
  2779  0748  00AF               	movwf	?_get_temperature_BMP180+1
  2780  0749  3000               	movlw	0
  2781  074A  00AE               	movwf	?_get_temperature_BMP180
  2782  074B  2FDC               	goto	l598
  2783  074C                     l2816:
  2784                           
  2785                           ;BMP_180.c: 66:     x2 = (BMP180.CALIBRATION_DATA.MC << 11) / (x1 + BMP180.CALIBRATION_D
      +                          ATA.MD);
  2786  074C  0020               	movlb	0	; select bank0
  2787  074D  084B               	movf	get_temperature_BMP180@x1,w
  2788  074E  00B2               	movwf	??_get_temperature_BMP180
  2789  074F  084C               	movf	get_temperature_BMP180@x1+1,w
  2790  0750  00B3               	movwf	??_get_temperature_BMP180+1
  2791  0751  084D               	movf	get_temperature_BMP180@x1+2,w
  2792  0752  00B4               	movwf	??_get_temperature_BMP180+2
  2793  0753  084E               	movf	get_temperature_BMP180@x1+3,w
  2794  0754  00B5               	movwf	??_get_temperature_BMP180+3
  2795  0755  0021               	movlb	1	; select bank1
  2796  0756  0840               	movf	(_BMP180^(0+128)+32),w
  2797  0757  0020               	movlb	0	; select bank0
  2798  0758  00B6               	movwf	??_get_temperature_BMP180+4
  2799  0759  0021               	movlb	1	; select bank1
  2800  075A  0841               	movf	((_BMP180+1)^(0+128)+32),w
  2801  075B  0020               	movlb	0	; select bank0
  2802  075C  00B7               	movwf	??_get_temperature_BMP180+5
  2803  075D  3000               	movlw	0
  2804  075E  1BB7               	btfsc	??_get_temperature_BMP180+5,7
  2805  075F  30FF               	movlw	255
  2806  0760  00B8               	movwf	??_get_temperature_BMP180+6
  2807  0761  00B9               	movwf	??_get_temperature_BMP180+7
  2808  0762  0836               	movf	??_get_temperature_BMP180+4,w
  2809  0763  07B2               	addwf	??_get_temperature_BMP180,f
  2810  0764  0837               	movf	??_get_temperature_BMP180+5,w
  2811  0765  3DB3               	addwfc	??_get_temperature_BMP180+1,f
  2812  0766  0838               	movf	??_get_temperature_BMP180+6,w
  2813  0767  3DB4               	addwfc	??_get_temperature_BMP180+2,f
  2814  0768  0839               	movf	??_get_temperature_BMP180+7,w
  2815  0769  3DB5               	addwfc	??_get_temperature_BMP180+3,f
  2816  076A  0835               	movf	??_get_temperature_BMP180+3,w
  2817  076B  00F3               	movwf	___aldiv@divisor+3
  2818  076C  0834               	movf	??_get_temperature_BMP180+2,w
  2819  076D  00F2               	movwf	___aldiv@divisor+2
  2820  076E  0833               	movf	??_get_temperature_BMP180+1,w
  2821  076F  00F1               	movwf	___aldiv@divisor+1
  2822  0770  0832               	movf	??_get_temperature_BMP180,w
  2823  0771  00F0               	movwf	___aldiv@divisor
  2824  0772  301E               	movlw	30
  2825  0773  3EA0               	addlw	(low (_BMP180| 0))& (0+255)
  2826  0774  0086               	movwf	6
  2827  0775  0187               	clrf	7
  2828  0776  3F40               	moviw [0]fsr1
  2829  0777  00BA               	movwf	??_get_temperature_BMP180+8
  2830  0778  3F41               	moviw [1]fsr1
  2831  0779  00BB               	movwf	??_get_temperature_BMP180+9
  2832  077A  300B               	movlw	11
  2833  077B                     u1525:
  2834  077B  35BA               	lslf	??_get_temperature_BMP180+8,f
  2835  077C  0DBB               	rlf	??_get_temperature_BMP180+9,f
  2836  077D  0B89               	decfsz	9,f
  2837  077E  2F7B               	goto	u1525
  2838  077F  083A               	movf	??_get_temperature_BMP180+8,w
  2839  0780  00F4               	movwf	___aldiv@dividend
  2840  0781  083B               	movf	??_get_temperature_BMP180+9,w
  2841  0782  00F5               	movwf	___aldiv@dividend+1
  2842  0783  0D89               	rlf	9,f
  2843  0784  3B89               	subwfb	9,f
  2844  0785  0989               	comf	9,f
  2845  0786  00F6               	movwf	___aldiv@dividend+2
  2846  0787  00F7               	movwf	___aldiv@dividend+3
  2847  0788  3184  2479  3186   	fcall	___aldiv
  2848  078B  0873               	movf	?___aldiv+3,w
  2849  078C  0020               	movlb	0	; select bank0
  2850  078D  00C2               	movwf	get_temperature_BMP180@x2+3
  2851  078E  0872               	movf	?___aldiv+2,w
  2852  078F  00C1               	movwf	get_temperature_BMP180@x2+2
  2853  0790  0871               	movf	?___aldiv+1,w
  2854  0791  00C0               	movwf	get_temperature_BMP180@x2+1
  2855  0792  0870               	movf	?___aldiv,w
  2856  0793  00BF               	movwf	get_temperature_BMP180@x2
  2857  0794                     l2818:
  2858                           
  2859                           ;BMP_180.c: 67:     BMP180.CALIBRATION_DATA.B5 = x1 + x2;
  2860  0794  084B               	movf	get_temperature_BMP180@x1,w
  2861  0795  073F               	addwf	get_temperature_BMP180@x2,w
  2862  0796  00B2               	movwf	??_get_temperature_BMP180
  2863  0797  084C               	movf	get_temperature_BMP180@x1+1,w
  2864  0798  3D40               	addwfc	get_temperature_BMP180@x2+1,w
  2865  0799  00B3               	movwf	??_get_temperature_BMP180+1
  2866  079A  084D               	movf	get_temperature_BMP180@x1+2,w
  2867  079B  3D41               	addwfc	get_temperature_BMP180@x2+2,w
  2868  079C  00B4               	movwf	??_get_temperature_BMP180+2
  2869  079D  084E               	movf	get_temperature_BMP180@x1+3,w
  2870  079E  3D42               	addwfc	get_temperature_BMP180@x2+3,w
  2871  079F  00B5               	movwf	??_get_temperature_BMP180+3
  2872  07A0  0835               	movf	??_get_temperature_BMP180+3,w
  2873  07A1  0021               	movlb	1	; select bank1
  2874  07A2  00BB               	movwf	((_BMP180+3)^(0+128)+24)
  2875  07A3  0020               	movlb	0	; select bank0
  2876  07A4  0834               	movf	??_get_temperature_BMP180+2,w
  2877  07A5  0021               	movlb	1	; select bank1
  2878  07A6  00BA               	movwf	((_BMP180+2)^(0+128)+24)
  2879  07A7  0020               	movlb	0	; select bank0
  2880  07A8  0833               	movf	??_get_temperature_BMP180+1,w
  2881  07A9  0021               	movlb	1	; select bank1
  2882  07AA  00B9               	movwf	((_BMP180+1)^(0+128)+24)
  2883  07AB  0020               	movlb	0	; select bank0
  2884  07AC  0832               	movf	??_get_temperature_BMP180,w
  2885  07AD  0021               	movlb	1	; select bank1
  2886  07AE  00B8               	movwf	(_BMP180^(0+128)+24)
  2887  07AF                     l2820:
  2888                           
  2889                           ;BMP_180.c: 68:     t = (BMP180.CALIBRATION_DATA.B5 + 8) >> 4;
  2890  07AF  3008               	movlw	8
  2891  07B0  0020               	movlb	0	; select bank0
  2892  07B1  00B2               	movwf	??_get_temperature_BMP180
  2893  07B2  3000               	movlw	0
  2894  07B3  00B3               	movwf	??_get_temperature_BMP180+1
  2895  07B4  3000               	movlw	0
  2896  07B5  00B4               	movwf	??_get_temperature_BMP180+2
  2897  07B6  3000               	movlw	0
  2898  07B7  00B5               	movwf	??_get_temperature_BMP180+3
  2899  07B8  3018               	movlw	24
  2900  07B9  3EA0               	addlw	(low (_BMP180| 0))& (0+255)
  2901  07BA  0086               	movwf	6
  2902  07BB  0187               	clrf	7
  2903  07BC  3F40               	moviw [0]fsr1
  2904  07BD  07B2               	addwf	??_get_temperature_BMP180,f
  2905  07BE  3F41               	moviw [1]fsr1
  2906  07BF  3DB3               	addwfc	??_get_temperature_BMP180+1,f
  2907  07C0  3F42               	moviw [2]fsr1
  2908  07C1  3DB4               	addwfc	??_get_temperature_BMP180+2,f
  2909  07C2  3F43               	moviw [3]fsr1
  2910  07C3  3DB5               	addwfc	??_get_temperature_BMP180+3,f
  2911  07C4  3004               	movlw	4
  2912  07C5  00B6               	movwf	??_get_temperature_BMP180+4
  2913  07C6                     u1535:
  2914  07C6  37B5               	asrf	??_get_temperature_BMP180+3,f
  2915  07C7  0CB4               	rrf	??_get_temperature_BMP180+2,f
  2916  07C8  0CB3               	rrf	??_get_temperature_BMP180+1,f
  2917  07C9  0CB2               	rrf	??_get_temperature_BMP180,f
  2918  07CA                     u1530:
  2919  07CA  0BB6               	decfsz	??_get_temperature_BMP180+4,f
  2920  07CB  2FC6               	goto	u1535
  2921  07CC  0835               	movf	??_get_temperature_BMP180+3,w
  2922  07CD  00C6               	movwf	get_temperature_BMP180@t+3
  2923  07CE  0834               	movf	??_get_temperature_BMP180+2,w
  2924  07CF  00C5               	movwf	get_temperature_BMP180@t+2
  2925  07D0  0833               	movf	??_get_temperature_BMP180+1,w
  2926  07D1  00C4               	movwf	get_temperature_BMP180@t+1
  2927  07D2  0832               	movf	??_get_temperature_BMP180,w
  2928  07D3  00C3               	movwf	get_temperature_BMP180@t
  2929  07D4                     l2822:
  2930                           
  2931                           ;BMP_180.c: 70:     return t;
  2932  07D4  0846               	movf	get_temperature_BMP180@t+3,w
  2933  07D5  00B1               	movwf	?_get_temperature_BMP180+3
  2934  07D6  0845               	movf	get_temperature_BMP180@t+2,w
  2935  07D7  00B0               	movwf	?_get_temperature_BMP180+2
  2936  07D8  0844               	movf	get_temperature_BMP180@t+1,w
  2937  07D9  00AF               	movwf	?_get_temperature_BMP180+1
  2938  07DA  0843               	movf	get_temperature_BMP180@t,w
  2939  07DB  00AE               	movwf	?_get_temperature_BMP180
  2940  07DC                     l598:
  2941  07DC  0008               	return
  2942  07DD                     __end_of_get_temperature_BMP180:
  2943                           
  2944                           	psect	text3
  2945  0280                     __ptext3:	
  2946 ;; *************** function ___lmul *****************
  2947 ;; Defined at:
  2948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  multiplier      4    0[COMMON] unsigned long 
  2951 ;;  multiplicand    4    4[COMMON] unsigned long 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  product         4    8[COMMON] unsigned long 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4    0[COMMON] unsigned long 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2963 ;;      Params:         8       0       0       0       0       0       0
  2964 ;;      Locals:         4       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0
  2966 ;;      Totals:        12       0       0       0       0       0       0
  2967 ;;Total ram usage:       12 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_get_temperature_BMP180
  2973 ;;		_get_pressure_BMP180
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977  0280                     ___lmul:	
  2978                           ;psect for function ___lmul
  2979                           
  2980  0280                     l2670:	
  2981                           ;incstack = 0
  2982                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2983                           
  2984  0280  3000               	movlw	0
  2985  0281  00FB               	movwf	___lmul@product+3
  2986  0282  3000               	movlw	0
  2987  0283  00FA               	movwf	___lmul@product+2
  2988  0284  3000               	movlw	0
  2989  0285  00F9               	movwf	___lmul@product+1
  2990  0286  3000               	movlw	0
  2991  0287  00F8               	movwf	___lmul@product
  2992  0288                     l2672:
  2993  0288  1C70               	btfss	___lmul@multiplier,0
  2994  0289  2A8B               	goto	u1201
  2995  028A  2A8C               	goto	u1200
  2996  028B                     u1201:
  2997  028B  2A94               	goto	l2676
  2998  028C                     u1200:
  2999  028C                     l2674:
  3000  028C  0874               	movf	___lmul@multiplicand,w
  3001  028D  07F8               	addwf	___lmul@product,f
  3002  028E  0875               	movf	___lmul@multiplicand+1,w
  3003  028F  3DF9               	addwfc	___lmul@product+1,f
  3004  0290  0876               	movf	___lmul@multiplicand+2,w
  3005  0291  3DFA               	addwfc	___lmul@product+2,f
  3006  0292  0877               	movf	___lmul@multiplicand+3,w
  3007  0293  3DFB               	addwfc	___lmul@product+3,f
  3008  0294                     l2676:
  3009  0294  3001               	movlw	1
  3010  0295                     u1215:
  3011  0295  35F4               	lslf	___lmul@multiplicand,f
  3012  0296  0DF5               	rlf	___lmul@multiplicand+1,f
  3013  0297  0DF6               	rlf	___lmul@multiplicand+2,f
  3014  0298  0DF7               	rlf	___lmul@multiplicand+3,f
  3015  0299  0B89               	decfsz	9,f
  3016  029A  2A95               	goto	u1215
  3017  029B                     l2678:
  3018  029B  3001               	movlw	1
  3019  029C                     u1225:
  3020  029C  36F3               	lsrf	___lmul@multiplier+3,f
  3021  029D  0CF2               	rrf	___lmul@multiplier+2,f
  3022  029E  0CF1               	rrf	___lmul@multiplier+1,f
  3023  029F  0CF0               	rrf	___lmul@multiplier,f
  3024  02A0  0B89               	decfsz	9,f
  3025  02A1  2A9C               	goto	u1225
  3026  02A2  0873               	movf	___lmul@multiplier+3,w
  3027  02A3  0472               	iorwf	___lmul@multiplier+2,w
  3028  02A4  0471               	iorwf	___lmul@multiplier+1,w
  3029  02A5  0470               	iorwf	___lmul@multiplier,w
  3030  02A6  1D03               	skipz
  3031  02A7  2AA9               	goto	u1231
  3032  02A8  2AAA               	goto	u1230
  3033  02A9                     u1231:
  3034  02A9  2A88               	goto	l2672
  3035  02AA                     u1230:
  3036  02AA                     l2680:
  3037  02AA  087B               	movf	___lmul@product+3,w
  3038  02AB  00F3               	movwf	?___lmul+3
  3039  02AC  087A               	movf	___lmul@product+2,w
  3040  02AD  00F2               	movwf	?___lmul+2
  3041  02AE  0879               	movf	___lmul@product+1,w
  3042  02AF  00F1               	movwf	?___lmul+1
  3043  02B0  0878               	movf	___lmul@product,w
  3044  02B1  00F0               	movwf	?___lmul
  3045  02B2                     l776:
  3046  02B2  0008               	return
  3047  02B3                     __end_of___lmul:
  3048                           
  3049                           	psect	text4
  3050  0479                     __ptext4:	
  3051 ;; *************** function ___aldiv *****************
  3052 ;; Defined at:
  3053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aldiv.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  divisor         4    0[COMMON] long 
  3056 ;;  dividend        4    4[COMMON] long 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  quotient        4    2[BANK0 ] long 
  3059 ;;  sign            1    1[BANK0 ] unsigned char 
  3060 ;;  counter         1    0[BANK0 ] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  4    0[COMMON] long 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3070 ;;      Params:         8       0       0       0       0       0       0
  3071 ;;      Locals:         0       6       0       0       0       0       0
  3072 ;;      Temps:          1       0       0       0       0       0       0
  3073 ;;      Totals:         9       6       0       0       0       0       0
  3074 ;;Total ram usage:       15 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_get_temperature_BMP180
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083  0479                     ___aldiv:	
  3084                           ;psect for function ___aldiv
  3085                           
  3086  0479                     l2684:	
  3087                           ;incstack = 0
  3088                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3089                           
  3090  0479  0020               	movlb	0	; select bank0
  3091  047A  01A1               	clrf	___aldiv@sign
  3092  047B                     l2686:
  3093  047B  1FF3               	btfss	___aldiv@divisor+3,7
  3094  047C  2C7E               	goto	u1241
  3095  047D  2C7F               	goto	u1240
  3096  047E                     u1241:
  3097  047E  2C8C               	goto	l827
  3098  047F                     u1240:
  3099  047F                     l2688:
  3100  047F  09F0               	comf	___aldiv@divisor,f
  3101  0480  09F1               	comf	___aldiv@divisor+1,f
  3102  0481  09F2               	comf	___aldiv@divisor+2,f
  3103  0482  09F3               	comf	___aldiv@divisor+3,f
  3104  0483  0AF0               	incf	___aldiv@divisor,f
  3105  0484  1903               	skipnz
  3106  0485  0AF1               	incf	___aldiv@divisor+1,f
  3107  0486  1903               	skipnz
  3108  0487  0AF2               	incf	___aldiv@divisor+2,f
  3109  0488  1903               	skipnz
  3110  0489  0AF3               	incf	___aldiv@divisor+3,f
  3111  048A  01A1               	clrf	___aldiv@sign
  3112  048B  0AA1               	incf	___aldiv@sign,f
  3113  048C                     l827:
  3114  048C  1FF7               	btfss	___aldiv@dividend+3,7
  3115  048D  2C8F               	goto	u1251
  3116  048E  2C90               	goto	u1250
  3117  048F                     u1251:
  3118  048F  2C9F               	goto	l2694
  3119  0490                     u1250:
  3120  0490                     l2690:
  3121  0490  09F4               	comf	___aldiv@dividend,f
  3122  0491  09F5               	comf	___aldiv@dividend+1,f
  3123  0492  09F6               	comf	___aldiv@dividend+2,f
  3124  0493  09F7               	comf	___aldiv@dividend+3,f
  3125  0494  0AF4               	incf	___aldiv@dividend,f
  3126  0495  1903               	skipnz
  3127  0496  0AF5               	incf	___aldiv@dividend+1,f
  3128  0497  1903               	skipnz
  3129  0498  0AF6               	incf	___aldiv@dividend+2,f
  3130  0499  1903               	skipnz
  3131  049A  0AF7               	incf	___aldiv@dividend+3,f
  3132  049B                     l2692:
  3133  049B  3001               	movlw	1
  3134  049C  00F8               	movwf	??___aldiv
  3135  049D  0878               	movf	??___aldiv,w
  3136  049E  06A1               	xorwf	___aldiv@sign,f
  3137  049F                     l2694:
  3138  049F  3000               	movlw	0
  3139  04A0  00A5               	movwf	___aldiv@quotient+3
  3140  04A1  3000               	movlw	0
  3141  04A2  00A4               	movwf	___aldiv@quotient+2
  3142  04A3  3000               	movlw	0
  3143  04A4  00A3               	movwf	___aldiv@quotient+1
  3144  04A5  3000               	movlw	0
  3145  04A6  00A2               	movwf	___aldiv@quotient
  3146  04A7                     l2696:
  3147  04A7  0873               	movf	___aldiv@divisor+3,w
  3148  04A8  0472               	iorwf	___aldiv@divisor+2,w
  3149  04A9  0471               	iorwf	___aldiv@divisor+1,w
  3150  04AA  0470               	iorwf	___aldiv@divisor,w
  3151  04AB  1903               	skipnz
  3152  04AC  2CAE               	goto	u1261
  3153  04AD  2CAF               	goto	u1260
  3154  04AE                     u1261:
  3155  04AE  2CF0               	goto	l2716
  3156  04AF                     u1260:
  3157  04AF                     l2698:
  3158  04AF  01A0               	clrf	___aldiv@counter
  3159  04B0  0AA0               	incf	___aldiv@counter,f
  3160  04B1  2CBD               	goto	l2702
  3161  04B2                     l2700:
  3162  04B2  3001               	movlw	1
  3163  04B3                     u1275:
  3164  04B3  35F0               	lslf	___aldiv@divisor,f
  3165  04B4  0DF1               	rlf	___aldiv@divisor+1,f
  3166  04B5  0DF2               	rlf	___aldiv@divisor+2,f
  3167  04B6  0DF3               	rlf	___aldiv@divisor+3,f
  3168  04B7  0B89               	decfsz	9,f
  3169  04B8  2CB3               	goto	u1275
  3170  04B9  3001               	movlw	1
  3171  04BA  00F8               	movwf	??___aldiv
  3172  04BB  0878               	movf	??___aldiv,w
  3173  04BC  07A0               	addwf	___aldiv@counter,f
  3174  04BD                     l2702:
  3175  04BD  1FF3               	btfss	___aldiv@divisor+3,7
  3176  04BE  2CC0               	goto	u1281
  3177  04BF  2CC1               	goto	u1280
  3178  04C0                     u1281:
  3179  04C0  2CB2               	goto	l2700
  3180  04C1                     u1280:
  3181  04C1                     l2704:
  3182  04C1  3001               	movlw	1
  3183  04C2                     u1295:
  3184  04C2  35A2               	lslf	___aldiv@quotient,f
  3185  04C3  0DA3               	rlf	___aldiv@quotient+1,f
  3186  04C4  0DA4               	rlf	___aldiv@quotient+2,f
  3187  04C5  0DA5               	rlf	___aldiv@quotient+3,f
  3188  04C6  0B89               	decfsz	9,f
  3189  04C7  2CC2               	goto	u1295
  3190  04C8                     l2706:
  3191  04C8  0873               	movf	___aldiv@divisor+3,w
  3192  04C9  0277               	subwf	___aldiv@dividend+3,w
  3193  04CA  1D03               	skipz
  3194  04CB  2CD6               	goto	u1305
  3195  04CC  0872               	movf	___aldiv@divisor+2,w
  3196  04CD  0276               	subwf	___aldiv@dividend+2,w
  3197  04CE  1D03               	skipz
  3198  04CF  2CD6               	goto	u1305
  3199  04D0  0871               	movf	___aldiv@divisor+1,w
  3200  04D1  0275               	subwf	___aldiv@dividend+1,w
  3201  04D2  1D03               	skipz
  3202  04D3  2CD6               	goto	u1305
  3203  04D4  0870               	movf	___aldiv@divisor,w
  3204  04D5  0274               	subwf	___aldiv@dividend,w
  3205  04D6                     u1305:
  3206  04D6  1C03               	skipc
  3207  04D7  2CD9               	goto	u1301
  3208  04D8  2CDA               	goto	u1300
  3209  04D9                     u1301:
  3210  04D9  2CE3               	goto	l2712
  3211  04DA                     u1300:
  3212  04DA                     l2708:
  3213  04DA  0870               	movf	___aldiv@divisor,w
  3214  04DB  02F4               	subwf	___aldiv@dividend,f
  3215  04DC  0871               	movf	___aldiv@divisor+1,w
  3216  04DD  3BF5               	subwfb	___aldiv@dividend+1,f
  3217  04DE  0872               	movf	___aldiv@divisor+2,w
  3218  04DF  3BF6               	subwfb	___aldiv@dividend+2,f
  3219  04E0  0873               	movf	___aldiv@divisor+3,w
  3220  04E1  3BF7               	subwfb	___aldiv@dividend+3,f
  3221  04E2                     l2710:
  3222  04E2  1422               	bsf	___aldiv@quotient,0
  3223  04E3                     l2712:
  3224  04E3  3001               	movlw	1
  3225  04E4                     u1315:
  3226  04E4  36F3               	lsrf	___aldiv@divisor+3,f
  3227  04E5  0CF2               	rrf	___aldiv@divisor+2,f
  3228  04E6  0CF1               	rrf	___aldiv@divisor+1,f
  3229  04E7  0CF0               	rrf	___aldiv@divisor,f
  3230  04E8  0B89               	decfsz	9,f
  3231  04E9  2CE4               	goto	u1315
  3232  04EA                     l2714:
  3233  04EA  3001               	movlw	1
  3234  04EB  02A0               	subwf	___aldiv@counter,f
  3235  04EC  1D03               	btfss	3,2
  3236  04ED  2CEF               	goto	u1321
  3237  04EE  2CF0               	goto	u1320
  3238  04EF                     u1321:
  3239  04EF  2CC1               	goto	l2704
  3240  04F0                     u1320:
  3241  04F0                     l2716:
  3242  04F0  0821               	movf	___aldiv@sign,w
  3243  04F1  1903               	btfsc	3,2
  3244  04F2  2CF4               	goto	u1331
  3245  04F3  2CF5               	goto	u1330
  3246  04F4                     u1331:
  3247  04F4  2D00               	goto	l2720
  3248  04F5                     u1330:
  3249  04F5                     l2718:
  3250  04F5  09A2               	comf	___aldiv@quotient,f
  3251  04F6  09A3               	comf	___aldiv@quotient+1,f
  3252  04F7  09A4               	comf	___aldiv@quotient+2,f
  3253  04F8  09A5               	comf	___aldiv@quotient+3,f
  3254  04F9  0AA2               	incf	___aldiv@quotient,f
  3255  04FA  1903               	skipnz
  3256  04FB  0AA3               	incf	___aldiv@quotient+1,f
  3257  04FC  1903               	skipnz
  3258  04FD  0AA4               	incf	___aldiv@quotient+2,f
  3259  04FE  1903               	skipnz
  3260  04FF  0AA5               	incf	___aldiv@quotient+3,f
  3261  0500                     l2720:
  3262  0500  0825               	movf	___aldiv@quotient+3,w
  3263  0501  00F3               	movwf	?___aldiv+3
  3264  0502  0824               	movf	___aldiv@quotient+2,w
  3265  0503  00F2               	movwf	?___aldiv+2
  3266  0504  0823               	movf	___aldiv@quotient+1,w
  3267  0505  00F1               	movwf	?___aldiv+1
  3268  0506  0822               	movf	___aldiv@quotient,w
  3269  0507  00F0               	movwf	?___aldiv
  3270  0508                     l837:
  3271  0508  0008               	return
  3272  0509                     __end_of___aldiv:
  3273                           
  3274                           	psect	text5
  3275  024D                     __ptext5:	
  3276 ;; *************** function _I2C_Write1ByteRegister *****************
  3277 ;; Defined at:
  3278 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  address         1    wreg     unsigned char 
  3281 ;;  reg             1    5[BANK0 ] unsigned char 
  3282 ;;  data            1    6[BANK0 ] unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  address         1    8[BANK0 ] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3294 ;;      Params:         0       2       0       0       0       0       0
  3295 ;;      Locals:         0       1       0       0       0       0       0
  3296 ;;      Temps:          0       1       0       0       0       0       0
  3297 ;;      Totals:         0       4       0       0       0       0       0
  3298 ;;Total ram usage:        4 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 8
  3301 ;; This function calls:
  3302 ;;		_I2C_Close
  3303 ;;		_I2C_MasterWrite
  3304 ;;		_I2C_Open
  3305 ;;		_I2C_SetAddressNackCallback
  3306 ;;		_I2C_SetBuffer
  3307 ;;		_I2C_SetDataCompleteCallback
  3308 ;; This function is called by:
  3309 ;;		_get_temperature_BMP180
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313  024D                     _I2C_Write1ByteRegister:	
  3314                           ;psect for function _I2C_Write1ByteRegister
  3315                           
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _I2C_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3319                           ;I2C_Write1ByteRegister@address stored from wreg
  3320  024D  0020               	movlb	0	; select bank0
  3321  024E  00A8               	movwf	I2C_Write1ByteRegister@address
  3322  024F                     l2642:
  3323  024F                     l2644:	
  3324                           ;mcc_generated_files/examples/i2c_master_example.c: 91: void I2C_Write1ByteRegister(i2c_
      +                          address_t address, uint8_t reg, uint8_t data);mcc_generated_files/examples/i2c_master_ex
      +                          ample.c: 92: {;mcc_generated_files/examples/i2c_master_example.c: 93:     while(!I2C_Ope
      +                          n(address));
  3325                           
  3326  024F  0020               	movlb	0	; select bank0
  3327  0250  0828               	movf	I2C_Write1ByteRegister@address,w
  3328  0251  3182  22B3  3182   	fcall	_I2C_Open
  3329  0254  3A00               	xorlw	0
  3330  0255  1903               	skipnz
  3331  0256  2A58               	goto	u1161
  3332  0257  2A59               	goto	u1160
  3333  0258                     u1161:
  3334  0258  2A4F               	goto	l2644
  3335  0259                     u1160:
  3336  0259                     l2646:
  3337                           
  3338                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  3339  0259  3014               	movlw	low _wr1RegCompleteHandler
  3340  025A  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  3341  025B  3001               	movlw	high _wr1RegCompleteHandler
  3342  025C  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  3343  025D  3026               	movlw	(low (I2C_Write1ByteRegister@data| 0))& (0+255)
  3344  025E  0020               	movlb	0	; select bank0
  3345  025F  00A7               	movwf	??_I2C_Write1ByteRegister
  3346  0260  0827               	movf	??_I2C_Write1ByteRegister,w
  3347  0261  00F7               	movwf	I2C_SetDataCompleteCallback@ptr
  3348  0262  3180  209D  3182   	fcall	_I2C_SetDataCompleteCallback
  3349  0265                     l2648:
  3350                           
  3351                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  3352  0265  3001               	movlw	1
  3353  0266  00F0               	movwf	I2C_SetBuffer@bufferSize
  3354  0267  3000               	movlw	0
  3355  0268  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  3356  0269  3025               	movlw	(low (I2C_Write1ByteRegister@reg| 0))& (0+255)
  3357  026A  3180  20D1  3182   	fcall	_I2C_SetBuffer
  3358  026D                     l2650:
  3359                           
  3360                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3361  026D  3000               	movlw	0
  3362  026E  00F5               	movwf	I2C_SetAddressNackCallback@cb
  3363  026F  00F6               	movwf	I2C_SetAddressNackCallback@cb+1
  3364  0270  01F7               	clrf	I2C_SetAddressNackCallback@ptr
  3365  0271  3180  20C4  3182   	fcall	_I2C_SetAddressNackCallback
  3366  0274                     l2652:
  3367                           
  3368                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  3369  0274  3180  204C  3182   	fcall	_I2C_MasterWrite
  3370  0277                     l2654:	
  3371                           ;mcc_generated_files/examples/i2c_master_example.c: 98:     while(I2C_BUSY == I2C_Close(
      +                          ));
  3372                           
  3373  0277  3181  213D  3182   	fcall	_I2C_Close
  3374  027A  3A01               	xorlw	1
  3375  027B  1903               	skipnz
  3376  027C  2A7E               	goto	u1171
  3377  027D  2A7F               	goto	u1170
  3378  027E                     u1171:
  3379  027E  2A77               	goto	l2654
  3380  027F                     u1170:
  3381  027F                     l189:
  3382  027F  0008               	return
  3383  0280                     __end_of_I2C_Write1ByteRegister:
  3384                           
  3385                           	psect	text6
  3386  036E                     __ptext6:	
  3387 ;; *************** function _I2C_Read2ByteRegister *****************
  3388 ;; Defined at:
  3389 ;;		line 77 in file "mcc_generated_files/examples/i2c_master_example.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  address         1    wreg     unsigned char 
  3392 ;;  reg             1    5[BANK0 ] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  address         1   11[BANK0 ] unsigned char 
  3395 ;;  returnValue     2   12[BANK0 ] unsigned short 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  2    5[BANK0 ] unsigned short 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3405 ;;      Params:         0       2       0       0       0       0       0
  3406 ;;      Locals:         0       3       0       0       0       0       0
  3407 ;;      Temps:          0       4       0       0       0       0       0
  3408 ;;      Totals:         0       9       0       0       0       0       0
  3409 ;;Total ram usage:        9 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 8
  3412 ;; This function calls:
  3413 ;;		_I2C_Close
  3414 ;;		_I2C_MasterWrite
  3415 ;;		_I2C_Open
  3416 ;;		_I2C_SetAddressNackCallback
  3417 ;;		_I2C_SetBuffer
  3418 ;;		_I2C_SetDataCompleteCallback
  3419 ;; This function is called by:
  3420 ;;		_get_temperature_BMP180
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424  036E                     _I2C_Read2ByteRegister:	
  3425                           ;psect for function _I2C_Read2ByteRegister
  3426                           
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _I2C_Read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3430                           ;I2C_Read2ByteRegister@address stored from wreg
  3431  036E  0020               	movlb	0	; select bank0
  3432  036F  00AB               	movwf	I2C_Read2ByteRegister@address
  3433  0370                     l2624:
  3434                           
  3435                           ;mcc_generated_files/examples/i2c_master_example.c: 77: uint16_t I2C_Read2ByteRegister(i
      +                          2c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 78
      +                          : {;mcc_generated_files/examples/i2c_master_example.c: 79:     uint16_t returnValue =0x0
      +                          0;
  3436  0370  01AC               	clrf	I2C_Read2ByteRegister@returnValue
  3437  0371  01AD               	clrf	I2C_Read2ByteRegister@returnValue+1
  3438  0372                     l2626:	
  3439                           ;mcc_generated_files/examples/i2c_master_example.c: 81:     while(!I2C_Open(address));
  3440                           
  3441  0372  0020               	movlb	0	; select bank0
  3442  0373  082B               	movf	I2C_Read2ByteRegister@address,w
  3443  0374  3182  22B3  3183   	fcall	_I2C_Open
  3444  0377  3A00               	xorlw	0
  3445  0378  1903               	skipnz
  3446  0379  2B7B               	goto	u1141
  3447  037A  2B7C               	goto	u1140
  3448  037B                     u1141:
  3449  037B  2B72               	goto	l2626
  3450  037C                     u1140:
  3451  037C                     l2628:
  3452                           
  3453                           ;mcc_generated_files/examples/i2c_master_example.c: 82:     I2C_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&returnValue);
  3454  037C  3003               	movlw	low _rd2RegCompleteHandler
  3455  037D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  3456  037E  3001               	movlw	high _rd2RegCompleteHandler
  3457  037F  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  3458  0380  302C               	movlw	(low (I2C_Read2ByteRegister@returnValue| 0))& (0+255)
  3459  0381  0020               	movlb	0	; select bank0
  3460  0382  00A7               	movwf	??_I2C_Read2ByteRegister
  3461  0383  0827               	movf	??_I2C_Read2ByteRegister,w
  3462  0384  00F7               	movwf	I2C_SetDataCompleteCallback@ptr
  3463  0385  3180  209D  3183   	fcall	_I2C_SetDataCompleteCallback
  3464  0388                     l2630:
  3465                           
  3466                           ;mcc_generated_files/examples/i2c_master_example.c: 83:     I2C_SetBuffer(&reg,1);
  3467  0388  3001               	movlw	1
  3468  0389  00F0               	movwf	I2C_SetBuffer@bufferSize
  3469  038A  3000               	movlw	0
  3470  038B  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  3471  038C  3025               	movlw	(low (I2C_Read2ByteRegister@reg| 0))& (0+255)
  3472  038D  3180  20D1  3183   	fcall	_I2C_SetBuffer
  3473  0390                     l2632:
  3474                           
  3475                           ;mcc_generated_files/examples/i2c_master_example.c: 84:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3476  0390  3000               	movlw	0
  3477  0391  00F5               	movwf	I2C_SetAddressNackCallback@cb
  3478  0392  00F6               	movwf	I2C_SetAddressNackCallback@cb+1
  3479  0393  01F7               	clrf	I2C_SetAddressNackCallback@ptr
  3480  0394  3180  20C4  3183   	fcall	_I2C_SetAddressNackCallback
  3481  0397                     l2634:
  3482                           
  3483                           ;mcc_generated_files/examples/i2c_master_example.c: 85:     I2C_MasterWrite();
  3484  0397  3180  204C  3183   	fcall	_I2C_MasterWrite
  3485  039A                     l2636:	
  3486                           ;mcc_generated_files/examples/i2c_master_example.c: 86:     while(I2C_BUSY == I2C_Close(
      +                          ));
  3487                           
  3488  039A  3181  213D  3183   	fcall	_I2C_Close
  3489  039D  3A01               	xorlw	1
  3490  039E  1903               	skipnz
  3491  039F  2BA1               	goto	u1151
  3492  03A0  2BA2               	goto	u1150
  3493  03A1                     u1151:
  3494  03A1  2B9A               	goto	l2636
  3495  03A2                     u1150:
  3496  03A2                     l2638:
  3497                           
  3498                           ;mcc_generated_files/examples/i2c_master_example.c: 88:     return (returnValue << 8 | r
      +                          eturnValue >> 8);
  3499  03A2  0020               	movlb	0	; select bank0
  3500  03A3  082D               	movf	I2C_Read2ByteRegister@returnValue+1,w
  3501  03A4  00A8               	movwf	??_I2C_Read2ByteRegister+1
  3502  03A5  082C               	movf	I2C_Read2ByteRegister@returnValue,w
  3503  03A6  00A7               	movwf	??_I2C_Read2ByteRegister
  3504  03A7  0828               	movf	??_I2C_Read2ByteRegister+1,w
  3505  03A8  00A7               	movwf	??_I2C_Read2ByteRegister
  3506  03A9  01A8               	clrf	??_I2C_Read2ByteRegister+1
  3507  03AA  082C               	movf	I2C_Read2ByteRegister@returnValue,w
  3508  03AB  00AA               	movwf	??_I2C_Read2ByteRegister+3
  3509  03AC  01A9               	clrf	??_I2C_Read2ByteRegister+2
  3510  03AD  0827               	movf	??_I2C_Read2ByteRegister,w
  3511  03AE  0429               	iorwf	??_I2C_Read2ByteRegister+2,w
  3512  03AF  00A5               	movwf	?_I2C_Read2ByteRegister
  3513  03B0  0828               	movf	??_I2C_Read2ByteRegister+1,w
  3514  03B1  042A               	iorwf	??_I2C_Read2ByteRegister+3,w
  3515  03B2  00A6               	movwf	?_I2C_Read2ByteRegister+1
  3516  03B3                     l180:
  3517  03B3  0008               	return
  3518  03B4                     __end_of_I2C_Read2ByteRegister:
  3519                           
  3520                           	psect	text7
  3521  05B4                     __ptext7:	
  3522 ;; *************** function _get_calibration_data_BMP180 *****************
  3523 ;; Defined at:
  3524 ;;		line 28 in file "BMP_180.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  buffer_I2C     22   45[BANK0 ] unsigned char [22]
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  26   14[BANK0 ] struct .
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3538 ;;      Params:         0      26       0       0       0       0       0
  3539 ;;      Locals:         0      22       0       0       0       0       0
  3540 ;;      Temps:          0       5       0       0       0       0       0
  3541 ;;      Totals:         0      53       0       0       0       0       0
  3542 ;;Total ram usage:       53 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 9
  3545 ;; This function calls:
  3546 ;;		_I2C_ReadDataBlock
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552  05B4                     _get_calibration_data_BMP180:	
  3553                           ;psect for function _get_calibration_data_BMP180
  3554                           
  3555  05B4                     l2770:	
  3556                           ;incstack = 0
  3557                           ; Regs used in _get_calibration_data_BMP180: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3558                           
  3559                           
  3560                           ;BMP_180.c: 29:     uint8_t buffer_I2C[22] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      +                          0x00, 0x00, 0x00, 0x00,
  3561  05B4  304D               	movlw	low get_calibration_data_BMP180@buffer_I2C
  3562  05B5  0086               	movwf	6
  3563  05B6  3000               	movlw	high get_calibration_data_BMP180@buffer_I2C
  3564  05B7  0087               	movwf	7
  3565  05B8  3016               	movlw	22
  3566  05B9  0020               	movlb	0	; select bank0
  3567  05BA  00C8               	movwf	??_get_calibration_data_BMP180
  3568  05BB  3000               	movlw	0
  3569  05BC                     u1470:
  3570  05BC  001E               	movwi fsr1++
  3571  05BD  0BC8               	decfsz	??_get_calibration_data_BMP180,f
  3572  05BE  2DBC               	goto	u1470
  3573  05BF                     l2772:
  3574                           
  3575                           ;BMP_180.c: 32:     I2C_ReadDataBlock(0x77, 0xAA, &buffer_I2C[0], 22);
  3576  05BF  30AA               	movlw	170
  3577  05C0  00C8               	movwf	??_get_calibration_data_BMP180
  3578  05C1  0848               	movf	??_get_calibration_data_BMP180,w
  3579  05C2  00A5               	movwf	I2C_ReadDataBlock@reg
  3580  05C3  304D               	movlw	(low (get_calibration_data_BMP180@buffer_I2C| 0))& (0+255)
  3581  05C4  00C9               	movwf	??_get_calibration_data_BMP180+1
  3582  05C5  0849               	movf	??_get_calibration_data_BMP180+1,w
  3583  05C6  00A6               	movwf	I2C_ReadDataBlock@data
  3584  05C7  3016               	movlw	22
  3585  05C8  00A7               	movwf	I2C_ReadDataBlock@len
  3586  05C9  3000               	movlw	0
  3587  05CA  00A8               	movwf	I2C_ReadDataBlock@len+1
  3588  05CB  3077               	movlw	119
  3589  05CC  3182  22ED  3185   	fcall	_I2C_ReadDataBlock
  3590  05CF                     l2774:
  3591                           
  3592                           ;BMP_180.c: 34:     BMP180.CALIBRATION_DATA.AC1 = (buffer_I2C[0] << 8) | buffer_I2C[1];
  3593  05CF  0020               	movlb	0	; select bank0
  3594  05D0  084E               	movf	get_calibration_data_BMP180@buffer_I2C+1,w
  3595  05D1  00C8               	movwf	??_get_calibration_data_BMP180
  3596  05D2  01C9               	clrf	??_get_calibration_data_BMP180+1
  3597  05D3  084D               	movf	get_calibration_data_BMP180@buffer_I2C,w
  3598  05D4  00CA               	movwf	??_get_calibration_data_BMP180+2
  3599  05D5  01CB               	clrf	??_get_calibration_data_BMP180+3
  3600  05D6  084A               	movf	??_get_calibration_data_BMP180+2,w
  3601  05D7  00CB               	movwf	??_get_calibration_data_BMP180+3
  3602  05D8  01CA               	clrf	??_get_calibration_data_BMP180+2
  3603  05D9  0848               	movf	??_get_calibration_data_BMP180,w
  3604  05DA  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3605  05DB  0021               	movlb	1	; select bank1
  3606  05DC  00A8               	movwf	(_BMP180^(0+128)+8)
  3607  05DD  0020               	movlb	0	; select bank0
  3608  05DE  0849               	movf	??_get_calibration_data_BMP180+1,w
  3609  05DF  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3610  05E0  0021               	movlb	1	; select bank1
  3611  05E1  00A9               	movwf	((_BMP180+1)^(0+128)+8)
  3612  05E2                     l2776:
  3613                           
  3614                           ;BMP_180.c: 35:     BMP180.CALIBRATION_DATA.AC2 = (buffer_I2C[2] << 8) | buffer_I2C[3];
  3615  05E2  0020               	movlb	0	; select bank0
  3616  05E3  0850               	movf	get_calibration_data_BMP180@buffer_I2C+3,w
  3617  05E4  00C8               	movwf	??_get_calibration_data_BMP180
  3618  05E5  01C9               	clrf	??_get_calibration_data_BMP180+1
  3619  05E6  084F               	movf	get_calibration_data_BMP180@buffer_I2C+2,w
  3620  05E7  00CA               	movwf	??_get_calibration_data_BMP180+2
  3621  05E8  01CB               	clrf	??_get_calibration_data_BMP180+3
  3622  05E9  084A               	movf	??_get_calibration_data_BMP180+2,w
  3623  05EA  00CB               	movwf	??_get_calibration_data_BMP180+3
  3624  05EB  01CA               	clrf	??_get_calibration_data_BMP180+2
  3625  05EC  0848               	movf	??_get_calibration_data_BMP180,w
  3626  05ED  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3627  05EE  0021               	movlb	1	; select bank1
  3628  05EF  00AA               	movwf	(_BMP180^(0+128)+10)
  3629  05F0  0020               	movlb	0	; select bank0
  3630  05F1  0849               	movf	??_get_calibration_data_BMP180+1,w
  3631  05F2  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3632  05F3  0021               	movlb	1	; select bank1
  3633  05F4  00AB               	movwf	((_BMP180+1)^(0+128)+10)
  3634  05F5                     l2778:
  3635                           
  3636                           ;BMP_180.c: 36:     BMP180.CALIBRATION_DATA.AC3 = (buffer_I2C[4] << 8) | buffer_I2C[5];
  3637  05F5  0020               	movlb	0	; select bank0
  3638  05F6  0852               	movf	get_calibration_data_BMP180@buffer_I2C+5,w
  3639  05F7  00C8               	movwf	??_get_calibration_data_BMP180
  3640  05F8  01C9               	clrf	??_get_calibration_data_BMP180+1
  3641  05F9  0851               	movf	get_calibration_data_BMP180@buffer_I2C+4,w
  3642  05FA  00CA               	movwf	??_get_calibration_data_BMP180+2
  3643  05FB  01CB               	clrf	??_get_calibration_data_BMP180+3
  3644  05FC  084A               	movf	??_get_calibration_data_BMP180+2,w
  3645  05FD  00CB               	movwf	??_get_calibration_data_BMP180+3
  3646  05FE  01CA               	clrf	??_get_calibration_data_BMP180+2
  3647  05FF  0848               	movf	??_get_calibration_data_BMP180,w
  3648  0600  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3649  0601  0021               	movlb	1	; select bank1
  3650  0602  00AC               	movwf	(_BMP180^(0+128)+12)
  3651  0603  0020               	movlb	0	; select bank0
  3652  0604  0849               	movf	??_get_calibration_data_BMP180+1,w
  3653  0605  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3654  0606  0021               	movlb	1	; select bank1
  3655  0607  00AD               	movwf	((_BMP180+1)^(0+128)+12)
  3656  0608                     l2780:
  3657                           
  3658                           ;BMP_180.c: 37:     BMP180.CALIBRATION_DATA.AC4 = (buffer_I2C[6] << 8) | buffer_I2C[7];
  3659  0608  0020               	movlb	0	; select bank0
  3660  0609  0854               	movf	get_calibration_data_BMP180@buffer_I2C+7,w
  3661  060A  00C8               	movwf	??_get_calibration_data_BMP180
  3662  060B  01C9               	clrf	??_get_calibration_data_BMP180+1
  3663  060C  0853               	movf	get_calibration_data_BMP180@buffer_I2C+6,w
  3664  060D  00CA               	movwf	??_get_calibration_data_BMP180+2
  3665  060E  01CB               	clrf	??_get_calibration_data_BMP180+3
  3666  060F  084A               	movf	??_get_calibration_data_BMP180+2,w
  3667  0610  00CB               	movwf	??_get_calibration_data_BMP180+3
  3668  0611  01CA               	clrf	??_get_calibration_data_BMP180+2
  3669  0612  0848               	movf	??_get_calibration_data_BMP180,w
  3670  0613  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3671  0614  0021               	movlb	1	; select bank1
  3672  0615  00AE               	movwf	(_BMP180^(0+128)+14)
  3673  0616  0020               	movlb	0	; select bank0
  3674  0617  0849               	movf	??_get_calibration_data_BMP180+1,w
  3675  0618  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3676  0619  0021               	movlb	1	; select bank1
  3677  061A  00AF               	movwf	((_BMP180+1)^(0+128)+14)
  3678  061B                     l2782:
  3679                           
  3680                           ;BMP_180.c: 38:     BMP180.CALIBRATION_DATA.AC5 = (buffer_I2C[8] << 8) | buffer_I2C[9];
  3681  061B  0020               	movlb	0	; select bank0
  3682  061C  0856               	movf	get_calibration_data_BMP180@buffer_I2C+9,w
  3683  061D  00C8               	movwf	??_get_calibration_data_BMP180
  3684  061E  01C9               	clrf	??_get_calibration_data_BMP180+1
  3685  061F  0855               	movf	get_calibration_data_BMP180@buffer_I2C+8,w
  3686  0620  00CA               	movwf	??_get_calibration_data_BMP180+2
  3687  0621  01CB               	clrf	??_get_calibration_data_BMP180+3
  3688  0622  084A               	movf	??_get_calibration_data_BMP180+2,w
  3689  0623  00CB               	movwf	??_get_calibration_data_BMP180+3
  3690  0624  01CA               	clrf	??_get_calibration_data_BMP180+2
  3691  0625  0848               	movf	??_get_calibration_data_BMP180,w
  3692  0626  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3693  0627  0021               	movlb	1	; select bank1
  3694  0628  00B0               	movwf	(_BMP180^(0+128)+16)
  3695  0629  0020               	movlb	0	; select bank0
  3696  062A  0849               	movf	??_get_calibration_data_BMP180+1,w
  3697  062B  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3698  062C  0021               	movlb	1	; select bank1
  3699  062D  00B1               	movwf	((_BMP180+1)^(0+128)+16)
  3700  062E                     l2784:
  3701                           
  3702                           ;BMP_180.c: 39:     BMP180.CALIBRATION_DATA.AC6 = (buffer_I2C[10] << 8) | buffer_I2C[11]
      +                          ;
  3703  062E  0020               	movlb	0	; select bank0
  3704  062F  0858               	movf	get_calibration_data_BMP180@buffer_I2C+11,w
  3705  0630  00C8               	movwf	??_get_calibration_data_BMP180
  3706  0631  01C9               	clrf	??_get_calibration_data_BMP180+1
  3707  0632  0857               	movf	get_calibration_data_BMP180@buffer_I2C+10,w
  3708  0633  00CA               	movwf	??_get_calibration_data_BMP180+2
  3709  0634  01CB               	clrf	??_get_calibration_data_BMP180+3
  3710  0635  084A               	movf	??_get_calibration_data_BMP180+2,w
  3711  0636  00CB               	movwf	??_get_calibration_data_BMP180+3
  3712  0637  01CA               	clrf	??_get_calibration_data_BMP180+2
  3713  0638  0848               	movf	??_get_calibration_data_BMP180,w
  3714  0639  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3715  063A  0021               	movlb	1	; select bank1
  3716  063B  00B2               	movwf	(_BMP180^(0+128)+18)
  3717  063C  0020               	movlb	0	; select bank0
  3718  063D  0849               	movf	??_get_calibration_data_BMP180+1,w
  3719  063E  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3720  063F  0021               	movlb	1	; select bank1
  3721  0640  00B3               	movwf	((_BMP180+1)^(0+128)+18)
  3722  0641                     l2786:
  3723                           
  3724                           ;BMP_180.c: 40:     BMP180.CALIBRATION_DATA.B1 = (buffer_I2C[12] << 8) | buffer_I2C[13];
  3725  0641  0020               	movlb	0	; select bank0
  3726  0642  085A               	movf	get_calibration_data_BMP180@buffer_I2C+13,w
  3727  0643  00C8               	movwf	??_get_calibration_data_BMP180
  3728  0644  01C9               	clrf	??_get_calibration_data_BMP180+1
  3729  0645  0859               	movf	get_calibration_data_BMP180@buffer_I2C+12,w
  3730  0646  00CA               	movwf	??_get_calibration_data_BMP180+2
  3731  0647  01CB               	clrf	??_get_calibration_data_BMP180+3
  3732  0648  084A               	movf	??_get_calibration_data_BMP180+2,w
  3733  0649  00CB               	movwf	??_get_calibration_data_BMP180+3
  3734  064A  01CA               	clrf	??_get_calibration_data_BMP180+2
  3735  064B  0848               	movf	??_get_calibration_data_BMP180,w
  3736  064C  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3737  064D  0021               	movlb	1	; select bank1
  3738  064E  00B4               	movwf	(_BMP180^(0+128)+20)
  3739  064F  0020               	movlb	0	; select bank0
  3740  0650  0849               	movf	??_get_calibration_data_BMP180+1,w
  3741  0651  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3742  0652  0021               	movlb	1	; select bank1
  3743  0653  00B5               	movwf	((_BMP180+1)^(0+128)+20)
  3744  0654                     l2788:
  3745                           
  3746                           ;BMP_180.c: 41:     BMP180.CALIBRATION_DATA.B2 = (buffer_I2C[14] << 8) | buffer_I2C[15];
  3747  0654  0020               	movlb	0	; select bank0
  3748  0655  085C               	movf	get_calibration_data_BMP180@buffer_I2C+15,w
  3749  0656  00C8               	movwf	??_get_calibration_data_BMP180
  3750  0657  01C9               	clrf	??_get_calibration_data_BMP180+1
  3751  0658  085B               	movf	get_calibration_data_BMP180@buffer_I2C+14,w
  3752  0659  00CA               	movwf	??_get_calibration_data_BMP180+2
  3753  065A  01CB               	clrf	??_get_calibration_data_BMP180+3
  3754  065B  084A               	movf	??_get_calibration_data_BMP180+2,w
  3755  065C  00CB               	movwf	??_get_calibration_data_BMP180+3
  3756  065D  01CA               	clrf	??_get_calibration_data_BMP180+2
  3757  065E  0848               	movf	??_get_calibration_data_BMP180,w
  3758  065F  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3759  0660  0021               	movlb	1	; select bank1
  3760  0661  00B6               	movwf	(_BMP180^(0+128)+22)
  3761  0662  0020               	movlb	0	; select bank0
  3762  0663  0849               	movf	??_get_calibration_data_BMP180+1,w
  3763  0664  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3764  0665  0021               	movlb	1	; select bank1
  3765  0666  00B7               	movwf	((_BMP180+1)^(0+128)+22)
  3766  0667                     l2790:
  3767                           
  3768                           ;BMP_180.c: 42:     BMP180.CALIBRATION_DATA.MB = (buffer_I2C[16] << 8) | buffer_I2C[17];
  3769  0667  0020               	movlb	0	; select bank0
  3770  0668  085E               	movf	get_calibration_data_BMP180@buffer_I2C+17,w
  3771  0669  00C8               	movwf	??_get_calibration_data_BMP180
  3772  066A  01C9               	clrf	??_get_calibration_data_BMP180+1
  3773  066B  085D               	movf	get_calibration_data_BMP180@buffer_I2C+16,w
  3774  066C  00CA               	movwf	??_get_calibration_data_BMP180+2
  3775  066D  01CB               	clrf	??_get_calibration_data_BMP180+3
  3776  066E  084A               	movf	??_get_calibration_data_BMP180+2,w
  3777  066F  00CB               	movwf	??_get_calibration_data_BMP180+3
  3778  0670  01CA               	clrf	??_get_calibration_data_BMP180+2
  3779  0671  0848               	movf	??_get_calibration_data_BMP180,w
  3780  0672  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3781  0673  0021               	movlb	1	; select bank1
  3782  0674  00BC               	movwf	(_BMP180^(0+128)+28)
  3783  0675  0020               	movlb	0	; select bank0
  3784  0676  0849               	movf	??_get_calibration_data_BMP180+1,w
  3785  0677  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3786  0678  0021               	movlb	1	; select bank1
  3787  0679  00BD               	movwf	((_BMP180+1)^(0+128)+28)
  3788  067A                     l2792:
  3789                           
  3790                           ;BMP_180.c: 43:     BMP180.CALIBRATION_DATA.MC = (buffer_I2C[18] << 8) | buffer_I2C[19];
  3791  067A  0020               	movlb	0	; select bank0
  3792  067B  0860               	movf	get_calibration_data_BMP180@buffer_I2C+19,w
  3793  067C  00C8               	movwf	??_get_calibration_data_BMP180
  3794  067D  01C9               	clrf	??_get_calibration_data_BMP180+1
  3795  067E  085F               	movf	get_calibration_data_BMP180@buffer_I2C+18,w
  3796  067F  00CA               	movwf	??_get_calibration_data_BMP180+2
  3797  0680  01CB               	clrf	??_get_calibration_data_BMP180+3
  3798  0681  084A               	movf	??_get_calibration_data_BMP180+2,w
  3799  0682  00CB               	movwf	??_get_calibration_data_BMP180+3
  3800  0683  01CA               	clrf	??_get_calibration_data_BMP180+2
  3801  0684  0848               	movf	??_get_calibration_data_BMP180,w
  3802  0685  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3803  0686  0021               	movlb	1	; select bank1
  3804  0687  00BE               	movwf	(_BMP180^(0+128)+30)
  3805  0688  0020               	movlb	0	; select bank0
  3806  0689  0849               	movf	??_get_calibration_data_BMP180+1,w
  3807  068A  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3808  068B  0021               	movlb	1	; select bank1
  3809  068C  00BF               	movwf	((_BMP180+1)^(0+128)+30)
  3810  068D                     l2794:
  3811                           
  3812                           ;BMP_180.c: 44:     BMP180.CALIBRATION_DATA.MD = (buffer_I2C[20] << 8) | buffer_I2C[21];
  3813  068D  0020               	movlb	0	; select bank0
  3814  068E  0862               	movf	get_calibration_data_BMP180@buffer_I2C+21,w
  3815  068F  00C8               	movwf	??_get_calibration_data_BMP180
  3816  0690  01C9               	clrf	??_get_calibration_data_BMP180+1
  3817  0691  0861               	movf	get_calibration_data_BMP180@buffer_I2C+20,w
  3818  0692  00CA               	movwf	??_get_calibration_data_BMP180+2
  3819  0693  01CB               	clrf	??_get_calibration_data_BMP180+3
  3820  0694  084A               	movf	??_get_calibration_data_BMP180+2,w
  3821  0695  00CB               	movwf	??_get_calibration_data_BMP180+3
  3822  0696  01CA               	clrf	??_get_calibration_data_BMP180+2
  3823  0697  0848               	movf	??_get_calibration_data_BMP180,w
  3824  0698  044A               	iorwf	??_get_calibration_data_BMP180+2,w
  3825  0699  0021               	movlb	1	; select bank1
  3826  069A  00C0               	movwf	(_BMP180^(0+128)+32)
  3827  069B  0020               	movlb	0	; select bank0
  3828  069C  0849               	movf	??_get_calibration_data_BMP180+1,w
  3829  069D  044B               	iorwf	??_get_calibration_data_BMP180+3,w
  3830  069E  0021               	movlb	1	; select bank1
  3831  069F  00C1               	movwf	((_BMP180+1)^(0+128)+32)
  3832  06A0                     l2796:
  3833                           
  3834                           ;BMP_180.c: 46:     return BMP180.CALIBRATION_DATA;
  3835  06A0  3008               	movlw	8
  3836  06A1  3EA0               	addlw	(low (_BMP180| 0))& (0+255)
  3837  06A2  0086               	movwf	6
  3838  06A3  0187               	clrf	7
  3839  06A4  302E               	movlw	low ?_get_calibration_data_BMP180
  3840  06A5  0084               	movwf	4
  3841  06A6  3000               	movlw	high ?_get_calibration_data_BMP180
  3842  06A7  0085               	movwf	5
  3843  06A8  301A               	movlw	26
  3844  06A9  0020               	movlb	0	; select bank0
  3845  06AA  00C8               	movwf	??_get_calibration_data_BMP180
  3846  06AB                     u1480:
  3847  06AB  0016               	moviw fsr1++
  3848  06AC  001A               	movwi fsr0++
  3849  06AD  0BC8               	decfsz	??_get_calibration_data_BMP180,f
  3850  06AE  2EAB               	goto	u1480
  3851  06AF                     l594:
  3852  06AF  0008               	return
  3853  06B0                     __end_of_get_calibration_data_BMP180:
  3854                           
  3855                           	psect	text8
  3856  02ED                     __ptext8:	
  3857 ;; *************** function _I2C_ReadDataBlock *****************
  3858 ;; Defined at:
  3859 ;;		line 128 in file "mcc_generated_files/examples/i2c_master_example.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  address         1    wreg     unsigned char 
  3862 ;;  reg             1    5[BANK0 ] unsigned char 
  3863 ;;  data            1    6[BANK0 ] PTR unsigned char 
  3864 ;;		 -> get_calibration_data_BMP180@buffer_I2C(22), 
  3865 ;;  len             2    7[BANK0 ] unsigned int 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  address         1   10[BANK0 ] unsigned char 
  3868 ;;  bufferBlock     3   11[BANK0 ] struct .
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3878 ;;      Params:         0       4       0       0       0       0       0
  3879 ;;      Locals:         0       4       0       0       0       0       0
  3880 ;;      Temps:          0       1       0       0       0       0       0
  3881 ;;      Totals:         0       9       0       0       0       0       0
  3882 ;;Total ram usage:        9 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 8
  3885 ;; This function calls:
  3886 ;;		_I2C_Close
  3887 ;;		_I2C_MasterWrite
  3888 ;;		_I2C_Open
  3889 ;;		_I2C_SetAddressNackCallback
  3890 ;;		_I2C_SetBuffer
  3891 ;;		_I2C_SetDataCompleteCallback
  3892 ;; This function is called by:
  3893 ;;		_get_calibration_data_BMP180
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897  02ED                     _I2C_ReadDataBlock:	
  3898                           ;psect for function _I2C_ReadDataBlock
  3899                           
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _I2C_ReadDataBlock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3903                           ;I2C_ReadDataBlock@address stored from wreg
  3904  02ED  0020               	movlb	0	; select bank0
  3905  02EE  00AA               	movwf	I2C_ReadDataBlock@address
  3906  02EF                     l2656:
  3907                           
  3908                           ;mcc_generated_files/examples/i2c_master_example.c: 128: void I2C_ReadDataBlock(i2c_addr
      +                          ess_t address, uint8_t reg, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_
      +                          master_example.c: 129: {;mcc_generated_files/examples/i2c_master_example.c: 130:     i2c
      +                          _buffer_t bufferBlock;;mcc_generated_files/examples/i2c_master_example.c: 131:     buffe
      +                          rBlock.data = data;
  3909  02EF  0826               	movf	I2C_ReadDataBlock@data,w
  3910  02F0  00A9               	movwf	??_I2C_ReadDataBlock
  3911  02F1  0829               	movf	??_I2C_ReadDataBlock,w
  3912  02F2  00AD               	movwf	low ((I2C_ReadDataBlock@bufferBlock| 0+2))
  3913                           
  3914                           ;mcc_generated_files/examples/i2c_master_example.c: 132:     bufferBlock.len = len;
  3915  02F3  0828               	movf	I2C_ReadDataBlock@len+1,w
  3916  02F4  00AC               	movwf	I2C_ReadDataBlock@bufferBlock+1
  3917  02F5  0827               	movf	I2C_ReadDataBlock@len,w
  3918  02F6  00AB               	movwf	I2C_ReadDataBlock@bufferBlock
  3919  02F7                     l2658:	
  3920                           ;mcc_generated_files/examples/i2c_master_example.c: 134:     while(!I2C_Open(address));
  3921                           
  3922  02F7  0020               	movlb	0	; select bank0
  3923  02F8  082A               	movf	I2C_ReadDataBlock@address,w
  3924  02F9  3182  22B3  3182   	fcall	_I2C_Open
  3925  02FC  3A00               	xorlw	0
  3926  02FD  1903               	skipnz
  3927  02FE  2B00               	goto	u1181
  3928  02FF  2B01               	goto	u1180
  3929  0300                     u1181:
  3930  0300  2AF7               	goto	l2658
  3931  0301                     u1180:
  3932  0301                     l2660:
  3933                           
  3934                           ;mcc_generated_files/examples/i2c_master_example.c: 135:     I2C_SetDataCompleteCallback
      +                          (rdBlkRegCompleteHandler,&bufferBlock);
  3935  0301  3025               	movlw	low _rdBlkRegCompleteHandler
  3936  0302  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  3937  0303  3001               	movlw	high _rdBlkRegCompleteHandler
  3938  0304  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  3939  0305  302B               	movlw	(low (I2C_ReadDataBlock@bufferBlock| 0))& (0+255)
  3940  0306  0020               	movlb	0	; select bank0
  3941  0307  00A9               	movwf	??_I2C_ReadDataBlock
  3942  0308  0829               	movf	??_I2C_ReadDataBlock,w
  3943  0309  00F7               	movwf	I2C_SetDataCompleteCallback@ptr
  3944  030A  3180  209D  3182   	fcall	_I2C_SetDataCompleteCallback
  3945  030D                     l2662:
  3946                           
  3947                           ;mcc_generated_files/examples/i2c_master_example.c: 136:     I2C_SetBuffer(&reg,1);
  3948  030D  3001               	movlw	1
  3949  030E  00F0               	movwf	I2C_SetBuffer@bufferSize
  3950  030F  3000               	movlw	0
  3951  0310  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  3952  0311  3025               	movlw	(low (I2C_ReadDataBlock@reg| 0))& (0+255)
  3953  0312  3180  20D1  3182   	fcall	_I2C_SetBuffer
  3954  0315                     l2664:
  3955                           
  3956                           ;mcc_generated_files/examples/i2c_master_example.c: 137:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  3957  0315  3000               	movlw	0
  3958  0316  00F5               	movwf	I2C_SetAddressNackCallback@cb
  3959  0317  00F6               	movwf	I2C_SetAddressNackCallback@cb+1
  3960  0318  01F7               	clrf	I2C_SetAddressNackCallback@ptr
  3961  0319  3180  20C4  3182   	fcall	_I2C_SetAddressNackCallback
  3962  031C                     l2666:
  3963                           
  3964                           ;mcc_generated_files/examples/i2c_master_example.c: 138:     I2C_MasterWrite();
  3965  031C  3180  204C  3182   	fcall	_I2C_MasterWrite
  3966  031F                     l2668:	
  3967                           ;mcc_generated_files/examples/i2c_master_example.c: 139:     while(I2C_BUSY == I2C_Close
      +                          ());
  3968                           
  3969  031F  3181  213D  3182   	fcall	_I2C_Close
  3970  0322  3A01               	xorlw	1
  3971  0323  1903               	skipnz
  3972  0324  2B26               	goto	u1191
  3973  0325  2B27               	goto	u1190
  3974  0326                     u1191:
  3975  0326  2B1F               	goto	l2668
  3976  0327                     u1190:
  3977  0327                     l225:
  3978  0327  0008               	return
  3979  0328                     __end_of_I2C_ReadDataBlock:
  3980                           
  3981                           	psect	text9
  3982  00C4                     __ptext9:	
  3983 ;; *************** function _I2C_SetAddressNackCallback *****************
  3984 ;; Defined at:
  3985 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  3988 ;;		 -> Absolute function(1), 
  3989 ;;  ptr             1    7[COMMON] PTR void 
  3990 ;;		 -> NULL(0), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4002 ;;      Params:         3       0       0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0
  4004 ;;      Temps:          1       0       0       0       0       0       0
  4005 ;;      Totals:         4       0       0       0       0       0       0
  4006 ;;Total ram usage:        4 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 1
  4009 ;; This function calls:
  4010 ;;		_I2C_SetCallback
  4011 ;; This function is called by:
  4012 ;;		_I2C_Read2ByteRegister
  4013 ;;		_I2C_Write1ByteRegister
  4014 ;;		_I2C_ReadDataBlock
  4015 ;;		_I2C_Read1ByteRegister
  4016 ;;		_I2C_Write2ByteRegister
  4017 ;;		_I2C_WriteNBytes
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021  00C4                     _I2C_SetAddressNackCallback:	
  4022                           ;psect for function _I2C_SetAddressNackCallback
  4023                           
  4024  00C4                     l2556:	
  4025                           ;incstack = 0
  4026                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4027                           
  4028                           
  4029                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4030  00C4  0876               	movf	I2C_SetAddressNackCallback@cb+1,w
  4031  00C5  00F1               	movwf	I2C_SetCallback@cb+1
  4032  00C6  0875               	movf	I2C_SetAddressNackCallback@cb,w
  4033  00C7  00F0               	movwf	I2C_SetCallback@cb
  4034  00C8  0877               	movf	I2C_SetAddressNackCallback@ptr,w
  4035  00C9  00F8               	movwf	??_I2C_SetAddressNackCallback
  4036  00CA  0878               	movf	??_I2C_SetAddressNackCallback,w
  4037  00CB  00F2               	movwf	I2C_SetCallback@ptr
  4038  00CC  3002               	movlw	2
  4039  00CD  3181  219E  3180   	fcall	_I2C_SetCallback
  4040  00D0                     l383:
  4041  00D0  0008               	return
  4042  00D1                     __end_of_I2C_SetAddressNackCallback:
  4043                           
  4044                           	psect	text10
  4045  02B3                     __ptext10:	
  4046 ;; *************** function _I2C_Open *****************
  4047 ;; Defined at:
  4048 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  address         1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  address         1    1[COMMON] unsigned char 
  4053 ;;  returnValue     1    2[COMMON] enum E355
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      enum E355
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4063 ;;      Params:         0       0       0       0       0       0       0
  4064 ;;      Locals:         2       0       0       0       0       0       0
  4065 ;;      Temps:          1       0       0       0       0       0       0
  4066 ;;      Totals:         3       0       0       0       0       0       0
  4067 ;;Total ram usage:        3 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 1
  4070 ;; This function calls:
  4071 ;;		_I2C_MasterClearIrq
  4072 ;;		_I2C_MasterOpen
  4073 ;; This function is called by:
  4074 ;;		_I2C_Read2ByteRegister
  4075 ;;		_I2C_Write1ByteRegister
  4076 ;;		_I2C_ReadDataBlock
  4077 ;;		_I2C_Read1ByteRegister
  4078 ;;		_I2C_Write2ByteRegister
  4079 ;;		_I2C_WriteNBytes
  4080 ;;		_I2C_ReadNBytes
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084  02B3                     _I2C_Open:	
  4085                           ;psect for function _I2C_Open
  4086                           
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  4090                           ;I2C_Open@address stored from wreg
  4091  02B3  00F1               	movwf	I2C_Open@address
  4092  02B4                     l2524:
  4093                           
  4094                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4095  02B4  01F2               	clrf	I2C_Open@returnValue
  4096  02B5  0AF2               	incf	I2C_Open@returnValue,f
  4097                           
  4098                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4099  02B6  0021               	movlb	1	; select bank1
  4100  02B7  195E               	btfsc	(_I2C_Status^(0+128)+28),2
  4101  02B8  2ABA               	goto	u1111
  4102  02B9  2ABB               	goto	u1110
  4103  02BA                     u1111:
  4104  02BA  2AEB               	goto	l350
  4105  02BB                     u1110:
  4106  02BB                     l2526:
  4107                           
  4108                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4109  02BB  0871               	movf	I2C_Open@address,w
  4110  02BC  00F0               	movwf	??_I2C_Open
  4111  02BD  0870               	movf	??_I2C_Open,w
  4112  02BE  00D8               	movwf	(_I2C_Status^(0+128)+22)
  4113  02BF                     l2528:
  4114                           
  4115                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4116  02BF  10DE               	bcf	(_I2C_Status^(0+128)+28),1
  4117  02C0                     l2530:
  4118                           
  4119                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4120  02C0  155E               	bsf	(_I2C_Status^(0+128)+28),2
  4121  02C1                     l2532:
  4122                           
  4123                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4124  02C1  105E               	bcf	(_I2C_Status^(0+128)+28),0
  4125                           
  4126                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4127  02C2  300E               	movlw	14
  4128  02C3  00F0               	movwf	??_I2C_Open
  4129  02C4  0870               	movf	??_I2C_Open,w
  4130  02C5  00DC               	movwf	(_I2C_Status^(0+128)+26)
  4131                           
  4132                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4133  02C6  30F4               	movlw	244
  4134  02C7  00D6               	movwf	(_I2C_Status^(0+128)+20)
  4135  02C8  3001               	movlw	1
  4136  02C9  00D7               	movwf	(_I2C_Status^(0+128)+21)
  4137  02CA                     l2534:
  4138                           
  4139                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4140  02CA  15DE               	bsf	(_I2C_Status^(0+128)+28),3
  4141                           
  4142                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4143  02CB  30EA               	movlw	low _I2C_CallbackReturnStop
  4144  02CC  00C2               	movwf	_I2C_Status^(0+128)
  4145  02CD  300F               	movlw	high _I2C_CallbackReturnStop
  4146  02CE  00C3               	movwf	(_I2C_Status^(0+128)+1)
  4147  02CF                     l2536:
  4148                           
  4149                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  4150  02CF  01CE               	clrf	(low ((_I2C_Status| 0+12)))^(0+128)
  4151  02D0                     l2538:
  4152                           
  4153                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  4154  02D0  30EA               	movlw	low _I2C_CallbackReturnStop
  4155  02D1  00C4               	movwf	(low ((_I2C_Status| 0+2)))^(0+128)
  4156  02D2  300F               	movlw	high _I2C_CallbackReturnStop
  4157  02D3  00C5               	movwf	((low ((_I2C_Status| 0+2)))^(0+128)+1)
  4158                           
  4159                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  4160  02D4  01CF               	clrf	(low ((_I2C_Status| 0+13)))^(0+128)
  4161  02D5                     l2540:
  4162                           
  4163                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  4164  02D5  30EA               	movlw	low _I2C_CallbackReturnStop
  4165  02D6  00C6               	movwf	(low ((_I2C_Status| 0+4)))^(0+128)
  4166  02D7  300F               	movlw	high _I2C_CallbackReturnStop
  4167  02D8  00C7               	movwf	((low ((_I2C_Status| 0+4)))^(0+128)+1)
  4168  02D9                     l2542:
  4169                           
  4170                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  4171  02D9  01D0               	clrf	(low ((_I2C_Status| 0+14)))^(0+128)
  4172                           
  4173                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  4174  02DA  30EA               	movlw	low _I2C_CallbackReturnStop
  4175  02DB  00C8               	movwf	(low ((_I2C_Status| 0+6)))^(0+128)
  4176  02DC  300F               	movlw	high _I2C_CallbackReturnStop
  4177  02DD  00C9               	movwf	((low ((_I2C_Status| 0+6)))^(0+128)+1)
  4178  02DE                     l2544:
  4179                           
  4180                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  4181  02DE  01D1               	clrf	(low ((_I2C_Status| 0+15)))^(0+128)
  4182  02DF                     l2546:
  4183                           
  4184                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  4185  02DF  30EC               	movlw	low _I2C_CallbackReturnReset
  4186  02E0  00CA               	movwf	(low ((_I2C_Status| 0+8)))^(0+128)
  4187  02E1  300F               	movlw	high _I2C_CallbackReturnReset
  4188  02E2  00CB               	movwf	((low ((_I2C_Status| 0+8)))^(0+128)+1)
  4189                           
  4190                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  4191  02E3  01D2               	clrf	(low ((_I2C_Status| 0+16)))^(0+128)
  4192  02E4                     l2548:
  4193                           
  4194                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  4195  02E4  318F  27EE  3182   	fcall	_I2C_MasterClearIrq
  4196  02E7                     l2550:
  4197                           
  4198                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  4199  02E7  3180  20B7  3182   	fcall	_I2C_MasterOpen
  4200  02EA                     l2552:
  4201                           
  4202                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  4203  02EA  01F2               	clrf	I2C_Open@returnValue
  4204  02EB                     l350:	
  4205                           ;mcc_generated_files/i2c_master.c: 205:     }
  4206                           
  4207                           
  4208                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  4209  02EB  0872               	movf	I2C_Open@returnValue,w
  4210  02EC                     l351:
  4211  02EC  0008               	return
  4212  02ED                     __end_of_I2C_Open:
  4213                           
  4214                           	psect	text11
  4215  00B7                     __ptext11:	
  4216 ;; *************** function _I2C_MasterOpen *****************
  4217 ;; Defined at:
  4218 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      _Bool 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4232 ;;      Params:         0       0       0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_I2C_Open
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245  00B7                     _I2C_MasterOpen:	
  4246                           ;psect for function _I2C_MasterOpen
  4247                           
  4248  00B7                     l2488:	
  4249                           ;incstack = 0
  4250                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  4251                           
  4252                           
  4253                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  4254  00B7  0024               	movlb	4	; select bank4
  4255  00B8  1A95               	btfsc	21,5	;volatile
  4256  00B9  28BB               	goto	u1081
  4257  00BA  28BC               	goto	u1080
  4258  00BB                     u1081:
  4259  00BB  28C3               	goto	l516
  4260  00BC                     u1080:
  4261  00BC                     l2490:
  4262                           
  4263                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  4264  00BC  0194               	clrf	20	;volatile
  4265  00BD                     l2492:
  4266                           
  4267                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  4268  00BD  3008               	movlw	8
  4269  00BE  0095               	movwf	21	;volatile
  4270  00BF                     l2494:
  4271                           
  4272                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  4273  00BF  0196               	clrf	22	;volatile
  4274                           
  4275                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  4276  00C0  3013               	movlw	19
  4277  00C1  0092               	movwf	18	;volatile
  4278  00C2                     l2496:
  4279                           
  4280                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  4281  00C2  1695               	bsf	21,5	;volatile
  4282  00C3                     l516:
  4283  00C3  0008               	return
  4284  00C4                     __end_of_I2C_MasterOpen:
  4285                           
  4286                           	psect	text12
  4287  004C                     __ptext12:	
  4288 ;; *************** function _I2C_MasterWrite *****************
  4289 ;; Defined at:
  4290 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      enum E355
  4297 ;; Registers used:
  4298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4304 ;;      Params:         0       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0
  4307 ;;      Totals:         0       0       0       0       0       0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 7
  4311 ;; This function calls:
  4312 ;;		_I2C_MasterOperation
  4313 ;; This function is called by:
  4314 ;;		_I2C_Read2ByteRegister
  4315 ;;		_I2C_Write1ByteRegister
  4316 ;;		_I2C_ReadDataBlock
  4317 ;;		_I2C_Read1ByteRegister
  4318 ;;		_I2C_Write2ByteRegister
  4319 ;;		_I2C_WriteNBytes
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323  004C                     _I2C_MasterWrite:	
  4324                           ;psect for function _I2C_MasterWrite
  4325                           
  4326  004C                     l2558:	
  4327                           ;incstack = 0
  4328                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4329                           
  4330                           
  4331                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4332  004C  3000               	movlw	0
  4333  004D  3181  217B  3180   	fcall	_I2C_MasterOperation
  4334  0050                     l367:
  4335  0050  0008               	return
  4336  0051                     __end_of_I2C_MasterWrite:
  4337                           
  4338                           	psect	text13
  4339  017B                     __ptext13:	
  4340 ;; *************** function _I2C_MasterOperation *****************
  4341 ;; Defined at:
  4342 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  read            1    wreg     _Bool 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  read            1    3[BANK0 ] _Bool 
  4347 ;;  returnValue     1    4[BANK0 ] enum E355
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      enum E355
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4357 ;;      Params:         0       0       0       0       0       0       0
  4358 ;;      Locals:         0       2       0       0       0       0       0
  4359 ;;      Temps:          1       0       0       0       0       0       0
  4360 ;;      Totals:         1       2       0       0       0       0       0
  4361 ;;Total ram usage:        3 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 6
  4364 ;; This function calls:
  4365 ;;		_I2C_MasterStart
  4366 ;;		_I2C_Poller
  4367 ;; This function is called by:
  4368 ;;		_I2C_MasterWrite
  4369 ;;		_I2C_MasterRead
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373  017B                     _I2C_MasterOperation:	
  4374                           ;psect for function _I2C_MasterOperation
  4375                           
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4379                           ;I2C_MasterOperation@read stored from wreg
  4380  017B  0020               	movlb	0	; select bank0
  4381  017C  00A3               	movwf	I2C_MasterOperation@read
  4382  017D                     l2504:
  4383                           
  4384                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4385  017D  01A4               	clrf	I2C_MasterOperation@returnValue
  4386  017E  0AA4               	incf	I2C_MasterOperation@returnValue,f
  4387                           
  4388                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  4389  017F  0021               	movlb	1	; select bank1
  4390  0180  18DE               	btfsc	(_I2C_Status^(0+128)+28),1
  4391  0181  2983               	goto	u1091
  4392  0182  2984               	goto	u1090
  4393  0183                     u1091:
  4394  0183  299B               	goto	l2520
  4395  0184                     u1090:
  4396  0184                     l2506:
  4397                           
  4398                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  4399  0184  14DE               	bsf	(_I2C_Status^(0+128)+28),1
  4400  0185                     l2508:
  4401                           
  4402                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  4403  0185  0020               	movlb	0	; select bank0
  4404  0186  01A4               	clrf	I2C_MasterOperation@returnValue
  4405  0187                     l2510:
  4406                           
  4407                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  4408  0187  0823               	movf	I2C_MasterOperation@read,w
  4409  0188  1903               	btfsc	3,2
  4410  0189  298B               	goto	u1101
  4411  018A  298C               	goto	u1100
  4412  018B                     u1101:
  4413  018B  2990               	goto	l2514
  4414  018C                     u1100:
  4415  018C                     l2512:
  4416                           
  4417                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4418  018C  0021               	movlb	1	; select bank1
  4419  018D  01DC               	clrf	(_I2C_Status^(0+128)+26)
  4420  018E  0ADC               	incf	(_I2C_Status^(0+128)+26),f
  4421                           
  4422                           ;mcc_generated_files/i2c_master.c: 235:         }
  4423  018F  2995               	goto	l2516
  4424  0190                     l2514:
  4425                           
  4426                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4427  0190  3002               	movlw	2
  4428  0191  00FD               	movwf	??_I2C_MasterOperation
  4429  0192  087D               	movf	??_I2C_MasterOperation,w
  4430  0193  0021               	movlb	1	; select bank1
  4431  0194  00DC               	movwf	(_I2C_Status^(0+128)+26)
  4432  0195                     l2516:
  4433                           
  4434                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  4435  0195  318F  27F7  3181   	fcall	_I2C_MasterStart
  4436  0198                     l2518:
  4437                           
  4438                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  4439  0198  3180  20AA  3181   	fcall	_I2C_Poller
  4440  019B                     l2520:
  4441                           
  4442                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  4443  019B  0020               	movlb	0	; select bank0
  4444  019C  0824               	movf	I2C_MasterOperation@returnValue,w
  4445  019D                     l361:
  4446  019D  0008               	return
  4447  019E                     __end_of_I2C_MasterOperation:
  4448                           
  4449                           	psect	text14
  4450  00AA                     __ptext14:	
  4451 ;; *************** function _I2C_Poller *****************
  4452 ;; Defined at:
  4453 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4467 ;;      Params:         0       0       0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0
  4470 ;;      Totals:         0       0       0       0       0       0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 5
  4474 ;; This function calls:
  4475 ;;		_I2C_MasterFsm
  4476 ;;		_I2C_MasterWaitForEvent
  4477 ;; This function is called by:
  4478 ;;		_I2C_MasterOperation
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482  00AA                     _I2C_Poller:	
  4483                           ;psect for function _I2C_Poller
  4484                           
  4485  00AA                     l2480:	
  4486                           ;incstack = 0
  4487                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4488                           
  4489                           
  4490                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4491  00AA  28B1               	goto	l2486
  4492  00AB                     l2482:
  4493                           
  4494                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4495  00AB  3180  2057  3180   	fcall	_I2C_MasterWaitForEvent
  4496  00AE                     l2484:
  4497                           
  4498                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4499  00AE  3181  21F0  3180   	fcall	_I2C_MasterFsm
  4500  00B1                     l2486:
  4501                           
  4502                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4503  00B1  0021               	movlb	1	; select bank1
  4504  00B2  18DE               	btfsc	(_I2C_Status^(0+128)+28),1
  4505  00B3  28B5               	goto	u1071
  4506  00B4  28B6               	goto	u1070
  4507  00B5                     u1071:
  4508  00B5  28AB               	goto	l2482
  4509  00B6                     u1070:
  4510  00B6                     l400:
  4511  00B6  0008               	return
  4512  00B7                     __end_of_I2C_Poller:
  4513                           
  4514                           	psect	text15
  4515  0057                     __ptext15:	
  4516 ;; *************** function _I2C_MasterWaitForEvent *****************
  4517 ;; Defined at:
  4518 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		None
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4532 ;;      Params:         0       0       0       0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0
  4535 ;;      Totals:         0       0       0       0       0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_I2C_Poller
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545  0057                     _I2C_MasterWaitForEvent:	
  4546                           ;psect for function _I2C_MasterWaitForEvent
  4547                           
  4548  0057                     l573:	
  4549                           ;incstack = 0
  4550                           ; Regs used in _I2C_MasterWaitForEvent: []
  4551                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
  4552                           
  4553                           
  4554                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4555  0057  0020               	movlb	0	; select bank0
  4556  0058  1D91               	btfss	17,3	;volatile
  4557  0059  285B               	goto	u1041
  4558  005A  285C               	goto	u1040
  4559  005B                     u1041:
  4560  005B  2857               	goto	l573
  4561  005C                     u1040:
  4562  005C                     l577:
  4563  005C  0008               	return
  4564  005D                     __end_of_I2C_MasterWaitForEvent:
  4565                           
  4566                           	psect	text16
  4567  01F0                     __ptext16:	
  4568 ;; *************** function _I2C_MasterFsm *****************
  4569 ;; Defined at:
  4570 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4584 ;;      Params:         0       0       0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0
  4586 ;;      Temps:          0       3       0       0       0       0       0
  4587 ;;      Totals:         0       3       0       0       0       0       0
  4588 ;;Total ram usage:        3 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 4
  4591 ;; This function calls:
  4592 ;;		_I2C_DO_ADDRESS_NACK
  4593 ;;		_I2C_DO_IDLE
  4594 ;;		_I2C_DO_RCEN
  4595 ;;		_I2C_DO_RESET
  4596 ;;		_I2C_DO_RX
  4597 ;;		_I2C_DO_RX_ACK
  4598 ;;		_I2C_DO_RX_NACK_RESTART
  4599 ;;		_I2C_DO_RX_NACK_STOP
  4600 ;;		_I2C_DO_SEND_ADR_READ
  4601 ;;		_I2C_DO_SEND_ADR_WRITE
  4602 ;;		_I2C_DO_SEND_RESTART
  4603 ;;		_I2C_DO_SEND_RESTART_READ
  4604 ;;		_I2C_DO_SEND_RESTART_WRITE
  4605 ;;		_I2C_DO_SEND_STOP
  4606 ;;		_I2C_DO_TX
  4607 ;;		_I2C_DO_TX_EMPTY
  4608 ;;		_I2C_MasterClearIrq
  4609 ;;		_I2C_MasterIsNack
  4610 ;; This function is called by:
  4611 ;;		_I2C_Poller
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615  01F0                     _I2C_MasterFsm:	
  4616                           ;psect for function _I2C_MasterFsm
  4617                           
  4618  01F0                     l2468:	
  4619                           ;incstack = 0
  4620                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4621                           
  4622                           
  4623                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4624  01F0  318F  27EE  3181   	fcall	_I2C_MasterClearIrq
  4625  01F3                     l2470:
  4626                           
  4627                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4628  01F3  0021               	movlb	1	; select bank1
  4629  01F4  1C5E               	btfss	(_I2C_Status^(0+128)+28),0
  4630  01F5  29F7               	goto	u1051
  4631  01F6  29F8               	goto	u1050
  4632  01F7                     u1051:
  4633  01F7  2A06               	goto	l2476
  4634  01F8                     u1050:
  4635  01F8                     l2472:
  4636  01F8  3180  2051  3181   	fcall	_I2C_MasterIsNack
  4637  01FB  3A00               	xorlw	0
  4638  01FC  1903               	skipnz
  4639  01FD  29FF               	goto	u1061
  4640  01FE  2A00               	goto	u1060
  4641  01FF                     u1061:
  4642  01FF  2A06               	goto	l2476
  4643  0200                     u1060:
  4644  0200                     l2474:
  4645                           
  4646                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4647  0200  300F               	movlw	15
  4648  0201  0020               	movlb	0	; select bank0
  4649  0202  00A0               	movwf	??_I2C_MasterFsm
  4650  0203  0820               	movf	??_I2C_MasterFsm,w
  4651  0204  0021               	movlb	1	; select bank1
  4652  0205  00DC               	movwf	(_I2C_Status^(0+128)+26)
  4653  0206                     l2476:
  4654                           
  4655                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4656  0206  0021               	movlb	1	; select bank1
  4657  0207  085C               	movf	(_I2C_Status^(0+128)+26),w
  4658  0208  0020               	movlb	0	; select bank0
  4659  0209  00A0               	movwf	??_I2C_MasterFsm
  4660  020A  01A1               	clrf	??_I2C_MasterFsm+1
  4661  020B  35A0               	lslf	??_I2C_MasterFsm,f
  4662  020C  0DA1               	rlf	??_I2C_MasterFsm+1,f
  4663  020D  3000               	movlw	low (_i2c_fsmStateTable| (0+32768))
  4664  020E  0720               	addwf	??_I2C_MasterFsm,w
  4665  020F  0084               	movwf	4
  4666  0210  3088               	movlw	high (_i2c_fsmStateTable| (0+32768))
  4667  0211  3D21               	addwfc	??_I2C_MasterFsm+1,w
  4668  0212  0085               	movwf	5
  4669  0213  3F01               	moviw [1]fsr0
  4670  0214  008A               	movwf	10
  4671  0215  3F00               	moviw [0]fsr0
  4672  0216  000A               	callw
  4673  0217  3181               	pagesel	$
  4674  0218  0020               	movlb	0	; select bank0
  4675  0219  00A2               	movwf	??_I2C_MasterFsm+2
  4676  021A  0822               	movf	??_I2C_MasterFsm+2,w
  4677  021B  0021               	movlb	1	; select bank1
  4678  021C  00DC               	movwf	(_I2C_Status^(0+128)+26)
  4679  021D                     l404:
  4680  021D  0008               	return
  4681  021E                     __end_of_I2C_MasterFsm:
  4682                           
  4683                           	psect	text17
  4684  01C4                     __ptext17:	
  4685 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4686 ;; Defined at:
  4687 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      enum E3352
  4694 ;; Registers used:
  4695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4701 ;;      Params:         0       0       0       0       0       0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0
  4703 ;;      Temps:          3       0       0       0       0       0       0
  4704 ;;      Totals:         3       0       0       0       0       0       0
  4705 ;;Total ram usage:        3 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; Hardware stack levels required when called: 3
  4708 ;; This function calls:
  4709 ;;		Absolute function
  4710 ;;		_I2C_CallbackReturnReset
  4711 ;;		_I2C_CallbackReturnStop
  4712 ;;		_I2C_DO_SEND_RESTART
  4713 ;;		_I2C_DO_SEND_STOP
  4714 ;;		_rd1RegCompleteHandler
  4715 ;;		_rd2RegCompleteHandler
  4716 ;;		_rdBlkRegCompleteHandler
  4717 ;;		_wr1RegCompleteHandler
  4718 ;;		_wr2RegCompleteHandler
  4719 ;; This function is called by:
  4720 ;;		_I2C_MasterFsm
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724  01C4                     _I2C_DO_ADDRESS_NACK:	
  4725                           ;psect for function _I2C_DO_ADDRESS_NACK
  4726                           
  4727  01C4                     l2444:	
  4728                           ;incstack = 0
  4729                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4730                           
  4731                           
  4732                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  4733  01C4  0021               	movlb	1	; select bank1
  4734  01C5  105E               	bcf	(_I2C_Status^(0+128)+28),0
  4735  01C6                     l2446:
  4736                           
  4737                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  4738  01C6  3002               	movlw	2
  4739  01C7  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  4740  01C8  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  4741  01C9  00DD               	movwf	(_I2C_Status^(0+128)+27)
  4742                           
  4743                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4744  01CA  29D3               	goto	l2458
  4745  01CB                     l2448:
  4746                           
  4747                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  4748  01CB  3180  202E  3181   	fcall	_I2C_DO_SEND_RESTART
  4749  01CE  29EF               	goto	l495
  4750  01CF                     l2452:
  4751                           
  4752                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  4753  01CF  3180  2033  3181   	fcall	_I2C_DO_SEND_STOP
  4754  01D2  29EF               	goto	l495
  4755  01D3                     l2458:
  4756  01D3  0850               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
  4757  01D4  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  4758  01D5  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  4759  01D6  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  4760  01D7  3004               	movlw	4
  4761  01D8  3EC2               	addlw	(low (_I2C_Status| 0))& (0+255)
  4762  01D9  0086               	movwf	6
  4763  01DA  0187               	clrf	7
  4764  01DB  3F41               	moviw [1]fsr1
  4765  01DC  008A               	movwf	10
  4766  01DD  3F40               	moviw [0]fsr1
  4767  01DE  000A               	callw
  4768  01DF  3181               	pagesel	$
  4769  01E0  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  4770  01E1  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  4771                           
  4772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4773                           ; Switch size 1, requested type "simple"
  4774                           ; Number of cases is 1, Range of values is 0 to 0
  4775                           ; switch strategies available:
  4776                           ; Name         Instructions Cycles
  4777                           ; simple_byte            4     3 (average)
  4778                           ; direct_byte            8     6 (fixed)
  4779                           ; jumptable            260     6 (fixed)
  4780                           ;	Chosen strategy is simple_byte
  4781  01E2  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  4782  01E3  3A00               	xorlw	0	; case 0
  4783  01E4  1903               	skipnz
  4784  01E5  29E7               	goto	l3158
  4785  01E6  29CF               	goto	l2452
  4786  01E7                     l3158:
  4787                           
  4788                           ; Switch size 1, requested type "simple"
  4789                           ; Number of cases is 2, Range of values is 2 to 3
  4790                           ; switch strategies available:
  4791                           ; Name         Instructions Cycles
  4792                           ; simple_byte            7     4 (average)
  4793                           ; direct_byte           13     9 (fixed)
  4794                           ; jumptable            263     9 (fixed)
  4795                           ;	Chosen strategy is simple_byte
  4796  01E7  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  4797  01E8  3A02               	xorlw	2	; case 2
  4798  01E9  1903               	skipnz
  4799  01EA  29CB               	goto	l2448
  4800  01EB  3A01               	xorlw	1	; case 3
  4801  01EC  1903               	skipnz
  4802  01ED  29CB               	goto	l2448
  4803  01EE  29CF               	goto	l2452
  4804  01EF                     l495:
  4805  01EF  0008               	return
  4806  01F0                     __end_of_I2C_DO_ADDRESS_NACK:
  4807                           
  4808                           	psect	text18
  4809  0047                     __ptext18:	
  4810 ;; *************** function _I2C_DO_RESET *****************
  4811 ;; Defined at:
  4812 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      enum E3352
  4819 ;; Registers used:
  4820 ;;		wreg, status,2
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4826 ;;      Params:         0       0       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_I2C_MasterFsm
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839  0047                     _I2C_DO_RESET:	
  4840                           ;psect for function _I2C_DO_RESET
  4841                           
  4842  0047                     l2436:	
  4843                           ;incstack = 0
  4844                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  4845                           
  4846                           
  4847                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  4848  0047  0021               	movlb	1	; select bank1
  4849  0048  10DE               	bcf	(_I2C_Status^(0+128)+28),1
  4850  0049                     l2438:
  4851                           
  4852                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  4853  0049  01DD               	clrf	(_I2C_Status^(0+128)+27)
  4854  004A                     l2440:
  4855                           
  4856                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  4857  004A  300E               	movlw	14
  4858  004B                     l489:
  4859  004B  0008               	return
  4860  004C                     __end_of_I2C_DO_RESET:
  4861                           
  4862                           	psect	text19
  4863  0042                     __ptext19:	
  4864 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4865 ;; Defined at:
  4866 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      enum E3352
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4880 ;;      Params:         0       0       0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 1
  4887 ;; This function calls:
  4888 ;;		_I2C_MasterSendNack
  4889 ;; This function is called by:
  4890 ;;		_I2C_DO_RX
  4891 ;;		_I2C_MasterFsm
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895  0042                     _I2C_DO_RX_NACK_RESTART:	
  4896                           ;psect for function _I2C_DO_RX_NACK_RESTART
  4897                           
  4898  0042                     l2274:	
  4899                           ;incstack = 0
  4900                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4901                           
  4902                           
  4903                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  4904  0042  3180  2012  3180   	fcall	_I2C_MasterSendNack
  4905  0045                     l2276:
  4906                           
  4907                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  4908  0045  3009               	movlw	9
  4909  0046                     l486:
  4910  0046  0008               	return
  4911  0047                     __end_of_I2C_DO_RX_NACK_RESTART:
  4912                           
  4913                           	psect	text20
  4914  003D                     __ptext20:	
  4915 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4916 ;; Defined at:
  4917 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      enum E3352
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0, pclath, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4931 ;;      Params:         0       0       0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 1
  4938 ;; This function calls:
  4939 ;;		_I2C_MasterSendNack
  4940 ;; This function is called by:
  4941 ;;		_I2C_DO_RX
  4942 ;;		_I2C_MasterFsm
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946  003D                     _I2C_DO_RX_NACK_STOP:	
  4947                           ;psect for function _I2C_DO_RX_NACK_STOP
  4948                           
  4949  003D                     l2280:	
  4950                           ;incstack = 0
  4951                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  4952                           
  4953                           
  4954                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  4955  003D  3180  2012  3180   	fcall	_I2C_MasterSendNack
  4956  0040                     l2282:
  4957                           
  4958                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  4959  0040  300A               	movlw	10
  4960  0041                     l483:
  4961  0041  0008               	return
  4962  0042                     __end_of_I2C_DO_RX_NACK_STOP:
  4963                           
  4964                           	psect	text21
  4965  0038                     __ptext21:	
  4966 ;; *************** function _I2C_DO_RX_ACK *****************
  4967 ;; Defined at:
  4968 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      enum E3352
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, pclath, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4982 ;;      Params:         0       0       0       0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0
  4985 ;;      Totals:         0       0       0       0       0       0       0
  4986 ;;Total ram usage:        0 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 1
  4989 ;; This function calls:
  4990 ;;		_I2C_MasterSendAck
  4991 ;; This function is called by:
  4992 ;;		_I2C_MasterFsm
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996  0038                     _I2C_DO_RX_ACK:	
  4997                           ;psect for function _I2C_DO_RX_ACK
  4998                           
  4999  0038                     l2430:	
  5000                           ;incstack = 0
  5001                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5002                           
  5003                           
  5004                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5005  0038  3180  2016  3180   	fcall	_I2C_MasterSendAck
  5006  003B                     l2432:
  5007                           
  5008                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5009  003B  3005               	movlw	5
  5010  003C                     l480:
  5011  003C  0008               	return
  5012  003D                     __end_of_I2C_DO_RX_ACK:
  5013                           
  5014                           	psect	text22
  5015  0033                     __ptext22:	
  5016 ;; *************** function _I2C_DO_SEND_STOP *****************
  5017 ;; Defined at:
  5018 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      enum E3352
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5032 ;;      Params:         0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; Hardware stack levels required when called: 1
  5039 ;; This function calls:
  5040 ;;		_I2C_MasterStop
  5041 ;; This function is called by:
  5042 ;;		_I2C_DO_TX
  5043 ;;		_I2C_DO_TX_EMPTY
  5044 ;;		_I2C_DO_ADDRESS_NACK
  5045 ;;		_I2C_MasterFsm
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049  0033                     _I2C_DO_SEND_STOP:	
  5050                           ;psect for function _I2C_DO_SEND_STOP
  5051                           
  5052  0033                     l2262:	
  5053                           ;incstack = 0
  5054                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5055                           
  5056                           
  5057                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5058  0033  318F  27FD  3180   	fcall	_I2C_MasterStop
  5059  0036                     l2264:
  5060                           
  5061                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5062  0036  3000               	movlw	0
  5063  0037                     l477:
  5064  0037  0008               	return
  5065  0038                     __end_of_I2C_DO_SEND_STOP:
  5066                           
  5067                           	psect	text23
  5068  002E                     __ptext23:	
  5069 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5070 ;; Defined at:
  5071 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      enum E3352
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5085 ;;      Params:         0       0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 1
  5092 ;; This function calls:
  5093 ;;		_I2C_MasterEnableRestart
  5094 ;; This function is called by:
  5095 ;;		_I2C_DO_TX_EMPTY
  5096 ;;		_I2C_DO_ADDRESS_NACK
  5097 ;;		_I2C_MasterFsm
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101  002E                     _I2C_DO_SEND_RESTART:	
  5102                           ;psect for function _I2C_DO_SEND_RESTART
  5103                           
  5104  002E                     l2288:	
  5105                           ;incstack = 0
  5106                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5107                           
  5108                           
  5109                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5110  002E  318F  27FA  3180   	fcall	_I2C_MasterEnableRestart
  5111  0031                     l2290:
  5112                           
  5113                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5114  0031  3001               	movlw	1
  5115  0032                     l474:
  5116  0032  0008               	return
  5117  0033                     __end_of_I2C_DO_SEND_RESTART:
  5118                           
  5119                           	psect	text24
  5120  0029                     __ptext24:	
  5121 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5122 ;; Defined at:
  5123 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      enum E3352
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0, pclath, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5137 ;;      Params:         0       0       0       0       0       0       0
  5138 ;;      Locals:         0       0       0       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0
  5140 ;;      Totals:         0       0       0       0       0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 1
  5144 ;; This function calls:
  5145 ;;		_I2C_MasterEnableRestart
  5146 ;; This function is called by:
  5147 ;;		_I2C_DO_TX
  5148 ;;		_I2C_MasterFsm
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152  0029                     _I2C_DO_SEND_RESTART_WRITE:	
  5153                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5154                           
  5155  0029                     l2256:	
  5156                           ;incstack = 0
  5157                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5158                           
  5159                           
  5160                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  5161  0029  318F  27FA  3180   	fcall	_I2C_MasterEnableRestart
  5162  002C                     l2258:
  5163                           
  5164                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  5165  002C  3002               	movlw	2
  5166  002D                     l471:
  5167  002D  0008               	return
  5168  002E                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5169                           
  5170                           	psect	text25
  5171  0024                     __ptext25:	
  5172 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5173 ;; Defined at:
  5174 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      enum E3352
  5181 ;; Registers used:
  5182 ;;		wreg, status,2, status,0, pclath, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5188 ;;      Params:         0       0       0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0
  5191 ;;      Totals:         0       0       0       0       0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used: 1
  5194 ;; Hardware stack levels required when called: 1
  5195 ;; This function calls:
  5196 ;;		_I2C_MasterEnableRestart
  5197 ;; This function is called by:
  5198 ;;		_I2C_DO_TX
  5199 ;;		_I2C_MasterFsm
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203  0024                     _I2C_DO_SEND_RESTART_READ:	
  5204                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5205                           
  5206  0024                     l2250:	
  5207                           ;incstack = 0
  5208                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5209                           
  5210                           
  5211                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  5212  0024  318F  27FA  3180   	fcall	_I2C_MasterEnableRestart
  5213  0027                     l2252:
  5214                           
  5215                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  5216  0027  3001               	movlw	1
  5217  0028                     l468:
  5218  0028  0008               	return
  5219  0029                     __end_of_I2C_DO_SEND_RESTART_READ:
  5220                           
  5221                           	psect	text26
  5222  0063                     __ptext26:	
  5223 ;; *************** function _I2C_DO_RCEN *****************
  5224 ;; Defined at:
  5225 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      enum E3352
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, pclath, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5239 ;;      Params:         0       0       0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0
  5242 ;;      Totals:         0       0       0       0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; Hardware stack levels required when called: 1
  5246 ;; This function calls:
  5247 ;;		_I2C_MasterStartRx
  5248 ;; This function is called by:
  5249 ;;		_I2C_MasterFsm
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253  0063                     _I2C_DO_RCEN:	
  5254                           ;psect for function _I2C_DO_RCEN
  5255                           
  5256  0063                     l2396:	
  5257                           ;incstack = 0
  5258                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5259                           
  5260                           
  5261                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  5262  0063  0021               	movlb	1	; select bank1
  5263  0064  105E               	bcf	(_I2C_Status^(0+128)+28),0
  5264  0065                     l2398:
  5265                           
  5266                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  5267  0065  3180  2005  3180   	fcall	_I2C_MasterStartRx
  5268  0068                     l2400:
  5269                           
  5270                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  5271  0068  3004               	movlw	4
  5272  0069                     l444:
  5273  0069  0008               	return
  5274  006A                     __end_of_I2C_DO_RCEN:
  5275                           
  5276                           	psect	text27
  5277  0328                     __ptext27:	
  5278 ;; *************** function _I2C_DO_RX *****************
  5279 ;; Defined at:
  5280 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      enum E3352
  5287 ;; Registers used:
  5288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5294 ;;      Params:         0       0       0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0
  5296 ;;      Temps:          3       0       0       0       0       0       0
  5297 ;;      Totals:         3       0       0       0       0       0       0
  5298 ;;Total ram usage:        3 bytes
  5299 ;; Hardware stack levels used: 1
  5300 ;; Hardware stack levels required when called: 3
  5301 ;; This function calls:
  5302 ;;		Absolute function
  5303 ;;		_I2C_CallbackReturnReset
  5304 ;;		_I2C_CallbackReturnStop
  5305 ;;		_I2C_DO_RX_NACK_RESTART
  5306 ;;		_I2C_DO_RX_NACK_STOP
  5307 ;;		_I2C_MasterGetRxData
  5308 ;;		_I2C_MasterSendAck
  5309 ;;		_rd1RegCompleteHandler
  5310 ;;		_rd2RegCompleteHandler
  5311 ;;		_rdBlkRegCompleteHandler
  5312 ;;		_wr1RegCompleteHandler
  5313 ;;		_wr2RegCompleteHandler
  5314 ;; This function is called by:
  5315 ;;		_I2C_MasterFsm
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319  0328                     _I2C_DO_RX:	
  5320                           ;psect for function _I2C_DO_RX
  5321                           
  5322  0328                     l2364:	
  5323                           ;incstack = 0
  5324                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5325                           
  5326                           
  5327                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5328  0328  3180  2008  3183   	fcall	_I2C_MasterGetRxData
  5329  032B  00FA               	movwf	??_I2C_DO_RX
  5330  032C  0021               	movlb	1	; select bank1
  5331  032D  0859               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
  5332  032E  0086               	movwf	6
  5333  032F  0187               	clrf	7
  5334  0330  087A               	movf	??_I2C_DO_RX,w
  5335  0331  0081               	movwf	1
  5336  0332                     l2366:
  5337  0332  3001               	movlw	1
  5338  0333  00FA               	movwf	??_I2C_DO_RX
  5339  0334  087A               	movf	??_I2C_DO_RX,w
  5340  0335  07D9               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
  5341  0336                     l2368:
  5342                           
  5343                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  5344  0336  3001               	movlw	1
  5345  0337  02DA               	subwf	(_I2C_Status^(0+128)+24),f
  5346  0338  3000               	movlw	0
  5347  0339  3BDB               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  5348  033A  085A               	movf	(_I2C_Status^(0+128)+24),w
  5349  033B  045B               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  5350  033C  1903               	btfsc	3,2
  5351  033D  2B3F               	goto	u1031
  5352  033E  2B40               	goto	u1030
  5353  033F                     u1031:
  5354  033F  2B45               	goto	l432
  5355  0340                     u1030:
  5356  0340                     l2370:
  5357                           
  5358                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  5359  0340  3180  2016  3183   	fcall	_I2C_MasterSendAck
  5360  0343                     l2372:
  5361                           
  5362                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  5363  0343  3005               	movlw	5
  5364  0344  2B6D               	goto	l433
  5365  0345                     l432:	
  5366                           ;mcc_generated_files/i2c_master.c: 386:     else
  5367                           
  5368                           
  5369                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  5370  0345  15DE               	bsf	(_I2C_Status^(0+128)+28),3
  5371                           
  5372                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5373  0346  2B4F               	goto	l2388
  5374  0347                     l2378:
  5375                           
  5376                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  5377  0347  3180  2042  3183   	fcall	_I2C_DO_RX_NACK_RESTART
  5378  034A  2B6D               	goto	l433
  5379  034B                     l2382:
  5380                           
  5381                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  5382  034B  3180  203D  3183   	fcall	_I2C_DO_RX_NACK_STOP
  5383  034E  2B6D               	goto	l433
  5384  034F                     l2388:
  5385  034F  084E               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  5386  0350  00FA               	movwf	??_I2C_DO_RX
  5387  0351  087A               	movf	??_I2C_DO_RX,w
  5388  0352  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5389  0353  0843               	movf	(_I2C_Status+1)^(0+128),w
  5390  0354  008A               	movwf	10
  5391  0355  0842               	movf	_I2C_Status^(0+128),w
  5392  0356  000A               	callw
  5393  0357  3183               	pagesel	$
  5394  0358  00FB               	movwf	??_I2C_DO_RX+1
  5395  0359  01FC               	clrf	??_I2C_DO_RX+2
  5396                           
  5397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5398                           ; Switch size 1, requested type "simple"
  5399                           ; Number of cases is 1, Range of values is 0 to 0
  5400                           ; switch strategies available:
  5401                           ; Name         Instructions Cycles
  5402                           ; simple_byte            4     3 (average)
  5403                           ; direct_byte            8     6 (fixed)
  5404                           ; jumptable            260     6 (fixed)
  5405                           ;	Chosen strategy is simple_byte
  5406  035A  087C               	movf	??_I2C_DO_RX+2,w
  5407  035B  3A00               	xorlw	0	; case 0
  5408  035C  1903               	skipnz
  5409  035D  2B5F               	goto	l3160
  5410  035E  2B4B               	goto	l2382
  5411  035F                     l3160:
  5412                           
  5413                           ; Switch size 1, requested type "simple"
  5414                           ; Number of cases is 4, Range of values is 1 to 4
  5415                           ; switch strategies available:
  5416                           ; Name         Instructions Cycles
  5417                           ; simple_byte           13     7 (average)
  5418                           ; direct_byte           17     9 (fixed)
  5419                           ; jumptable            263     9 (fixed)
  5420                           ;	Chosen strategy is simple_byte
  5421  035F  087B               	movf	??_I2C_DO_RX+1,w
  5422  0360  3A01               	xorlw	1	; case 1
  5423  0361  1903               	skipnz
  5424  0362  2B4B               	goto	l2382
  5425  0363  3A03               	xorlw	3	; case 2
  5426  0364  1903               	skipnz
  5427  0365  2B47               	goto	l2378
  5428  0366  3A01               	xorlw	1	; case 3
  5429  0367  1903               	skipnz
  5430  0368  2B47               	goto	l2378
  5431  0369  3A07               	xorlw	7	; case 4
  5432  036A  1903               	skipnz
  5433  036B  2B4B               	goto	l2382
  5434  036C  2B4B               	goto	l2382
  5435  036D                     l433:
  5436  036D  0008               	return
  5437  036E                     __end_of_I2C_DO_RX:
  5438                           
  5439                           	psect	text28
  5440  03B4                     __ptext28:	
  5441 ;; *************** function _I2C_DO_TX *****************
  5442 ;; Defined at:
  5443 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      enum E3352
  5450 ;; Registers used:
  5451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5457 ;;      Params:         0       0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0
  5459 ;;      Temps:          3       0       0       0       0       0       0
  5460 ;;      Totals:         3       0       0       0       0       0       0
  5461 ;;Total ram usage:        3 bytes
  5462 ;; Hardware stack levels used: 1
  5463 ;; Hardware stack levels required when called: 3
  5464 ;; This function calls:
  5465 ;;		Absolute function
  5466 ;;		_I2C_CallbackReturnReset
  5467 ;;		_I2C_CallbackReturnStop
  5468 ;;		_I2C_DO_SEND_RESTART_READ
  5469 ;;		_I2C_DO_SEND_RESTART_WRITE
  5470 ;;		_I2C_DO_SEND_STOP
  5471 ;;		_I2C_MasterIsNack
  5472 ;;		_I2C_MasterSendTxData
  5473 ;;		_rd1RegCompleteHandler
  5474 ;;		_rd2RegCompleteHandler
  5475 ;;		_rdBlkRegCompleteHandler
  5476 ;;		_wr1RegCompleteHandler
  5477 ;;		_wr2RegCompleteHandler
  5478 ;; This function is called by:
  5479 ;;		_I2C_MasterFsm
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483  03B4                     _I2C_DO_TX:	
  5484                           ;psect for function _I2C_DO_TX
  5485                           
  5486  03B4                     l2330:	
  5487                           ;incstack = 0
  5488                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5489                           
  5490                           
  5491                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  5492  03B4  3180  2051  3183   	fcall	_I2C_MasterIsNack
  5493  03B7  3A00               	xorlw	0
  5494  03B8  1903               	skipnz
  5495  03B9  2BBB               	goto	u1011
  5496  03BA  2BBC               	goto	u1010
  5497  03BB                     u1011:
  5498  03BB  2BEC               	goto	l416
  5499  03BC                     u1010:
  5500  03BC  2BC9               	goto	l2348
  5501  03BD                     l2334:
  5502                           
  5503                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5504  03BD  3180  2024  3183   	fcall	_I2C_DO_SEND_RESTART_READ
  5505  03C0  2C08               	goto	l419
  5506  03C1                     l2338:
  5507                           
  5508                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5509  03C1  3180  2029  3183   	fcall	_I2C_DO_SEND_RESTART_WRITE
  5510  03C4  2C08               	goto	l419
  5511  03C5                     l2342:
  5512                           
  5513                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  5514  03C5  3180  2033  3183   	fcall	_I2C_DO_SEND_STOP
  5515  03C8  2C08               	goto	l419
  5516  03C9                     l2348:
  5517  03C9  0021               	movlb	1	; select bank1
  5518  03CA  0851               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
  5519  03CB  00FA               	movwf	??_I2C_DO_TX
  5520  03CC  087A               	movf	??_I2C_DO_TX,w
  5521  03CD  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5522  03CE  3006               	movlw	6
  5523  03CF  3EC2               	addlw	(low (_I2C_Status| 0))& (0+255)
  5524  03D0  0086               	movwf	6
  5525  03D1  0187               	clrf	7
  5526  03D2  3F41               	moviw [1]fsr1
  5527  03D3  008A               	movwf	10
  5528  03D4  3F40               	moviw [0]fsr1
  5529  03D5  000A               	callw
  5530  03D6  3183               	pagesel	$
  5531  03D7  00FB               	movwf	??_I2C_DO_TX+1
  5532  03D8  01FC               	clrf	??_I2C_DO_TX+2
  5533                           
  5534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5535                           ; Switch size 1, requested type "simple"
  5536                           ; Number of cases is 1, Range of values is 0 to 0
  5537                           ; switch strategies available:
  5538                           ; Name         Instructions Cycles
  5539                           ; simple_byte            4     3 (average)
  5540                           ; direct_byte            8     6 (fixed)
  5541                           ; jumptable            260     6 (fixed)
  5542                           ;	Chosen strategy is simple_byte
  5543  03D9  087C               	movf	??_I2C_DO_TX+2,w
  5544  03DA  3A00               	xorlw	0	; case 0
  5545  03DB  1903               	skipnz
  5546  03DC  2BDE               	goto	l3162
  5547  03DD  2BC5               	goto	l2342
  5548  03DE                     l3162:
  5549                           
  5550                           ; Switch size 1, requested type "simple"
  5551                           ; Number of cases is 4, Range of values is 1 to 4
  5552                           ; switch strategies available:
  5553                           ; Name         Instructions Cycles
  5554                           ; simple_byte           13     7 (average)
  5555                           ; direct_byte           17     9 (fixed)
  5556                           ; jumptable            263     9 (fixed)
  5557                           ;	Chosen strategy is simple_byte
  5558  03DE  087B               	movf	??_I2C_DO_TX+1,w
  5559  03DF  3A01               	xorlw	1	; case 1
  5560  03E0  1903               	skipnz
  5561  03E1  2BC5               	goto	l2342
  5562  03E2  3A03               	xorlw	3	; case 2
  5563  03E3  1903               	skipnz
  5564  03E4  2BBD               	goto	l2334
  5565  03E5  3A01               	xorlw	1	; case 3
  5566  03E6  1903               	skipnz
  5567  03E7  2BC1               	goto	l2338
  5568  03E8  3A07               	xorlw	7	; case 4
  5569  03E9  1903               	skipnz
  5570  03EA  2BC5               	goto	l2342
  5571  03EB  2BC5               	goto	l2342
  5572  03EC                     l416:	
  5573                           ;mcc_generated_files/i2c_master.c: 370:     else
  5574                           
  5575                           
  5576                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5577  03EC  0021               	movlb	1	; select bank1
  5578  03ED  105E               	bcf	(_I2C_Status^(0+128)+28),0
  5579  03EE                     l2350:
  5580                           
  5581                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5582  03EE  3017               	movlw	23
  5583  03EF  3EC2               	addlw	(low (_I2C_Status| 0))& (0+255)
  5584  03F0  0086               	movwf	6
  5585  03F1  0187               	clrf	7
  5586  03F2  3F40               	moviw [0]fsr1
  5587  03F3  0084               	movwf	4
  5588  03F4  0185               	clrf	5
  5589  03F5  0A81               	incf	1,f
  5590  03F6  0800               	movf	0,w
  5591  03F7  3180  201A  3183   	fcall	_I2C_MasterSendTxData
  5592  03FA                     l2352:
  5593                           
  5594                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5595  03FA  3001               	movlw	1
  5596  03FB  0021               	movlb	1	; select bank1
  5597  03FC  02DA               	subwf	(_I2C_Status^(0+128)+24),f
  5598  03FD  3000               	movlw	0
  5599  03FE  3BDB               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  5600  03FF  085A               	movf	(_I2C_Status^(0+128)+24),w
  5601  0400  045B               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  5602  0401  1D03               	btfss	3,2
  5603  0402  2C04               	goto	u1021
  5604  0403  2C05               	goto	u1020
  5605  0404                     u1021:
  5606  0404  2C07               	goto	l2356
  5607  0405                     u1020:
  5608  0405                     l2354:
  5609  0405  3006               	movlw	6
  5610  0406  2C08               	goto	l419
  5611  0407                     l2356:
  5612  0407  3003               	movlw	3
  5613  0408                     l419:
  5614  0408  0008               	return
  5615  0409                     __end_of_I2C_DO_TX:
  5616                           
  5617                           	psect	text29
  5618  006A                     __ptext29:	
  5619 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5620 ;; Defined at:
  5621 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      enum E3352
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5635 ;;      Params:         0       0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0
  5638 ;;      Totals:         0       0       0       0       0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 1
  5642 ;; This function calls:
  5643 ;;		_I2C_MasterSendTxData
  5644 ;; This function is called by:
  5645 ;;		_I2C_MasterFsm
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649  006A                     _I2C_DO_SEND_ADR_WRITE:	
  5650                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  5651                           
  5652  006A                     l2322:	
  5653                           ;incstack = 0
  5654                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5655                           
  5656                           
  5657                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5658  006A  0021               	movlb	1	; select bank1
  5659  006B  145E               	bsf	(_I2C_Status^(0+128)+28),0
  5660  006C                     l2324:
  5661                           
  5662                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5663  006C  3558               	lslf	(_I2C_Status^(0+128)+22),w
  5664  006D  3180  201A  3180   	fcall	_I2C_MasterSendTxData
  5665  0070                     l2326:
  5666                           
  5667                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5668  0070  3003               	movlw	3
  5669  0071                     l413:
  5670  0071  0008               	return
  5671  0072                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5672                           
  5673                           	psect	text30
  5674  007B                     __ptext30:	
  5675 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5676 ;; Defined at:
  5677 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      enum E3352
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0, pclath, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5691 ;;      Params:         0       0       0       0       0       0       0
  5692 ;;      Locals:         0       0       0       0       0       0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0
  5694 ;;      Totals:         0       0       0       0       0       0       0
  5695 ;;Total ram usage:        0 bytes
  5696 ;; Hardware stack levels used: 1
  5697 ;; Hardware stack levels required when called: 1
  5698 ;; This function calls:
  5699 ;;		_I2C_MasterSendTxData
  5700 ;; This function is called by:
  5701 ;;		_I2C_MasterFsm
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705  007B                     _I2C_DO_SEND_ADR_READ:	
  5706                           ;psect for function _I2C_DO_SEND_ADR_READ
  5707                           
  5708  007B                     l2314:	
  5709                           ;incstack = 0
  5710                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  5711                           
  5712                           
  5713                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5714  007B  0021               	movlb	1	; select bank1
  5715  007C  145E               	bsf	(_I2C_Status^(0+128)+28),0
  5716  007D                     l2316:
  5717                           
  5718                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5719  007D  1403               	setc
  5720  007E  0D58               	rlf	(_I2C_Status^(0+128)+22),w
  5721  007F  3180  201A  3180   	fcall	_I2C_MasterSendTxData
  5722  0082                     l2318:
  5723                           
  5724                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5725  0082  3005               	movlw	5
  5726  0083                     l410:
  5727  0083  0008               	return
  5728  0084                     __end_of_I2C_DO_SEND_ADR_READ:
  5729                           
  5730                           	psect	text31
  5731  001F                     __ptext31:	
  5732 ;; *************** function _I2C_DO_IDLE *****************
  5733 ;; Defined at:
  5734 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      enum E3352
  5741 ;; Registers used:
  5742 ;;		wreg, status,2
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5748 ;;      Params:         0       0       0       0       0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_I2C_MasterFsm
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761  001F                     _I2C_DO_IDLE:	
  5762                           ;psect for function _I2C_DO_IDLE
  5763                           
  5764  001F                     l2306:	
  5765                           ;incstack = 0
  5766                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  5767                           
  5768                           
  5769                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  5770  001F  0021               	movlb	1	; select bank1
  5771  0020  10DE               	bcf	(_I2C_Status^(0+128)+28),1
  5772  0021                     l2308:
  5773                           
  5774                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  5775  0021  01DD               	clrf	(_I2C_Status^(0+128)+27)
  5776  0022                     l2310:
  5777                           
  5778                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  5779  0022  300E               	movlw	14
  5780  0023                     l407:
  5781  0023  0008               	return
  5782  0024                     __end_of_I2C_DO_IDLE:
  5783                           
  5784                           	psect	text32
  5785  021E                     __ptext32:	
  5786 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5787 ;; Defined at:
  5788 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      enum E3352
  5795 ;; Registers used:
  5796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5802 ;;      Params:         0       0       0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0
  5804 ;;      Temps:          3       0       0       0       0       0       0
  5805 ;;      Totals:         3       0       0       0       0       0       0
  5806 ;;Total ram usage:        3 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; Hardware stack levels required when called: 3
  5809 ;; This function calls:
  5810 ;;		Absolute function
  5811 ;;		_I2C_CallbackReturnReset
  5812 ;;		_I2C_CallbackReturnStop
  5813 ;;		_I2C_DO_SEND_RESTART
  5814 ;;		_I2C_DO_SEND_STOP
  5815 ;;		_I2C_MasterSetIrq
  5816 ;;		_rd1RegCompleteHandler
  5817 ;;		_rd2RegCompleteHandler
  5818 ;;		_rdBlkRegCompleteHandler
  5819 ;;		_wr1RegCompleteHandler
  5820 ;;		_wr2RegCompleteHandler
  5821 ;; This function is called by:
  5822 ;;		_I2C_MasterFsm
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826  021E                     _I2C_DO_TX_EMPTY:	
  5827                           ;psect for function _I2C_DO_TX_EMPTY
  5828                           
  5829  021E                     l2404:	
  5830                           ;incstack = 0
  5831                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5832                           
  5833                           
  5834                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  5835  021E  0021               	movlb	1	; select bank1
  5836  021F  15DE               	bsf	(_I2C_Status^(0+128)+28),3
  5837                           
  5838                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5839  0220  2A2E               	goto	l2422
  5840  0221                     l2406:
  5841                           
  5842                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  5843  0221  3180  202E  3182   	fcall	_I2C_DO_SEND_RESTART
  5844  0224  2A4C               	goto	l450
  5845  0225                     l2410:
  5846                           
  5847                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  5848  0225  3180  200B  3182   	fcall	_I2C_MasterSetIrq
  5849  0228                     l2412:
  5850                           
  5851                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  5852  0228  3003               	movlw	3
  5853  0229  2A4C               	goto	l450
  5854  022A                     l2416:
  5855                           
  5856                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  5857  022A  3180  2033  3182   	fcall	_I2C_DO_SEND_STOP
  5858  022D  2A4C               	goto	l450
  5859  022E                     l2422:
  5860  022E  084E               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  5861  022F  00FA               	movwf	??_I2C_DO_TX_EMPTY
  5862  0230  087A               	movf	??_I2C_DO_TX_EMPTY,w
  5863  0231  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5864  0232  0843               	movf	(_I2C_Status+1)^(0+128),w
  5865  0233  008A               	movwf	10
  5866  0234  0842               	movf	_I2C_Status^(0+128),w
  5867  0235  000A               	callw
  5868  0236  3182               	pagesel	$
  5869  0237  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  5870  0238  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  5871                           
  5872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5873                           ; Switch size 1, requested type "simple"
  5874                           ; Number of cases is 1, Range of values is 0 to 0
  5875                           ; switch strategies available:
  5876                           ; Name         Instructions Cycles
  5877                           ; simple_byte            4     3 (average)
  5878                           ; direct_byte            8     6 (fixed)
  5879                           ; jumptable            260     6 (fixed)
  5880                           ;	Chosen strategy is simple_byte
  5881  0239  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  5882  023A  3A00               	xorlw	0	; case 0
  5883  023B  1903               	skipnz
  5884  023C  2A3E               	goto	l3164
  5885  023D  2A2A               	goto	l2416
  5886  023E                     l3164:
  5887                           
  5888                           ; Switch size 1, requested type "simple"
  5889                           ; Number of cases is 4, Range of values is 1 to 4
  5890                           ; switch strategies available:
  5891                           ; Name         Instructions Cycles
  5892                           ; simple_byte           13     7 (average)
  5893                           ; direct_byte           17     9 (fixed)
  5894                           ; jumptable            263     9 (fixed)
  5895                           ;	Chosen strategy is simple_byte
  5896  023E  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  5897  023F  3A01               	xorlw	1	; case 1
  5898  0240  1903               	skipnz
  5899  0241  2A2A               	goto	l2416
  5900  0242  3A03               	xorlw	3	; case 2
  5901  0243  1903               	skipnz
  5902  0244  2A21               	goto	l2406
  5903  0245  3A01               	xorlw	1	; case 3
  5904  0246  1903               	skipnz
  5905  0247  2A21               	goto	l2406
  5906  0248  3A07               	xorlw	7	; case 4
  5907  0249  1903               	skipnz
  5908  024A  2A25               	goto	l2410
  5909  024B  2A2A               	goto	l2416
  5910  024C                     l450:
  5911  024C  0008               	return
  5912  024D                     __end_of_I2C_DO_TX_EMPTY:
  5913                           
  5914                           	psect	text33
  5915  000B                     __ptext33:	
  5916 ;; *************** function _I2C_MasterSetIrq *****************
  5917 ;; Defined at:
  5918 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		None
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5932 ;;      Params:         0       0       0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_I2C_DO_TX_EMPTY
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945  000B                     _I2C_MasterSetIrq:	
  5946                           ;psect for function _I2C_MasterSetIrq
  5947                           
  5948  000B                     l2294:	
  5949                           ;incstack = 0
  5950                           ; Regs used in _I2C_MasterSetIrq: []
  5951                           
  5952                           
  5953                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  5954  000B  0020               	movlb	0	; select bank0
  5955  000C  1591               	bsf	17,3	;volatile
  5956  000D                     l570:
  5957  000D  0008               	return
  5958  000E                     __end_of_I2C_MasterSetIrq:
  5959                           
  5960                           	psect	text34
  5961  0051                     __ptext34:	
  5962 ;; *************** function _I2C_MasterIsNack *****************
  5963 ;; Defined at:
  5964 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      _Bool 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5978 ;;      Params:         0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_I2C_MasterFsm
  5988 ;;		_I2C_DO_TX
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992  0051                     _I2C_MasterIsNack:	
  5993                           ;psect for function _I2C_MasterIsNack
  5994                           
  5995  0051                     l2244:	
  5996                           ;incstack = 0
  5997                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  5998                           
  5999                           
  6000                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  6001  0051  0024               	movlb	4	; select bank4
  6002  0052  0E16               	swapf	22,w	;volatile
  6003  0053  0C89               	rrf	9,f
  6004  0054  0C89               	rrf	9,f
  6005  0055  3901               	andlw	1
  6006  0056                     l543:
  6007  0056  0008               	return
  6008  0057                     __end_of_I2C_MasterIsNack:
  6009                           
  6010                           	psect	text35
  6011  001A                     __ptext35:	
  6012 ;; *************** function _I2C_MasterSendTxData *****************
  6013 ;; Defined at:
  6014 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  data            1    wreg     unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  data            1    0[COMMON] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		wreg
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6028 ;;      Params:         0       0       0       0       0       0       0
  6029 ;;      Locals:         1       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0
  6031 ;;      Totals:         1       0       0       0       0       0       0
  6032 ;;Total ram usage:        1 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_I2C_DO_SEND_ADR_READ
  6038 ;;		_I2C_DO_SEND_ADR_WRITE
  6039 ;;		_I2C_DO_TX
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043  001A                     _I2C_MasterSendTxData:	
  6044                           ;psect for function _I2C_MasterSendTxData
  6045                           
  6046                           
  6047                           ;incstack = 0
  6048                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6049                           ;I2C_MasterSendTxData@data stored from wreg
  6050  001A  00F0               	movwf	I2C_MasterSendTxData@data
  6051  001B                     l2248:
  6052                           
  6053                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  6054  001B  0870               	movf	I2C_MasterSendTxData@data,w
  6055  001C  0024               	movlb	4	; select bank4
  6056  001D  0091               	movwf	17	;volatile
  6057  001E                     l525:
  6058  001E  0008               	return
  6059  001F                     __end_of_I2C_MasterSendTxData:
  6060                           
  6061                           	psect	text36
  6062  0016                     __ptext36:	
  6063 ;; *************** function _I2C_MasterSendAck *****************
  6064 ;; Defined at:
  6065 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		None
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6079 ;;      Params:         0       0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		_I2C_DO_RX
  6089 ;;		_I2C_DO_RX_ACK
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093  0016                     _I2C_MasterSendAck:	
  6094                           ;psect for function _I2C_MasterSendAck
  6095                           
  6096  0016                     l2272:	
  6097                           ;incstack = 0
  6098                           ; Regs used in _I2C_MasterSendAck: []
  6099                           
  6100                           
  6101                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  6102  0016  0024               	movlb	4	; select bank4
  6103  0017  1296               	bcf	22,5	;volatile
  6104                           
  6105                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  6106  0018  1616               	bsf	22,4	;volatile
  6107  0019                     l546:
  6108  0019  0008               	return
  6109  001A                     __end_of_I2C_MasterSendAck:
  6110                           
  6111                           	psect	text37
  6112  0008                     __ptext37:	
  6113 ;; *************** function _I2C_MasterGetRxData *****************
  6114 ;; Defined at:
  6115 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      unsigned char 
  6122 ;; Registers used:
  6123 ;;		wreg
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6129 ;;      Params:         0       0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_I2C_DO_RX
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142  0008                     _I2C_MasterGetRxData:	
  6143                           ;psect for function _I2C_MasterGetRxData
  6144                           
  6145  0008                     l2268:	
  6146                           ;incstack = 0
  6147                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6148                           
  6149                           
  6150                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  6151  0008  0024               	movlb	4	; select bank4
  6152  0009  0811               	movf	17,w	;volatile
  6153  000A                     l522:
  6154  000A  0008               	return
  6155  000B                     __end_of_I2C_MasterGetRxData:
  6156                           
  6157                           	psect	text38
  6158  0012                     __ptext38:	
  6159 ;; *************** function _I2C_MasterSendNack *****************
  6160 ;; Defined at:
  6161 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;		None
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		None
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6175 ;;      Params:         0       0       0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0
  6178 ;;      Totals:         0       0       0       0       0       0       0
  6179 ;;Total ram usage:        0 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_I2C_DO_RX_NACK_STOP
  6185 ;;		_I2C_DO_RX_NACK_RESTART
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189  0012                     _I2C_MasterSendNack:	
  6190                           ;psect for function _I2C_MasterSendNack
  6191                           
  6192  0012                     l2204:	
  6193                           ;incstack = 0
  6194                           ; Regs used in _I2C_MasterSendNack: []
  6195                           
  6196                           
  6197                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  6198  0012  0024               	movlb	4	; select bank4
  6199  0013  1696               	bsf	22,5	;volatile
  6200                           
  6201                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  6202  0014  1616               	bsf	22,4	;volatile
  6203  0015                     l549:
  6204  0015  0008               	return
  6205  0016                     __end_of_I2C_MasterSendNack:
  6206                           
  6207                           	psect	text39
  6208  0005                     __ptext39:	
  6209 ;; *************** function _I2C_MasterStartRx *****************
  6210 ;; Defined at:
  6211 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		None
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6225 ;;      Params:         0       0       0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_I2C_DO_RCEN
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238  0005                     _I2C_MasterStartRx:	
  6239                           ;psect for function _I2C_MasterStartRx
  6240                           
  6241  0005                     l2286:	
  6242                           ;incstack = 0
  6243                           ; Regs used in _I2C_MasterStartRx: []
  6244                           
  6245                           
  6246                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  6247  0005  0024               	movlb	4	; select bank4
  6248  0006  1596               	bsf	22,3	;volatile
  6249  0007                     l534:
  6250  0007  0008               	return
  6251  0008                     __end_of_I2C_MasterStartRx:
  6252                           
  6253                           	psect	text40
  6254  0FEC                     __ptext40:	
  6255 ;; *************** function _I2C_CallbackReturnReset *****************
  6256 ;; Defined at:
  6257 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  funPtr          1    9[COMMON] PTR void 
  6260 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6261 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      enum E360
  6266 ;; Registers used:
  6267 ;;		wreg
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6273 ;;      Params:         1       0       0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0
  6276 ;;      Totals:         1       0       0       0       0       0       0
  6277 ;;Total ram usage:        1 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_I2C_Open
  6283 ;;		_I2C_DO_TX
  6284 ;;		_I2C_DO_RX
  6285 ;;		_I2C_DO_TX_EMPTY
  6286 ;;		_I2C_DO_ADDRESS_NACK
  6287 ;;		_I2C_DO_RX_EMPTY
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291  0FEC                     _I2C_CallbackReturnReset:	
  6292                           ;psect for function _I2C_CallbackReturnReset
  6293                           
  6294  0FEC                     l2300:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  6297                           
  6298                           
  6299                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  6300  0FEC  3005               	movlw	5
  6301  0FED                     l506:
  6302  0FED  0008               	return
  6303  0FEE                     __end_of_I2C_CallbackReturnReset:
  6304                           
  6305                           	psect	text41
  6306  0FEA                     __ptext41:	
  6307 ;; *************** function _I2C_CallbackReturnStop *****************
  6308 ;; Defined at:
  6309 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  funPtr          1    9[COMMON] PTR void 
  6312 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6313 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      enum E360
  6318 ;; Registers used:
  6319 ;;		wreg
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6325 ;;      Params:         1       0       0       0       0       0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0
  6328 ;;      Totals:         1       0       0       0       0       0       0
  6329 ;;Total ram usage:        1 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_I2C_Open
  6335 ;;		_I2C_SetCallback
  6336 ;;		_I2C_DO_TX
  6337 ;;		_I2C_DO_RX
  6338 ;;		_I2C_DO_TX_EMPTY
  6339 ;;		_I2C_DO_ADDRESS_NACK
  6340 ;;		_I2C_DO_RX_EMPTY
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344  0FEA                     _I2C_CallbackReturnStop:	
  6345                           ;psect for function _I2C_CallbackReturnStop
  6346                           
  6347  0FEA                     l2296:	
  6348                           ;incstack = 0
  6349                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  6350                           
  6351                           
  6352                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  6353  0FEA  3001               	movlw	1
  6354  0FEB                     l503:
  6355  0FEB  0008               	return
  6356  0FEC                     __end_of_I2C_CallbackReturnStop:
  6357                           
  6358                           	psect	text42
  6359  0125                     __ptext42:	
  6360 ;; *************** function _rdBlkRegCompleteHandler *****************
  6361 ;; Defined at:
  6362 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  ptr             1    9[COMMON] PTR void 
  6365 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6366 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      enum E360
  6371 ;; Registers used:
  6372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6378 ;;      Params:         1       0       0       0       0       0       0
  6379 ;;      Locals:         0       0       0       0       0       0       0
  6380 ;;      Temps:          0       0       0       0       0       0       0
  6381 ;;      Totals:         1       0       0       0       0       0       0
  6382 ;;Total ram usage:        1 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 2
  6385 ;; This function calls:
  6386 ;;		_I2C_SetBuffer
  6387 ;;		_I2C_SetDataCompleteCallback
  6388 ;; This function is called by:
  6389 ;;		_I2C_ReadDataBlock
  6390 ;;		_I2C_DO_TX
  6391 ;;		_I2C_DO_RX
  6392 ;;		_I2C_DO_TX_EMPTY
  6393 ;;		_I2C_DO_ADDRESS_NACK
  6394 ;;		_I2C_DO_RX_EMPTY
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398  0125                     _rdBlkRegCompleteHandler:	
  6399                           ;psect for function _rdBlkRegCompleteHandler
  6400                           
  6401  0125                     l2238:	
  6402                           ;incstack = 0
  6403                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6404                           
  6405                           
  6406                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6407  0125  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  6408  0126  0086               	movwf	6
  6409  0127  0187               	clrf	7
  6410  0128  3F40               	moviw [0]fsr1
  6411  0129  00F0               	movwf	I2C_SetBuffer@bufferSize
  6412  012A  3F41               	moviw [1]fsr1
  6413  012B  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6414  012C  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  6415  012D  3E02               	addlw	2
  6416  012E  0086               	movwf	6
  6417  012F  0187               	clrf	7
  6418  0130  0801               	movf	1,w
  6419  0131  3180  20D1  3181   	fcall	_I2C_SetBuffer
  6420                           
  6421                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6422  0134  3000               	movlw	0
  6423  0135  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  6424  0136  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  6425  0137  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  6426  0138  3180  209D  3181   	fcall	_I2C_SetDataCompleteCallback
  6427  013B                     l2240:
  6428                           
  6429                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6430  013B  3002               	movlw	2
  6431  013C                     l240:
  6432  013C  0008               	return
  6433  013D                     __end_of_rdBlkRegCompleteHandler:
  6434                           
  6435                           	psect	text43
  6436  0114                     __ptext43:	
  6437 ;; *************** function _wr1RegCompleteHandler *****************
  6438 ;; Defined at:
  6439 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  ptr             1    9[COMMON] PTR void 
  6442 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6443 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      enum E360
  6448 ;; Registers used:
  6449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6455 ;;      Params:         1       0       0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0       0       0
  6458 ;;      Totals:         1       0       0       0       0       0       0
  6459 ;;Total ram usage:        1 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; Hardware stack levels required when called: 2
  6462 ;; This function calls:
  6463 ;;		_I2C_SetBuffer
  6464 ;;		_I2C_SetDataCompleteCallback
  6465 ;; This function is called by:
  6466 ;;		_I2C_Write1ByteRegister
  6467 ;;		_I2C_DO_TX
  6468 ;;		_I2C_DO_RX
  6469 ;;		_I2C_DO_TX_EMPTY
  6470 ;;		_I2C_DO_ADDRESS_NACK
  6471 ;;		_I2C_DO_RX_EMPTY
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475  0114                     _wr1RegCompleteHandler:	
  6476                           ;psect for function _wr1RegCompleteHandler
  6477                           
  6478  0114                     l2222:	
  6479                           ;incstack = 0
  6480                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6481                           
  6482                           
  6483                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6484  0114  3001               	movlw	1
  6485  0115  00F0               	movwf	I2C_SetBuffer@bufferSize
  6486  0116  3000               	movlw	0
  6487  0117  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6488  0118  0879               	movf	wr1RegCompleteHandler@ptr,w
  6489  0119  3180  20D1  3181   	fcall	_I2C_SetBuffer
  6490  011C                     l2224:
  6491                           
  6492                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6493  011C  3000               	movlw	0
  6494  011D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  6495  011E  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  6496  011F  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  6497  0120  3180  209D  3181   	fcall	_I2C_SetDataCompleteCallback
  6498  0123                     l2226:
  6499                           
  6500                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6501  0123  3004               	movlw	4
  6502  0124                     l234:
  6503  0124  0008               	return
  6504  0125                     __end_of_wr1RegCompleteHandler:
  6505                           
  6506                           	psect	text44
  6507  0103                     __ptext44:	
  6508 ;; *************** function _rd2RegCompleteHandler *****************
  6509 ;; Defined at:
  6510 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  ptr             1    9[COMMON] PTR void 
  6513 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6514 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      enum E360
  6519 ;; Registers used:
  6520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6526 ;;      Params:         1       0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0
  6529 ;;      Totals:         1       0       0       0       0       0       0
  6530 ;;Total ram usage:        1 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 2
  6533 ;; This function calls:
  6534 ;;		_I2C_SetBuffer
  6535 ;;		_I2C_SetDataCompleteCallback
  6536 ;; This function is called by:
  6537 ;;		_I2C_Read2ByteRegister
  6538 ;;		_I2C_DO_TX
  6539 ;;		_I2C_DO_RX
  6540 ;;		_I2C_DO_TX_EMPTY
  6541 ;;		_I2C_DO_ADDRESS_NACK
  6542 ;;		_I2C_DO_RX_EMPTY
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546  0103                     _rd2RegCompleteHandler:	
  6547                           ;psect for function _rd2RegCompleteHandler
  6548                           
  6549  0103                     l2214:	
  6550                           ;incstack = 0
  6551                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6552                           
  6553                           
  6554                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6555  0103  3002               	movlw	2
  6556  0104  00F0               	movwf	I2C_SetBuffer@bufferSize
  6557  0105  3000               	movlw	0
  6558  0106  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6559  0107  0879               	movf	rd2RegCompleteHandler@ptr,w
  6560  0108  3180  20D1  3181   	fcall	_I2C_SetBuffer
  6561  010B                     l2216:
  6562                           
  6563                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6564  010B  3000               	movlw	0
  6565  010C  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  6566  010D  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  6567  010E  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  6568  010F  3180  209D  3181   	fcall	_I2C_SetDataCompleteCallback
  6569  0112                     l2218:
  6570                           
  6571                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6572  0112  3002               	movlw	2
  6573  0113                     l231:
  6574  0113  0008               	return
  6575  0114                     __end_of_rd2RegCompleteHandler:
  6576                           
  6577                           	psect	text45
  6578  00F2                     __ptext45:	
  6579 ;; *************** function _rd1RegCompleteHandler *****************
  6580 ;; Defined at:
  6581 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  ptr             1    9[COMMON] PTR void 
  6584 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6585 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      enum E360
  6590 ;; Registers used:
  6591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6597 ;;      Params:         1       0       0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0
  6600 ;;      Totals:         1       0       0       0       0       0       0
  6601 ;;Total ram usage:        1 bytes
  6602 ;; Hardware stack levels used: 1
  6603 ;; Hardware stack levels required when called: 2
  6604 ;; This function calls:
  6605 ;;		_I2C_SetBuffer
  6606 ;;		_I2C_SetDataCompleteCallback
  6607 ;; This function is called by:
  6608 ;;		_I2C_Read1ByteRegister
  6609 ;;		_I2C_DO_TX
  6610 ;;		_I2C_DO_RX
  6611 ;;		_I2C_DO_TX_EMPTY
  6612 ;;		_I2C_DO_ADDRESS_NACK
  6613 ;;		_I2C_DO_RX_EMPTY
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617  00F2                     _rd1RegCompleteHandler:	
  6618                           ;psect for function _rd1RegCompleteHandler
  6619                           
  6620  00F2                     l2206:	
  6621                           ;incstack = 0
  6622                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6623                           
  6624                           
  6625                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6626  00F2  3001               	movlw	1
  6627  00F3  00F0               	movwf	I2C_SetBuffer@bufferSize
  6628  00F4  3000               	movlw	0
  6629  00F5  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6630  00F6  0879               	movf	rd1RegCompleteHandler@ptr,w
  6631  00F7  3180  20D1  3180   	fcall	_I2C_SetBuffer
  6632  00FA                     l2208:
  6633                           
  6634                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6635  00FA  3000               	movlw	0
  6636  00FB  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  6637  00FC  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  6638  00FD  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  6639  00FE  3180  209D  3180   	fcall	_I2C_SetDataCompleteCallback
  6640  0101                     l2210:
  6641                           
  6642                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6643  0101  3002               	movlw	2
  6644  0102                     l228:
  6645  0102  0008               	return
  6646  0103                     __end_of_rd1RegCompleteHandler:
  6647                           
  6648                           	psect	text46
  6649  00E1                     __ptext46:	
  6650 ;; *************** function _wr2RegCompleteHandler *****************
  6651 ;; Defined at:
  6652 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  ptr             1    9[COMMON] PTR void 
  6655 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6656 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      enum E360
  6661 ;; Registers used:
  6662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6668 ;;      Params:         1       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0
  6671 ;;      Totals:         1       0       0       0       0       0       0
  6672 ;;Total ram usage:        1 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; Hardware stack levels required when called: 2
  6675 ;; This function calls:
  6676 ;;		_I2C_SetBuffer
  6677 ;;		_I2C_SetDataCompleteCallback
  6678 ;; This function is called by:
  6679 ;;		_I2C_Write2ByteRegister
  6680 ;;		_I2C_DO_TX
  6681 ;;		_I2C_DO_RX
  6682 ;;		_I2C_DO_TX_EMPTY
  6683 ;;		_I2C_DO_ADDRESS_NACK
  6684 ;;		_I2C_DO_RX_EMPTY
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688  00E1                     _wr2RegCompleteHandler:	
  6689                           ;psect for function _wr2RegCompleteHandler
  6690                           
  6691  00E1                     l2230:	
  6692                           ;incstack = 0
  6693                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6694                           
  6695                           
  6696                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6697  00E1  3002               	movlw	2
  6698  00E2  00F0               	movwf	I2C_SetBuffer@bufferSize
  6699  00E3  3000               	movlw	0
  6700  00E4  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6701  00E5  0879               	movf	wr2RegCompleteHandler@ptr,w
  6702  00E6  3180  20D1  3180   	fcall	_I2C_SetBuffer
  6703  00E9                     l2232:
  6704                           
  6705                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6706  00E9  3000               	movlw	0
  6707  00EA  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  6708  00EB  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  6709  00EC  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  6710  00ED  3180  209D  3180   	fcall	_I2C_SetDataCompleteCallback
  6711  00F0                     l2234:
  6712                           
  6713                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6714  00F0  3004               	movlw	4
  6715  00F1                     l237:
  6716  00F1  0008               	return
  6717  00F2                     __end_of_wr2RegCompleteHandler:
  6718                           
  6719                           	psect	text47
  6720  009D                     __ptext47:	
  6721 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6722 ;; Defined at:
  6723 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  6726 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6727 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6728 ;;  ptr             1    7[COMMON] PTR void 
  6729 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6730 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;		None
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  1    wreg      void 
  6735 ;; Registers used:
  6736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6742 ;;      Params:         3       0       0       0       0       0       0
  6743 ;;      Locals:         0       0       0       0       0       0       0
  6744 ;;      Temps:          1       0       0       0       0       0       0
  6745 ;;      Totals:         4       0       0       0       0       0       0
  6746 ;;Total ram usage:        4 bytes
  6747 ;; Hardware stack levels used: 1
  6748 ;; Hardware stack levels required when called: 1
  6749 ;; This function calls:
  6750 ;;		_I2C_SetCallback
  6751 ;; This function is called by:
  6752 ;;		_I2C_Read2ByteRegister
  6753 ;;		_I2C_Write1ByteRegister
  6754 ;;		_I2C_ReadDataBlock
  6755 ;;		_rd1RegCompleteHandler
  6756 ;;		_rd2RegCompleteHandler
  6757 ;;		_wr1RegCompleteHandler
  6758 ;;		_wr2RegCompleteHandler
  6759 ;;		_rdBlkRegCompleteHandler
  6760 ;;		_I2C_Read1ByteRegister
  6761 ;;		_I2C_Write2ByteRegister
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765  009D                     _I2C_SetDataCompleteCallback:	
  6766                           ;psect for function _I2C_SetDataCompleteCallback
  6767                           
  6768  009D                     l2192:	
  6769                           ;incstack = 0
  6770                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6771                           
  6772                           
  6773                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6774  009D  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  6775  009E  00F1               	movwf	I2C_SetCallback@cb+1
  6776  009F  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  6777  00A0  00F0               	movwf	I2C_SetCallback@cb
  6778  00A1  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  6779  00A2  00F8               	movwf	??_I2C_SetDataCompleteCallback
  6780  00A3  0878               	movf	??_I2C_SetDataCompleteCallback,w
  6781  00A4  00F2               	movwf	I2C_SetCallback@ptr
  6782  00A5  3000               	movlw	0
  6783  00A6  3181  219E  3180   	fcall	_I2C_SetCallback
  6784  00A9                     l377:
  6785  00A9  0008               	return
  6786  00AA                     __end_of_I2C_SetDataCompleteCallback:
  6787                           
  6788                           	psect	text48
  6789  019E                     __ptext48:	
  6790 ;; *************** function _I2C_SetCallback *****************
  6791 ;; Defined at:
  6792 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  idx             1    wreg     enum E3370
  6795 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  6796 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6797 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6798 ;;  ptr             1    2[COMMON] PTR void 
  6799 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6800 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  idx             1    4[COMMON] enum E3370
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6812 ;;      Params:         3       0       0       0       0       0       0
  6813 ;;      Locals:         1       0       0       0       0       0       0
  6814 ;;      Temps:          1       0       0       0       0       0       0
  6815 ;;      Totals:         5       0       0       0       0       0       0
  6816 ;;Total ram usage:        5 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_I2C_SetDataCompleteCallback
  6822 ;;		_I2C_SetAddressNackCallback
  6823 ;;		_I2C_SetWriteCollisionCallback
  6824 ;;		_I2C_SetDataNackCallback
  6825 ;;		_I2C_SetTimeoutCallback
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829  019E                     _I2C_SetCallback:	
  6830                           ;psect for function _I2C_SetCallback
  6831                           
  6832                           
  6833                           ;incstack = 0
  6834                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  6835                           ;I2C_SetCallback@idx stored from wreg
  6836  019E  00F4               	movwf	I2C_SetCallback@idx
  6837  019F                     l2186:
  6838                           
  6839                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  6840  019F  0870               	movf	I2C_SetCallback@cb,w
  6841  01A0  0471               	iorwf	I2C_SetCallback@cb+1,w
  6842  01A1  1903               	btfsc	3,2
  6843  01A2  29A4               	goto	u991
  6844  01A3  29A5               	goto	u990
  6845  01A4                     u991:
  6846  01A4  29B6               	goto	l2190
  6847  01A5                     u990:
  6848  01A5                     l2188:
  6849                           
  6850                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6851  01A5  3574               	lslf	I2C_SetCallback@idx,w
  6852  01A6  3EC2               	addlw	(low (_I2C_Status| 0))& (0+255)
  6853  01A7  0086               	movwf	6
  6854  01A8  0187               	clrf	7
  6855  01A9  0870               	movf	I2C_SetCallback@cb,w
  6856  01AA  3FC0               	movwi [0]fsr1
  6857  01AB  0871               	movf	I2C_SetCallback@cb+1,w
  6858  01AC  3FC1               	movwi [1]fsr1
  6859                           
  6860                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  6861  01AD  0872               	movf	I2C_SetCallback@ptr,w
  6862  01AE  00F3               	movwf	??_I2C_SetCallback
  6863  01AF  0874               	movf	I2C_SetCallback@idx,w
  6864  01B0  3ECE               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6865  01B1  0086               	movwf	6
  6866  01B2  0187               	clrf	7
  6867  01B3  0873               	movf	??_I2C_SetCallback,w
  6868  01B4  0081               	movwf	1
  6869                           
  6870                           ;mcc_generated_files/i2c_master.c: 304:     }
  6871  01B5  29C3               	goto	l394
  6872  01B6                     l2190:
  6873                           
  6874                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6875  01B6  3574               	lslf	I2C_SetCallback@idx,w
  6876  01B7  3EC2               	addlw	(low (_I2C_Status| 0))& (0+255)
  6877  01B8  0086               	movwf	6
  6878  01B9  0187               	clrf	7
  6879  01BA  30EA               	movlw	low _I2C_CallbackReturnStop
  6880  01BB  3FC0               	movwi [0]fsr1
  6881  01BC  300F               	movlw	high _I2C_CallbackReturnStop
  6882  01BD  3FC1               	movwi [1]fsr1
  6883                           
  6884                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6885  01BE  0874               	movf	I2C_SetCallback@idx,w
  6886  01BF  3ECE               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6887  01C0  0086               	movwf	6
  6888  01C1  0187               	clrf	7
  6889  01C2  0181               	clrf	1
  6890  01C3                     l394:
  6891  01C3  0008               	return
  6892  01C4                     __end_of_I2C_SetCallback:
  6893                           
  6894                           	psect	text49
  6895  00D1                     __ptext49:	
  6896 ;; *************** function _I2C_SetBuffer *****************
  6897 ;; Defined at:
  6898 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  buffer          1    wreg     PTR void 
  6901 ;;		 -> get_calibration_data_BMP180@buffer_I2C(22), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Writ
      +e2ByteRegister@reg(1), 
  6902 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  6903 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  6904 ;;  bufferSize      2    0[COMMON] unsigned int 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  buffer          1    3[COMMON] PTR void 
  6907 ;;		 -> get_calibration_data_BMP180@buffer_I2C(22), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Writ
      +e2ByteRegister@reg(1), 
  6908 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  6909 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6919 ;;      Params:         2       0       0       0       0       0       0
  6920 ;;      Locals:         1       0       0       0       0       0       0
  6921 ;;      Temps:          1       0       0       0       0       0       0
  6922 ;;      Totals:         4       0       0       0       0       0       0
  6923 ;;Total ram usage:        4 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_I2C_Read2ByteRegister
  6929 ;;		_I2C_Write1ByteRegister
  6930 ;;		_I2C_ReadDataBlock
  6931 ;;		_rd1RegCompleteHandler
  6932 ;;		_rd2RegCompleteHandler
  6933 ;;		_wr1RegCompleteHandler
  6934 ;;		_wr2RegCompleteHandler
  6935 ;;		_rdBlkRegCompleteHandler
  6936 ;;		_I2C_Read1ByteRegister
  6937 ;;		_I2C_Write2ByteRegister
  6938 ;;		_I2C_WriteNBytes
  6939 ;;		_I2C_ReadNBytes
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943  00D1                     _I2C_SetBuffer:	
  6944                           ;psect for function _I2C_SetBuffer
  6945                           
  6946                           
  6947                           ;incstack = 0
  6948                           ; Regs used in _I2C_SetBuffer: [wreg]
  6949                           ;I2C_SetBuffer@buffer stored from wreg
  6950  00D1  00F3               	movwf	I2C_SetBuffer@buffer
  6951  00D2                     l2194:
  6952                           
  6953                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  6954  00D2  0021               	movlb	1	; select bank1
  6955  00D3  1DDE               	btfss	(_I2C_Status^(0+128)+28),3
  6956  00D4  28D6               	goto	u1001
  6957  00D5  28D7               	goto	u1000
  6958  00D6                     u1001:
  6959  00D6  28E0               	goto	l374
  6960  00D7                     u1000:
  6961  00D7                     l2196:
  6962                           
  6963                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  6964  00D7  0873               	movf	I2C_SetBuffer@buffer,w
  6965  00D8  00F2               	movwf	??_I2C_SetBuffer
  6966  00D9  0872               	movf	??_I2C_SetBuffer,w
  6967  00DA  00D9               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
  6968                           
  6969                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  6970  00DB  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  6971  00DC  00DB               	movwf	((_I2C_Status+1)^(0+128)+24)
  6972  00DD  0870               	movf	I2C_SetBuffer@bufferSize,w
  6973  00DE  00DA               	movwf	(_I2C_Status^(0+128)+24)
  6974  00DF                     l2198:
  6975                           
  6976                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  6977  00DF  11DE               	bcf	(_I2C_Status^(0+128)+28),3
  6978  00E0                     l374:
  6979  00E0  0008               	return
  6980  00E1                     __end_of_I2C_SetBuffer:
  6981                           
  6982                           	psect	text50
  6983  0FFD                     __ptext50:	
  6984 ;; *************** function _I2C_MasterStop *****************
  6985 ;; Defined at:
  6986 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		None
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7000 ;;      Params:         0       0       0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_I2C_DO_SEND_STOP
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013  0FFD                     _I2C_MasterStop:	
  7014                           ;psect for function _I2C_MasterStop
  7015                           
  7016  0FFD                     l2202:	
  7017                           ;incstack = 0
  7018                           ; Regs used in _I2C_MasterStop: []
  7019                           
  7020                           
  7021                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  7022  0FFD  0024               	movlb	4	; select bank4
  7023  0FFE  1516               	bsf	22,2	;volatile
  7024  0FFF                     l540:
  7025  0FFF  0008               	return
  7026  1000                     __end_of_I2C_MasterStop:
  7027                           
  7028                           	psect	text51
  7029  0FFA                     __ptext51:	
  7030 ;; *************** function _I2C_MasterEnableRestart *****************
  7031 ;; Defined at:
  7032 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		None
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7046 ;;      Params:         0       0       0       0       0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0
  7049 ;;      Totals:         0       0       0       0       0       0       0
  7050 ;;Total ram usage:        0 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_I2C_DO_SEND_RESTART_READ
  7056 ;;		_I2C_DO_SEND_RESTART_WRITE
  7057 ;;		_I2C_DO_SEND_RESTART
  7058 ;;		_I2C_DO_RX_EMPTY
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062  0FFA                     _I2C_MasterEnableRestart:	
  7063                           ;psect for function _I2C_MasterEnableRestart
  7064                           
  7065  0FFA                     l2200:	
  7066                           ;incstack = 0
  7067                           ; Regs used in _I2C_MasterEnableRestart: []
  7068                           
  7069                           
  7070                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  7071  0FFA  0024               	movlb	4	; select bank4
  7072  0FFB  1496               	bsf	22,1	;volatile
  7073  0FFC                     l528:
  7074  0FFC  0008               	return
  7075  0FFD                     __end_of_I2C_MasterEnableRestart:
  7076                           
  7077                           	psect	text52
  7078  0FF7                     __ptext52:	
  7079 ;; *************** function _I2C_MasterStart *****************
  7080 ;; Defined at:
  7081 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1    wreg      void 
  7088 ;; Registers used:
  7089 ;;		None
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7095 ;;      Params:         0       0       0       0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0
  7098 ;;      Totals:         0       0       0       0       0       0       0
  7099 ;;Total ram usage:        0 bytes
  7100 ;; Hardware stack levels used: 1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_I2C_MasterOperation
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108  0FF7                     _I2C_MasterStart:	
  7109                           ;psect for function _I2C_MasterStart
  7110                           
  7111  0FF7                     l2478:	
  7112                           ;incstack = 0
  7113                           ; Regs used in _I2C_MasterStart: []
  7114                           
  7115                           
  7116                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  7117  0FF7  0024               	movlb	4	; select bank4
  7118  0FF8  1416               	bsf	22,0	;volatile
  7119  0FF9                     l537:
  7120  0FF9  0008               	return
  7121  0FFA                     __end_of_I2C_MasterStart:
  7122                           
  7123                           	psect	text53
  7124  013D                     __ptext53:	
  7125 ;; *************** function _I2C_Close *****************
  7126 ;; Defined at:
  7127 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  returnValue     1    1[COMMON] enum E355
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      enum E355
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7141 ;;      Params:         0       0       0       0       0       0       0
  7142 ;;      Locals:         1       0       0       0       0       0       0
  7143 ;;      Temps:          1       0       0       0       0       0       0
  7144 ;;      Totals:         2       0       0       0       0       0       0
  7145 ;;Total ram usage:        2 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 1
  7148 ;; This function calls:
  7149 ;;		_I2C_MasterClearIrq
  7150 ;;		_I2C_MasterClose
  7151 ;;		_I2C_MasterDisableIrq
  7152 ;; This function is called by:
  7153 ;;		_I2C_Read2ByteRegister
  7154 ;;		_I2C_Write1ByteRegister
  7155 ;;		_I2C_ReadDataBlock
  7156 ;;		_I2C_Read1ByteRegister
  7157 ;;		_I2C_Write2ByteRegister
  7158 ;;		_I2C_WriteNBytes
  7159 ;;		_I2C_ReadNBytes
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163  013D                     _I2C_Close:	
  7164                           ;psect for function _I2C_Close
  7165                           
  7166  013D                     l2562:	
  7167                           ;incstack = 0
  7168                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  7169                           
  7170                           
  7171                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  7172  013D  01F1               	clrf	I2C_Close@returnValue
  7173  013E  0AF1               	incf	I2C_Close@returnValue,f
  7174                           
  7175                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  7176  013F  0021               	movlb	1	; select bank1
  7177  0140  18DE               	btfsc	(_I2C_Status^(0+128)+28),1
  7178  0141  2943               	goto	u1121
  7179  0142  2944               	goto	u1120
  7180  0143                     u1121:
  7181  0143  2957               	goto	l2576
  7182  0144                     u1120:
  7183  0144                     l2564:
  7184                           
  7185                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  7186  0144  115E               	bcf	(_I2C_Status^(0+128)+28),2
  7187  0145                     l2566:
  7188                           
  7189                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  7190  0145  30FF               	movlw	255
  7191  0146  00F0               	movwf	??_I2C_Close
  7192  0147  0870               	movf	??_I2C_Close,w
  7193  0148  00D8               	movwf	(_I2C_Status^(0+128)+22)
  7194  0149                     l2568:
  7195                           
  7196                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  7197  0149  318F  27EE  3181   	fcall	_I2C_MasterClearIrq
  7198  014C                     l2570:
  7199                           
  7200                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  7201  014C  318F  27F4  3181   	fcall	_I2C_MasterDisableIrq
  7202  014F                     l2572:
  7203                           
  7204                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  7205  014F  318F  27F1  3181   	fcall	_I2C_MasterClose
  7206  0152                     l2574:
  7207                           
  7208                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  7209  0152  0021               	movlb	1	; select bank1
  7210  0153  085D               	movf	(_I2C_Status^(0+128)+27),w
  7211  0154  00F0               	movwf	??_I2C_Close
  7212  0155  0870               	movf	??_I2C_Close,w
  7213  0156  00F1               	movwf	I2C_Close@returnValue
  7214  0157                     l2576:
  7215                           
  7216                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  7217  0157  0871               	movf	I2C_Close@returnValue,w
  7218  0158                     l355:
  7219  0158  0008               	return
  7220  0159                     __end_of_I2C_Close:
  7221                           
  7222                           	psect	text54
  7223  0FF4                     __ptext54:	
  7224 ;; *************** function _I2C_MasterDisableIrq *****************
  7225 ;; Defined at:
  7226 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		None
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7240 ;;      Params:         0       0       0       0       0       0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0
  7243 ;;      Totals:         0       0       0       0       0       0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used: 1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_I2C_Close
  7250 ;;		_I2C_SetTimeOut
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254  0FF4                     _I2C_MasterDisableIrq:	
  7255                           ;psect for function _I2C_MasterDisableIrq
  7256                           
  7257  0FF4                     l2500:	
  7258                           ;incstack = 0
  7259                           ; Regs used in _I2C_MasterDisableIrq: []
  7260                           
  7261                           
  7262                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  7263  0FF4  0021               	movlb	1	; select bank1
  7264  0FF5  1191               	bcf	17,3	;volatile
  7265  0FF6                     l564:
  7266  0FF6  0008               	return
  7267  0FF7                     __end_of_I2C_MasterDisableIrq:
  7268                           
  7269                           	psect	text55
  7270  0FF1                     __ptext55:	
  7271 ;; *************** function _I2C_MasterClose *****************
  7272 ;; Defined at:
  7273 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		None
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7287 ;;      Params:         0       0       0       0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used: 1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_I2C_Close
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300  0FF1                     _I2C_MasterClose:	
  7301                           ;psect for function _I2C_MasterClose
  7302                           
  7303  0FF1                     l2502:	
  7304                           ;incstack = 0
  7305                           ; Regs used in _I2C_MasterClose: []
  7306                           
  7307                           
  7308                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  7309  0FF1  0024               	movlb	4	; select bank4
  7310  0FF2  1295               	bcf	21,5	;volatile
  7311  0FF3                     l519:
  7312  0FF3  0008               	return
  7313  0FF4                     __end_of_I2C_MasterClose:
  7314                           
  7315                           	psect	text56
  7316  0FEE                     __ptext56:	
  7317 ;; *************** function _I2C_MasterClearIrq *****************
  7318 ;; Defined at:
  7319 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		None
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7333 ;;      Params:         0       0       0       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0
  7336 ;;      Totals:         0       0       0       0       0       0       0
  7337 ;;Total ram usage:        0 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_I2C_Open
  7343 ;;		_I2C_Close
  7344 ;;		_I2C_MasterFsm
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348  0FEE                     _I2C_MasterClearIrq:	
  7349                           ;psect for function _I2C_MasterClearIrq
  7350                           
  7351  0FEE                     l2304:	
  7352                           ;incstack = 0
  7353                           ; Regs used in _I2C_MasterClearIrq: []
  7354                           
  7355                           
  7356                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  7357  0FEE  0020               	movlb	0	; select bank0
  7358  0FEF  1191               	bcf	17,3	;volatile
  7359  0FF0                     l567:
  7360  0FF0  0008               	return
  7361  0FF1                     __end_of_I2C_MasterClearIrq:
  7362                           
  7363                           	psect	text57
  7364  0090                     __ptext57:	
  7365 ;; *************** function _SYSTEM_Initialize *****************
  7366 ;; Defined at:
  7367 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;		None
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, pclath, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7381 ;;      Params:         0       0       0       0       0       0       0
  7382 ;;      Locals:         0       0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0
  7384 ;;      Totals:         0       0       0       0       0       0       0
  7385 ;;Total ram usage:        0 bytes
  7386 ;; Hardware stack levels used: 1
  7387 ;; Hardware stack levels required when called: 1
  7388 ;; This function calls:
  7389 ;;		_I2C_Initialize
  7390 ;;		_OSCILLATOR_Initialize
  7391 ;;		_PIN_MANAGER_Initialize
  7392 ;;		_WDT_Initialize
  7393 ;; This function is called by:
  7394 ;;		_main
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398  0090                     _SYSTEM_Initialize:	
  7399                           ;psect for function _SYSTEM_Initialize
  7400                           
  7401  0090                     l2724:	
  7402                           ;incstack = 0
  7403                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7404                           
  7405                           
  7406                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  7407  0090  3180  2072  3180   	fcall	_I2C_Initialize
  7408                           
  7409                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7410  0093  3181  2159  3180   	fcall	_PIN_MANAGER_Initialize
  7411                           
  7412                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7413  0096  3180  2084  3180   	fcall	_OSCILLATOR_Initialize
  7414                           
  7415                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7416  0099  3180  200E  3180   	fcall	_WDT_Initialize
  7417  009C                     l63:
  7418  009C  0008               	return
  7419  009D                     __end_of_SYSTEM_Initialize:
  7420                           
  7421                           	psect	text58
  7422  000E                     __ptext58:	
  7423 ;; *************** function _WDT_Initialize *****************
  7424 ;; Defined at:
  7425 ;;		line 73 in file "mcc_generated_files/mcc.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7439 ;;      Params:         0       0       0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0
  7442 ;;      Totals:         0       0       0       0       0       0       0
  7443 ;;Total ram usage:        0 bytes
  7444 ;; Hardware stack levels used: 1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_SYSTEM_Initialize
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452  000E                     _WDT_Initialize:	
  7453                           ;psect for function _WDT_Initialize
  7454                           
  7455  000E                     l2622:	
  7456                           ;incstack = 0
  7457                           ; Regs used in _WDT_Initialize: [wreg]
  7458                           
  7459                           
  7460                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  7461  000E  3016               	movlw	22
  7462  000F  0021               	movlb	1	; select bank1
  7463  0010  0097               	movwf	23	;volatile
  7464  0011                     l72:
  7465  0011  0008               	return
  7466  0012                     __end_of_WDT_Initialize:
  7467                           
  7468                           	psect	text59
  7469  0159                     __ptext59:	
  7470 ;; *************** function _PIN_MANAGER_Initialize *****************
  7471 ;; Defined at:
  7472 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7486 ;;      Params:         0       0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_SYSTEM_Initialize
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499  0159                     _PIN_MANAGER_Initialize:	
  7500                           ;psect for function _PIN_MANAGER_Initialize
  7501                           
  7502  0159                     l2580:	
  7503                           ;incstack = 0
  7504                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7505                           
  7506                           
  7507                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7508  0159  0022               	movlb	2	; select bank2
  7509  015A  0190               	clrf	16	;volatile
  7510                           
  7511                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7512  015B  018F               	clrf	15	;volatile
  7513                           
  7514                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7515  015C  018C               	clrf	12	;volatile
  7516                           
  7517                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7518  015D  018D               	clrf	13	;volatile
  7519                           
  7520                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7521  015E  018E               	clrf	14	;volatile
  7522  015F                     l2582:
  7523                           
  7524                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  7525  015F  300F               	movlw	15
  7526  0160  0021               	movlb	1	; select bank1
  7527  0161  0090               	movwf	16	;volatile
  7528  0162                     l2584:
  7529                           
  7530                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  7531  0162  30FF               	movlw	255
  7532  0163  008C               	movwf	12	;volatile
  7533  0164                     l2586:
  7534                           
  7535                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xCF;
  7536  0164  30CF               	movlw	207
  7537  0165  008D               	movwf	13	;volatile
  7538  0166                     l2588:
  7539                           
  7540                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7541  0166  30FF               	movlw	255
  7542  0167  008E               	movwf	14	;volatile
  7543  0168                     l2590:
  7544                           
  7545                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7546  0168  30FF               	movlw	255
  7547  0169  008F               	movwf	15	;volatile
  7548  016A                     l2592:
  7549                           
  7550                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  7551  016A  30FF               	movlw	255
  7552  016B  0023               	movlb	3	; select bank3
  7553  016C  008F               	movwf	15	;volatile
  7554  016D                     l2594:
  7555                           
  7556                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x0F;
  7557  016D  300F               	movlw	15
  7558  016E  008D               	movwf	13	;volatile
  7559  016F                     l2596:
  7560                           
  7561                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  7562  016F  3007               	movlw	7
  7563  0170  0090               	movwf	16	;volatile
  7564  0171                     l2598:
  7565                           
  7566                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
  7567  0171  303F               	movlw	63
  7568  0172  008C               	movwf	12	;volatile
  7569  0173                     l2600:
  7570                           
  7571                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  7572  0173  0024               	movlb	4	; select bank4
  7573  0174  0190               	clrf	16	;volatile
  7574  0175                     l2602:
  7575                           
  7576                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  7577  0175  018D               	clrf	13	;volatile
  7578  0176                     l2604:
  7579                           
  7580                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  7581  0176  0021               	movlb	1	; select bank1
  7582  0177  1795               	bsf	21,7	;volatile
  7583  0178                     l2606:
  7584                           
  7585                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  7586  0178  0022               	movlb	2	; select bank2
  7587  0179  019D               	clrf	29	;volatile
  7588  017A                     l39:
  7589  017A  0008               	return
  7590  017B                     __end_of_PIN_MANAGER_Initialize:
  7591                           
  7592                           	psect	text60
  7593  0084                     __ptext60:	
  7594 ;; *************** function _OSCILLATOR_Initialize *****************
  7595 ;; Defined at:
  7596 ;;		line 59 in file "mcc_generated_files/mcc.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7610 ;;      Params:         0       0       0       0       0       0       0
  7611 ;;      Locals:         0       0       0       0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0
  7613 ;;      Totals:         0       0       0       0       0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_SYSTEM_Initialize
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623  0084                     _OSCILLATOR_Initialize:	
  7624                           ;psect for function _OSCILLATOR_Initialize
  7625                           
  7626  0084                     l2616:	
  7627                           ;incstack = 0
  7628                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7629                           
  7630                           
  7631                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  7632  0084  3070               	movlw	112
  7633  0085  0021               	movlb	1	; select bank1
  7634  0086  0099               	movwf	25	;volatile
  7635  0087                     l2618:
  7636                           
  7637                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  7638  0087  0198               	clrf	24	;volatile
  7639  0088                     l2620:
  7640                           
  7641                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  7642  0088  0022               	movlb	2	; select bank2
  7643  0089  0196               	clrf	22	;volatile
  7644  008A                     l66:	
  7645                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
  7646                           
  7647                           
  7648                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
  7649  008A  0021               	movlb	1	; select bank1
  7650  008B  1F1A               	btfss	26,6	;volatile
  7651  008C  288E               	goto	u1131
  7652  008D  288F               	goto	u1130
  7653  008E                     u1131:
  7654  008E  288A               	goto	l66
  7655  008F                     u1130:
  7656  008F                     l69:
  7657  008F  0008               	return
  7658  0090                     __end_of_OSCILLATOR_Initialize:
  7659                           
  7660                           	psect	text61
  7661  0072                     __ptext61:	
  7662 ;; *************** function _I2C_Initialize *****************
  7663 ;; Defined at:
  7664 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7678 ;;      Params:         0       0       0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0
  7681 ;;      Totals:         0       0       0       0       0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_SYSTEM_Initialize
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691  0072                     _I2C_Initialize:	
  7692                           ;psect for function _I2C_Initialize
  7693                           
  7694  0072                     l2608:	
  7695                           ;incstack = 0
  7696                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  7697                           
  7698                           
  7699                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  7700  0072  0024               	movlb	4	; select bank4
  7701  0073  0194               	clrf	20	;volatile
  7702  0074                     l2610:
  7703                           
  7704                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  7705  0074  3008               	movlw	8
  7706  0075  0095               	movwf	21	;volatile
  7707  0076                     l2612:
  7708                           
  7709                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  7710  0076  0196               	clrf	22	;volatile
  7711                           
  7712                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  7713  0077  3013               	movlw	19
  7714  0078  0092               	movwf	18	;volatile
  7715  0079                     l2614:
  7716                           
  7717                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  7718  0079  1295               	bcf	21,5	;volatile
  7719  007A                     l347:
  7720  007A  0008               	return
  7721  007B                     __end_of_I2C_Initialize:
  7722  007E                     btemp	set	126	;btemp
  7723  007E                     wtemp0	set	126
  7724                           
  7725                           	psect	idloc
  7726                           
  7727                           ;Config register IDLOC0 @ 0x8000
  7728                           ;	unspecified, using default values
  7729  8000                     	org	32768
  7730  8000  3FFF               	dw	16383
  7731                           
  7732                           ;Config register IDLOC1 @ 0x8001
  7733                           ;	unspecified, using default values
  7734  8001                     	org	32769
  7735  8001  3FFF               	dw	16383
  7736                           
  7737                           ;Config register IDLOC2 @ 0x8002
  7738                           ;	unspecified, using default values
  7739  8002                     	org	32770
  7740  8002  3FFF               	dw	16383
  7741                           
  7742                           ;Config register IDLOC3 @ 0x8003
  7743                           ;	unspecified, using default values
  7744  8003                     	org	32771
  7745  8003  3FFF               	dw	16383
  7746                           
  7747                           	psect	config
  7748                           
  7749                           ;Config register CONFIG1 @ 0x8007
  7750                           ;	Oscillator Selection
  7751                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7752                           ;	Watchdog Timer Enable
  7753                           ;	WDTE = OFF, WDT disabled
  7754                           ;	Power-up Timer Enable
  7755                           ;	PWRTE = OFF, PWRT disabled
  7756                           ;	MCLR Pin Function Select
  7757                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7758                           ;	Flash Program Memory Code Protection
  7759                           ;	CP = OFF, Program memory code protection is disabled
  7760                           ;	Data Memory Code Protection
  7761                           ;	CPD = OFF, Data memory code protection is disabled
  7762                           ;	Brown-out Reset Enable
  7763                           ;	BOREN = ON, Brown-out Reset enabled
  7764                           ;	Clock Out Enable
  7765                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7766                           ;	Internal/External Switchover
  7767                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7768                           ;	Fail-Safe Clock Monitor Enable
  7769                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7770  8007                     	org	32775
  7771  8007  3FE4               	dw	16356
  7772                           
  7773                           ;Config register CONFIG2 @ 0x8008
  7774                           ;	Flash Memory Self-Write Protection
  7775                           ;	WRT = OFF, Write protection off
  7776                           ;	Voltage Regulator Capacitor Enable
  7777                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  7778                           ;	PLL Enable
  7779                           ;	PLLEN = ON, 4x PLL enabled
  7780                           ;	Stack Overflow/Underflow Reset Enable
  7781                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7782                           ;	Brown-out Reset Voltage Selection
  7783                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7784                           ;	Low-Voltage Programming Enable
  7785                           ;	LVP = ON, Low-voltage programming enabled
  7786  8008                     	org	32776
  7787  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         190
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      76
    BANK1            80      0      63
    BANK2            80      0      64
    BANK3            80      0      56
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    I2C_DO_TX$1731$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1736	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1731	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$1730	const PTR FTN()enum E3352 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S465$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), I2C_ReadDataBlock@reg(BANK0[1]), I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(BANK0[1]), 
		 -> I2C_Read2ByteRegister@returnValue(BANK0[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S465$data_ptr	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), I2C_ReadDataBlock@reg(BANK0[1]), I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(BANK0[1]), 
		 -> I2C_Read2ByteRegister@returnValue(BANK0[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), I2C_ReadDataBlock@reg(BANK0[1]), I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(BANK0[1]), 
		 -> I2C_Read2ByteRegister@returnValue(BANK0[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S465$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S465$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3352[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(BANK0[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(BANK0[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_ReadDataBlock@data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    S313$data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 22
		 -> get_calibration_data_BMP180@buffer_I2C(BANK0[22]), 

    set_strip_led_color@COLOR_LED	PTR struct . size(1) Largest target is 64
		 -> COLOR_LED(BANK2[64]), 


Critical Paths under _main in COMMON

    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_get_calibration_data_BMP180
    _get_temperature_BMP180->_I2C_Read2ByteRegister
    _get_calibration_data_BMP180->_I2C_ReadDataBlock
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  256651
                                             67 BANK0      2     2      0
                  _SYSTEM_Initialize
        _get_calibration_data_BMP180
             _get_temperature_BMP180
                _set_strip_led_color
 ---------------------------------------------------------------------------------
 (1) _set_strip_led_color                                  9     8      1     458
                                              0 COMMON     9     8      1
 ---------------------------------------------------------------------------------
 (1) _get_temperature_BMP180                              33    29      4  171221
                                             14 BANK0     33    29      4
              _I2C_Read2ByteRegister
             _I2C_Write1ByteRegister
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2068
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               4     2      2   84296
                                              5 BANK0      4     2      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_Read2ByteRegister                                9     7      2   84265
                                              5 BANK0      9     7      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _get_calibration_data_BMP180                         53    27     26   84972
                                             14 BANK0     53    27     26
                  _I2C_ReadDataBlock
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadDataBlock                                    9     5      4   84441
                                              5 BANK0      9     5      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     1      3    1870
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             3     3      0      46
                                              0 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  3     3      0   78300
                                             13 COMMON     1     1      0
                                              3 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   78254
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            2     2      0      24
                                              0 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_calibration_data_BMP180
     _I2C_ReadDataBlock
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _get_temperature_BMP180
     _I2C_Read2ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     ___aldiv
     ___lmul
   _set_strip_led_color

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     111       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3F       8       78.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      38      12       70.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     111      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Aug 18 20:23:06 2023

get_temperature_BMP180@uncompensated_temperature 0047                           ??_I2C_DO_SEND_ADR_READ 0070  
                        ??_I2C_DO_SEND_ADR_WRITE 0071                                      _SSPSTATbits 0214  
                                             l39 017A                                               l63 009C  
                                             l72 0011                                               l66 008A  
                                             l69 008F                            ??_I2C_DO_SEND_RESTART 0070  
                                            l131 0562                                              l231 0113  
                                            l135 0592                                              l127 0531  
                                            l240 013C                                              l400 00B6  
                                            l225 0327                                              l137 05A9  
                                            l234 0124                                              l410 0083  
                                            l138 05B3                                              l228 0102  
                                            l404 021D                                              l180 03B3  
                                            l237 00F1                                              l413 0071  
                                            l350 02EB                                              l503 0FEB  
                                            l407 0023                                              l351 02EC  
                                            l416 03EC                                              l432 0345  
                                            l433 036D                                              l361 019D  
                                            l506 0FED                                              l522 000A  
                                            l450 024C                                              l347 007A  
                                            l355 0158                                              l419 0408  
                                            l540 0FFF                                              l444 0069  
                                            l516 00C3                                              l525 001E  
                                            l189 027F                                              l374 00E0  
                                            l534 0007                                              l519 0FF3  
                                            l543 0056                                              l471 002D  
                                            l367 0050                                              l383 00D0  
                                            l528 0FFC                                              l480 003C  
                                            l537 0FF9                                              l377 00A9  
                                            l394 01C3                                              l546 0019  
                                            l570 000D                                              l474 0032  
                                            l483 0041                                              l564 0FF6  
                                            l468 0028                                              l549 0015  
                                            l477 0037                                              l573 0057  
                                            l486 0046                                              l567 0FF0  
                                            l495 01EF                                              l489 004B  
                                            l577 005C                                              l594 06AF  
                                            l827 048C                                              l837 0508  
                                            l598 07DC                                              l776 02B2  
                                            u990 01A5                                              u991 01A4  
                         _I2C_MasterWaitForEvent 0057                                              wreg 0009  
                         _get_temperature_BMP180 06B0                     ??_I2C_SetAddressNackCallback 0078  
                         _I2C_Write1ByteRegister 024D                         ??_I2C_CallbackReturnStop 007A  
                                   _I2C_DO_RESET 0047                          ??_rd2RegCompleteHandler 007A  
                                           l2200 0FFA                                             l2202 0FFD  
                                           l2210 0101                                             l2300 0FEC  
                                           l2204 0012                                             l2230 00E1  
                                           l2206 00F2                                             l2214 0103  
                                           l2222 0114                                             l2310 0022  
                                           l2304 0FEE                                             l2232 00E9  
                                           l2208 00FA                                             l2216 010B  
                                           l2224 011C                                             l2240 013B  
                                           l2400 0068                                             l2234 00F0  
                                           l2218 0112                                             l2226 0123  
                                           l2410 0225                                             l2306 001F  
                                           l2314 007B                                             l2322 006A  
                                           l2330 03B4                                             l2250 0024  
                                           l2500 0FF4                                             l2244 0051  
                                           l2412 0228                                             l2404 021E  
                                           l2308 0021                                             l2316 007D  
                                           l2324 006C                                             l2252 0027  
                                           l2502 0FF1                                             l2190 01B6  
                                           l2238 0125                                             l2406 0221  
                                           l2422 022E                                             l2318 0082  
                                           l2326 0070                                             l2350 03EE  
                                           l2342 03C5                                             l2334 03BD  
                                           l2262 0033                                             l2430 0038  
                                           l2510 0187                                             l2600 0173  
                                           l2192 009D                                             l2272 0016  
                                           l2248 001B                                             l2416 022A  
                                           l2352 03FA                                             l3160 035F  
                                           l2256 0029                                             l2264 0036  
                                           l2432 003B                                             l2280 003D  
                                           l2440 004A                                             l2512 018C  
                                           l2520 019B                                             l2504 017D  
                                           l2610 0074                                             l2602 0175  
                                           l2194 00D2                                             l2186 019F  
                                           l2354 0405                                             l3162 03DE  
                                           l2338 03C1                                             l2370 0340  
                                           l2258 002C                                             l2290 0031  
                                           l2282 0040                                             l2274 0042  
                                           l2514 0190                                             l2506 0184  
                                           l2530 02C0                                             l2612 0076  
                                           l2620 0088                                             l2604 0176  
                                           l2196 00D7                                             l2188 01A5  
                                           l2268 0008                                             l3164 023E  
                                           l2356 0407                                             l2348 03C9  
                                           l2372 0343                                             l2364 0328  
                                           l2276 0045                                             l2436 0047  
                                           l2452 01CF                                             l2444 01C4  
                                           l2516 0195                                             l2508 0185  
                                           l2540 02D5                                             l2532 02C1  
                                           l2524 02B4                                             l2700 04B2  
                                           l2614 0079                                             l2606 0178  
                                           l2622 000E                                             l2198 00DF  
                                           l2286 0005                                             l2294 000B  
                                           l2382 034B                                             l2366 0332  
                                           l2438 0049                                             l3158 01E7  
                                           l2446 01C6                                             l2470 01F3  
                                           l2518 0198                                             l2550 02E7  
                                           l2542 02D9                                             l2534 02CA  
                                           l2526 02BB                                             l2630 0388  
                                           l2710 04E2                                             l2702 04BD  
                                           l2608 0072                                             l2616 0084  
                                           l2296 0FEA                                             l2368 0336  
                                           l2288 002E                                             l2448 01CB  
                                           l2472 01F8                                             l2480 00AA  
                                           l2552 02EA                                             l2544 02DE  
                                           l2536 02CF                                             l2528 02BF  
                                           l2632 0390                                             l2624 0370  
                                           l2720 0500                                             l2712 04E3  
                                           l2704 04C1                                             l2800 06B0  
                                           l2618 0087                                             l2570 014C  
                                           l2562 013D                                             l2378 0347  
                                           l2458 01D3                                             l2474 0200  
                                           l2482 00AB                                             l2490 00BC  
                                           l2546 02DF                                             l2538 02D0  
                                           l2634 0397                                             l2626 0372  
                                           l2650 026D                                             l2642 024F  
                                           l2714 04EA                                             l2706 04C8  
                                           l2810 073B                                             l2802 06C9  
                                           l2580 0159                                             l2724 0090  
                                           l2572 014F                                             l2564 0144  
                                           l2388 034F                                             l2396 0063  
                                           l2476 0206                                             l2468 01F0  
                                           l2484 00AE                                             l2492 00BD  
                                           l2548 02E4                                             l2556 00C4  
                                           l2660 0301                                             l2636 039A  
                                           l2628 037C                                             l2652 0274  
                                           l2644 024F                                             l2708 04DA  
                                           l2716 04F0                                             l2820 07AF  
                                           l2812 0742                                             l2804 06D5  
                                           l2740 053F                                             l2590 0168  
                                           l2582 015F                                             l2574 0152  
                                           l2566 0145                                             l2478 0FF7  
                                           l2398 0065                                             l2486 00B1  
                                           l2558 004C                                             l2494 00BF  
                                           l2662 030D                                             l2638 03A2  
                                           l2654 0277                                             l2646 0259  
                                           l2718 04F5                                             l2670 0280  
                                           l2822 07D4                                             l2806 06EE  
                                           l2750 0565                                             l2734 050E  
                                           l2726 050A                                             l2592 016A  
                                           l2584 0162                                             l2568 0149  
                                           l2576 0157                                             l2496 00C2  
                                           l2488 00B7                                             l2664 0315  
                                           l2656 02EF                                             l2648 0265  
                                           l2680 02AA                                             l2672 0288  
                                           l2816 074C                                             l2808 0733  
                                           l2760 058C                                             l2752 056F  
                                           l2736 052A                                             l2728 050D  
                                           l2594 016D                                             l2586 0164  
                                           l2666 031C                                             l2658 02F7  
                                           l2770 05B4                                             l2690 0490  
                                           l2674 028C                                             l2818 0794  
                                           l2762 0595                                             l2746 0540  
                                           l2738 0535                                             l2850 041A  
                                           l2596 016F                                             l2588 0166  
                                           l2668 031F                                             l2780 0608  
                                           l2772 05BF                                             l2692 049B  
                                           l2684 0479                                             l2676 0294  
                                           l2764 059F                                             l2748 055C  
                                           l2860 0443                                             l2852 0422  
                                           l2844 0409                                             l2598 0171  
                                           l2790 0667                                             l2782 061B  
                                           l2774 05CF                                             l2694 049F  
                                           l2686 047B                                             l2678 029B  
                                           l2758 0570                                             l2766 05A3  
                                           l2862 0456                                             l2854 042A  
                                           l2846 040C                                             l2792 067A  
                                           l2784 062E                                             l2776 05E2  
                                           l2696 04A7                                             l2688 047F  
                                           l2768 05AC                                             l2864 0469  
                                           l2856 0432                                             l2848 0418  
                                           l2794 068D                                             l2786 0641  
                                           l2778 05F5                                             l2698 04AF  
                                           l2858 043A                                             l2796 06A0  
                                           l2788 0654                                             u1000 00D7  
                                           u1001 00D6                                             u1010 03BC  
                                           u1011 03BB                                             u1020 0405  
                                           u1100 018C                                             u1021 0404  
                                           u1101 018B                                             u1030 0340  
                                           u1110 02BB                                             u1031 033F  
                                           u1111 02BA                                             u1120 0144  
                                           u1040 005C                                             u1200 028C  
                                           u1121 0143                                             u1041 005B  
                                           u1201 028B                                             u1130 008F  
                                           u1050 01F8                                             u1131 008E  
                                           u1051 01F7                                             u1060 0200  
                                           u1140 037C                                             u1300 04DA  
                                           u1061 01FF                                             u1141 037B  
                                           u1301 04D9                                             u1070 00B6  
                                           u1150 03A2                                             u1230 02AA  
                                           u1071 00B5                                             u1151 03A1  
                                           u1231 02A9                                             u1215 0295  
                                           u1080 00BC                                             u1160 0259  
                                           u1320 04F0                                             u1240 047F  
                                           u1400 055C                                             u1081 00BB  
                                           u1161 0258                                             u1321 04EF  
                                           u1305 04D6                                             u1241 047E  
                                           u1225 029C                                             u1401 055B  
                                           u1090 0184                                             u1170 027F  
                                           u1330 04F5                                             u1250 0490  
                                           u1410 056F                                             u1091 0183  
                                           u1171 027E                                             u1331 04F4  
                                           u1315 04E4                                             u1251 048F  
                                           u1411 056E                                             u1180 0301  
                                           u1260 04AF                                             u1500 073B  
                                           u1181 0300                                             u1261 04AE  
                                           u1501 073A                                             _LATA 010C  
                                           u1190 0327                                             u1510 0742  
                                           _LATB 010D                                             u1191 0326  
                                           u1511 0741                                             _LATC 010E  
                                           u1280 04C1                                             u1440 058C  
                                           u1360 052A                                             _LATD 010F  
                                           u1281 04C0                                             u1441 058B  
                                           u1425 0573                                             u1361 0529  
                                           u1345 0511                                             _LATE 0110  
                                           u1530 07CA                                             u1450 059F  
                                           u1434 0584                                             u1370 053F  
                                           u1354 0522                                             u1275 04B3  
                                           u1451 059E                                             u1435 0583  
                                           u1371 053E                                             u1355 0521  
                                           u1460 05A9                                             u1525 077B  
                                           u1461 05A8                                             u1470 05BC  
                                           u1295 04C2                                             u1535 07C6  
                                           u1480 06AB                                             u1560 0452  
                                           u1385 0543                                             u1490 0729  
                                           u1394 0554                                             u1395 0553  
                                           u1495 0725                                             u1947 0412  
                                           u1957 046F                                             u1967 05AD  
                                           u1977 06D9                                             _PLLR 04D6  
                                           _WPUB 020D                                             _WPUE 0210  
                        ??_wr2RegCompleteHandler 007A                                             _main 0409  
                       ?_I2C_CallbackReturnReset 0079                                             fsr0h 0005  
                                           fsr1h 0007                                             indf0 0000  
                                           fsr0l 0004                                             indf1 0001  
                                           fsr1l 0006                                 __end_of_I2C_Open 02ED  
                                           btemp 007E                                             start 0003  
                               ?_I2C_MasterClose 0070                                 ?_I2C_MasterStart 0070  
                                  _I2C_DO_RX_ACK 0038                                 ?_I2C_MasterWrite 0070  
                  __end_of_OSCILLATOR_Initialize 0090                                  __end_of___aldiv 0509  
                                          ?_main 0070                    set_strip_led_color@number_led 0074  
                              ??_I2C_DO_TX_EMPTY 007A                                            _TRISA 008C  
                                          _TRISB 008D                                            _TRISC 008E  
                                          _TRISD 008F                                            _TRISE 0090  
                            ___lmul@multiplicand 0074                                __end_of_I2C_DO_RX 036E  
                              __end_of_I2C_DO_TX 0409                                   _WDT_Initialize 000E  
                              __end_of_I2C_Close 0159                   I2C_MasterOperation@returnValue 0024  
                        _I2C_MasterEnableRestart 0FFA                                            pclath 000A  
                               ?_I2C_SetCallback 0070                             set_strip_led_color@i 0075  
                   I2C_SetAddressNackCallback@cb 0075                                            status 0003  
                                          wtemp0 007E                                ?_I2C_DO_SEND_STOP 0070  
                       get_pressure_BMP180@F3852 0065                               ??_I2C_DO_SEND_STOP 0070  
                                __initialization 07DD                                     __end_of_main 0479  
                      ?_I2C_DO_SEND_RESTART_READ 0070                                   ?_I2C_DO_RX_ACK 0070  
                                         ??_main 0063                                ?_I2C_MasterIsNack 0070  
                          _I2C_Read2ByteRegister 036E                                ?_I2C_MasterSetIrq 0070  
               I2C_Read2ByteRegister@returnValue 002C                               ??_I2C_MasterIsNack 0070  
                         __end_of_WDT_Initialize 0012                               ??_I2C_MasterSetIrq 0070  
                   I2C_ReadDataBlock@bufferBlock 002B                  __end_of_I2C_CallbackReturnReset 0FEE  
                                   _DATA_BMP_180 01A0                                           _BMP180 00A0  
                                         _APFCON 011D                    I2C_SetDataCompleteCallback@cb 0075  
                                         _ANSELA 018C                                           _ANSELB 018D  
                                         _ANSELD 018F                                           _ANSELE 0190  
                                         _BORCON 0116                                     ??_I2C_Poller 007D  
                                         _OSCCON 0099              __end_of_get_calibration_data_BMP180 06B0  
                    _get_calibration_data_BMP180 05B4                                           _WDTCON 0097  
                                         _SSPADD 0212                                           _SSPBUF 0211  
                              _I2C_ReadDataBlock 02ED                              _I2C_MasterGetRxData 0008  
                             ?_I2C_ReadDataBlock 0025                                           ___lmul 0280  
                                      ??___aldiv 0078                                    _I2C_MasterFsm 01F0  
                              I2C_SetCallback@cb 0070                              ??_I2C_ReadDataBlock 0029  
                                  _I2C_SetBuffer 00D1                               __end_of_I2C_Poller 00B7  
                   __end_of_I2C_MasterDisableIrq 0FF7                              _I2C_DO_ADDRESS_NACK 01C4  
                           ?_I2C_MasterGetRxData 0070                                        ?_I2C_Open 0070  
             __end_of_I2C_SetAddressNackCallback 00D1                       _I2C_SetAddressNackCallback 00C4  
                                ?_WDT_Initialize 0070                        ??_I2C_MasterEnableRestart 0070  
                              _SYSTEM_Initialize 0090                          __end_of__initialization 07FD  
                      __end_of_I2C_ReadDataBlock 0328                              _I2C_MasterOperation 017B  
                             ?_SYSTEM_Initialize 0070                             ?_I2C_DO_ADDRESS_NACK 0070  
                        _rdBlkRegCompleteHandler 0125                                   __pcstackCOMMON 0070  
                                 ?_I2C_MasterFsm 0070                                  ??_I2C_DO_RX_ACK 0070  
                         _I2C_CallbackReturnStop 0FEA                              ??_SYSTEM_Initialize 0070  
                                 ?_I2C_SetBuffer 0070                          ?_I2C_MasterWaitForEvent 0070  
                         ?_I2C_Read2ByteRegister 0025                    __end_of_I2C_DO_SEND_ADR_WRITE 0072  
                     ?_I2C_DO_SEND_RESTART_WRITE 0070                             ?_I2C_MasterOperation 0070  
                        ?_get_temperature_BMP180 002E                            ??_I2C_MasterGetRxData 0070  
                        ?_I2C_Write1ByteRegister 0025                                   _OPTION_REGbits 0095  
                                     ??_I2C_Open 0070                       __end_of_I2C_MasterClearIrq 0FF1  
                      __end_of_SYSTEM_Initialize 009D                                _I2C_MasterSendAck 0016  
                                     __pbssBANK0 0065                                       __pbssBANK1 00A0  
                                     __pbssBANK2 0120                                       __pbssBANK3 01A0  
                                  ??_I2C_DO_IDLE 0070                            I2C_ReadDataBlock@data 0026  
                                  ??_I2C_DO_RCEN 0070                    __end_of_rd2RegCompleteHandler 0114  
                   __end_of_I2C_MasterSendTxData 001F                               ?_I2C_MasterSendAck 0070  
                              _I2C_MasterStartRx 0005                            ??_I2C_DO_ADDRESS_NACK 007A  
                  __end_of_wr2RegCompleteHandler 00F2                              _I2C_DO_RX_NACK_STOP 003D  
                          _rd1RegCompleteHandler 00F2                               ?_I2C_MasterStartRx 0070  
                     __end_of_I2C_MasterSendNack 0016                            _wr1RegCompleteHandler 0114  
                                     __pmaintext 0409                              ??_I2C_MasterSendAck 0070  
                       rd1RegCompleteHandler@ptr 0079                      __end_of_I2C_DO_SEND_RESTART 0033  
                                _I2C_DO_TX_EMPTY 021E                                          ?___lmul 0070  
                            I2C_SetBuffer@buffer 0073                   __end_of_I2C_MasterWaitForEvent 005D  
                            ??_I2C_MasterStartRx 0070                                   ___lmul@product 0078  
                 __end_of_get_temperature_BMP180 07DD                            ??_I2C_MasterOperation 007D  
                 I2C_SetDataCompleteCallback@ptr 0077                   __end_of_I2C_Write1ByteRegister 0280  
                       ??_I2C_DO_RX_NACK_RESTART 0070                __end_of_I2C_DO_SEND_RESTART_WRITE 002E  
                           ?_I2C_DO_RX_NACK_STOP 0070                        __end_of_I2C_MasterSendAck 001A  
                                        _OSCTUNE 0098                                          _SSPCON1 0215  
                                        _SSPCON2 0216                                          _SSPSTAT 0214  
                      __end_of_I2C_MasterStartRx 0008                             I2C_Close@returnValue 0071  
                   ?_I2C_SetDataCompleteCallback 0075                                        _I2C_DO_RX 0328  
                                      _I2C_DO_TX 03B4                         get_temperature_BMP180@x1 004B  
                       get_temperature_BMP180@x2 003F                 __end_of_I2C_DO_SEND_RESTART_READ 0029  
                                      _I2C_Close 013D                              _set_strip_led_color 0509  
                      ??_rdBlkRegCompleteHandler 007A                             _I2C_MasterDisableIrq 0FF4  
                                ??_I2C_MasterFsm 0020                              __end_of_I2C_DO_IDLE 0024  
                            __end_of_I2C_DO_RCEN 006A                                          ___aldiv 0479  
                                ??_I2C_SetBuffer 0072                          I2C_SetBuffer@bufferSize 0070  
                                 _I2C_MasterOpen 00B7                                   _I2C_MasterStop 0FFD  
                                 _I2C_Initialize 0072                             ?_set_strip_led_color 0070  
                                        __ptext1 0509                                          __ptext2 06B0  
                                        __ptext3 0280                                          __ptext4 0479  
                                        __ptext5 024D                                          __ptext6 036E  
                                        __ptext7 05B4                                          __ptext8 02ED  
                                        __ptext9 00C4                            ??_I2C_DO_RX_NACK_STOP 0070  
                                      _COLOR_LED 0120                            _OSCILLATOR_Initialize 0084  
                               ___aldiv@dividend 0074                               I2C_SetCallback@idx 0074  
                       ??_PIN_MANAGER_Initialize 0070                    I2C_CallbackReturnReset@funPtr 0079  
                             I2C_SetCallback@ptr 0072                         wr1RegCompleteHandler@ptr 0079  
                      I2C_Write1ByteRegister@reg 0025                                          clrloop0 005E  
                           end_of_initialization 07FD                                       ?_I2C_DO_RX 0070  
                                     ?_I2C_DO_TX 0070                                       ?_I2C_Close 0070  
                         ?_rd1RegCompleteHandler 0079                          __end_of_I2C_DO_TX_EMPTY 024D  
                          ?_I2C_MasterDisableIrq 0070                           ?_wr1RegCompleteHandler 0079  
                               ___aldiv@quotient 0022                           __end_of_I2C_MasterOpen 00C4  
                         __end_of_I2C_MasterStop 1000                           __end_of_I2C_Initialize 007B  
                          ??_set_strip_led_color 0071                                 ??_WDT_Initialize 0070  
                __end_of_rdBlkRegCompleteHandler 013D                             _I2C_MasterSendTxData 001A  
                    ?_I2C_SetAddressNackCallback 0075                             _status_communication 006B  
           set_strip_led_color@number_led_choose 0078                                      _I2C_DO_IDLE 001F  
                                    _I2C_DO_RCEN 0063                         I2C_ReadDataBlock@address 002A  
                     rdBlkRegCompleteHandler@ptr 0079                    I2C_Write1ByteRegister@address 0028  
                        ?_I2C_CallbackReturnStop 0079                         _I2C_DO_SEND_RESTART_READ 0024  
                   I2C_CallbackReturnStop@funPtr 0079                          ??_I2C_Read2ByteRegister 0027  
                                ?_I2C_MasterOpen 0070                                  ?_I2C_MasterStop 0070  
                                ?_I2C_Initialize 0070                          _I2C_CallbackReturnReset 0FEC  
                                 __end_of___lmul 02B3                            ?_I2C_MasterSendTxData 0070  
                         ?_OSCILLATOR_Initialize 0070                      ??_I2C_DO_SEND_RESTART_WRITE 0070  
                            start_initialization 07DD                                    ?_I2C_DO_RESET 0070  
                                    ??_I2C_DO_RX 007A                                      ??_I2C_DO_TX 007A  
                              ??_I2C_MasterClose 0070                           ??_I2C_MasterDisableIrq 0070  
                                    ??_I2C_Close 0070                                ??_I2C_MasterStart 0070  
                              ??_I2C_MasterWrite 007E                   __end_of_I2C_CallbackReturnStop 0FEC  
                         _I2C_DO_RX_NACK_RESTART 0042                                 ?_I2C_DO_TX_EMPTY 0070  
                             _I2C_MasterClearIrq 0FEE                                         ??___lmul 0078  
                            ?_I2C_MasterClearIrq 0070                      __end_of_I2C_MasterGetRxData 000B  
                          __end_of_I2C_DO_RX_ACK 003D                                 _I2C_DO_SEND_STOP 0033  
                              ??_I2C_SetCallback 0073                              I2C_Open@returnValue 0072  
                             _I2C_MasterSendNack 0012                         ?_I2C_MasterEnableRestart 0070  
                              _i2c_fsmStateTable 0800                         I2C_Read2ByteRegister@reg 0025  
                          _I2C_DO_SEND_ADR_WRITE 006A                                        ___latbits 0002  
                                  __pcstackBANK0 0020                                   ??_I2C_DO_RESET 0070  
                            ?_I2C_MasterSendNack 0070                     __end_of_I2C_DO_SEND_ADR_READ 0084  
                           ??_I2C_MasterClearIrq 0070                      __end_of_I2C_DO_ADDRESS_NACK 01F0  
                               _I2C_MasterIsNack 0051                        _I2C_DO_SEND_RESTART_WRITE 0029  
                               _I2C_MasterSetIrq 000B                             I2C_ReadDataBlock@len 0027  
                           I2C_ReadDataBlock@reg 0025                            _rd2RegCompleteHandler 0103  
                         _PIN_MANAGER_Initialize 0159                            _wr2RegCompleteHandler 00E1  
                      ??_I2C_CallbackReturnReset 007A                      __end_of_I2C_MasterOperation 019E  
                           ??_I2C_MasterSendNack 0070                         rd2RegCompleteHandler@ptr 0079  
                                       ?___aldiv 0070                           ??_I2C_MasterSendTxData 0070  
                      __end_of_i2c_fsmStateTable 0820                          get_temperature_BMP180@t 0043  
                        I2C_MasterOperation@read 0023                                         _I2C_Open 02B3  
                        ??_rd1RegCompleteHandler 007A                          ??_wr1RegCompleteHandler 007A  
                                ___aldiv@divisor 0070                     I2C_Read2ByteRegister@address 002B  
                                ___aldiv@counter 0020                                         _LATBbits 010D  
                   ?_get_calibration_data_BMP180 002E                                        clear_ram0 005D  
                                       _PIE1bits 0091                                         _PIR1bits 0011  
                                       _PIR2bits 0012                            __end_of_I2C_MasterFsm 021E  
                    __end_of_I2C_DO_RX_NACK_STOP 0042                  __end_of_I2C_MasterEnableRestart 0FFD  
                          __end_of_I2C_SetBuffer 00E1                           ?_I2C_DO_SEND_ADR_WRITE 0070  
                       I2C_MasterSendTxData@data 0070                         wr2RegCompleteHandler@ptr 0079  
                              ___lmul@multiplier 0070                       ??_I2C_DO_SEND_RESTART_READ 0070  
                       ?_rdBlkRegCompleteHandler 0079                                       _I2C_Poller 00AA  
                                     _I2C_Status 00C2                                     ?_I2C_DO_IDLE 0070  
                                   ?_I2C_DO_RCEN 0070                           ?_rd2RegCompleteHandler 0079  
                               ??_I2C_MasterOpen 0070                           ?_wr2RegCompleteHandler 0079  
                               ??_I2C_MasterStop 0070                         ??_I2C_MasterWaitForEvent 0070  
                               ??_I2C_Initialize 0070                    ??_get_calibration_data_BMP180 0048  
                       ??_get_temperature_BMP180 0032                      __end_of_set_strip_led_color 05B4  
                           __end_of_I2C_DO_RESET 004C                         ??_I2C_Write1ByteRegister 0027  
                        ??_OSCILLATOR_Initialize 0070                             _I2C_DO_SEND_ADR_READ 007B  
                  __end_of_I2C_Read2ByteRegister 03B4                                  _I2C_MasterClose 0FF1  
                  I2C_SetAddressNackCallback@ptr 0077                                  I2C_Open@address 0071  
                                _I2C_MasterStart 0FF7                                  _I2C_MasterWrite 004C  
                                       __ptext10 02B3                                         __ptext11 00B7  
                                       __ptext20 003D                                         __ptext12 004C  
                                       __ptext21 0038                                         __ptext13 017B  
                                       __ptext30 007B                                         __ptext22 0033  
                                       __ptext14 00AA                                         __ptext31 001F  
                                       __ptext23 002E                                         __ptext15 0057  
                                       __ptext40 0FEC                                         __ptext32 021E  
                                       __ptext24 0029                                         __ptext16 01F0  
                                       __ptext41 0FEA                                         __ptext33 000B  
                                       __ptext25 0024                                         __ptext17 01C4  
                                       __ptext50 0FFD                                         __ptext42 0125  
                                       __ptext34 0051                                         __ptext26 0063  
                                       __ptext18 0047                                         __ptext51 0FFA  
                                       __ptext43 0114                                         __ptext35 001A  
                                       __ptext27 0328                                         __ptext19 0042  
                                       __ptext60 0084                                         __ptext52 0FF7  
                                       __ptext44 0103                                         __ptext36 0016  
                                       __ptext28 03B4                                         __ptext61 0072  
                                       __ptext53 013D                                         __ptext45 00F2  
                                       __ptext37 0008                                         __ptext29 006A  
                                       __ptext54 0FF4                                         __ptext46 00E1  
                                       __ptext38 0012                                         __ptext55 0FF1  
                                       __ptext47 009D                                         __ptext39 0005  
                                       __ptext56 0FEE                                         __ptext48 019E  
                                       __ptext57 0090                                         __ptext49 00D1  
                                       __ptext58 000E                                         __ptext59 0159  
                       set_strip_led_color@i_240 0077                         set_strip_led_color@i_239 0076  
            __end_of_I2C_SetDataCompleteCallback 00AA                      _I2C_SetDataCompleteCallback 009D  
                        ?_I2C_DO_RX_NACK_RESTART 0070                         __end_of_I2C_DO_SEND_STOP 0038  
                                _I2C_SetCallback 019E                    ??_I2C_SetDataCompleteCallback 0078  
          get_calibration_data_BMP180@buffer_I2C 004D                       I2C_Write1ByteRegister@data 0026  
                          ?_I2C_DO_SEND_ADR_READ 0070                         __end_of_I2C_MasterIsNack 0057  
                       __end_of_I2C_MasterSetIrq 000E                   __end_of_I2C_DO_RX_NACK_RESTART 0047  
               get_calibration_data_BMP180@F3834 01C2                                      ?_I2C_Poller 0070  
                        ?_PIN_MANAGER_Initialize 0070                              _I2C_DO_SEND_RESTART 002E  
                   set_strip_led_color@COLOR_LED 0070                          __end_of_I2C_MasterClose 0FF4  
                        __end_of_I2C_MasterStart 0FFA                          __end_of_I2C_MasterWrite 0051  
                                  __pstringtext1 0800                             ?_I2C_DO_SEND_RESTART 0070  
                                   ___aldiv@sign 0021                                      _SSPCON1bits 0215  
                                    _SSPCON2bits 0216                          __end_of_I2C_SetCallback 01C4  
                 __end_of_PIN_MANAGER_Initialize 017B                    __end_of_rd1RegCompleteHandler 0103  
                  __end_of_wr1RegCompleteHandler 0125  
